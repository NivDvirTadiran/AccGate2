{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/_helpers/auth.interceptor.ts","./src/app/_services/auth.service.ts","./src/app/_services/token-storage.service.ts","./src/app/_services/user.service.ts","./src/app/_shared/event-bus.service.ts","./src/app/_shared/event.class.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.config.ts","./src/app/app.module.ts","./src/app/board-admin/board-admin.component.html","./src/app/board-admin/board-admin.component.ts","./src/app/board-moderator/board-moderator.component.ts","./src/app/board-moderator/board-moderator.component.html","./src/app/board-user/board-user.component.ts","./src/app/board-user/board-user.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login2/login-main/login-main.component.ts","./src/app/login2/login-main/login-main.component.html","./src/app/login2/login-main/register-form2/register-form2.component.ts","./src/app/login2/login-main/register-form2/register-form2.component.html","./src/app/login2/login-main/replace-pass-form2/replace-pass-form2.component.ts","./src/app/login2/login-main/replace-pass-form2/replace-pass-form2.component.html","./src/app/login2/login2-routing.module.ts","./src/app/login2/login2.component.ts","./src/app/login2/login2.component.html","./src/app/login2/login2.module.ts","./src/app/login2/logtest/logtest.component.ts","./src/app/login2/logtest/logtest.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/register-form/register-form.component.ts","./src/app/login/register-form/register-form.component.html","./src/app/login/replace-pass-form/replace-pass-form.component.ts","./src/app/login/replace-pass-form/replace-pass-form.component.html","./src/app/pipes/api-error-message.pipe.ts","./src/app/pipes/login-error-message.pipe.ts","./src/app/profile2/profile2.component.ts","./src/app/profile2/profile2.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/register/register.component.html","./src/app/register/register.component.ts","./src/app/storybook/pipes/api-error-message.pipe.ts","./src/app/storybook/pipes/api-error-message.service.ts","./src/app/storybook/storybook.module.ts","./src/environments/environment.ts","./src/main.ts","./src/stories/actions/action-avatar/action-avatar.component.ts","./src/stories/actions/action-avatar/action-avatar.component.html","./src/stories/actions/action-input/action-input.component.html","./src/stories/actions/action-input/action-input.component.ts","./src/stories/app-menu/app-menu.component.ts","./src/stories/app-menu/app-menu.component.html","./src/stories/avatars/avatar.component.ts","./src/stories/avatars/avatar.component.html","./src/stories/buttons/button-apps/button-apps.component.ts","./src/stories/buttons/button-apps/button-apps.component.html","./src/stories/buttons/button-continue/button-continue.component.ts","./src/stories/buttons/button-continue/button-continue.component.html","./src/stories/buttons/button-ex/button-ex.component.ts","./src/stories/buttons/button-ex/button-ex.component.html","./src/stories/buttons/button-example/button.component.ts","./src/stories/buttons/button-exclamation-mark/button-exclamation-mark.component.ts","./src/stories/buttons/button-exclamation-mark/button-exclamation-mark.component.html","./src/stories/buttons/button-fortest/button-fortest.component.ts","./src/stories/buttons/button-fortest/custom-directive/Highlight.directive.ts","./src/stories/buttons/button-globe/button-globe.component.ts","./src/stories/buttons/button-globe/button-globe.component.html","./src/stories/buttons/button-language/button-language.component.ts","./src/stories/buttons/button-language/button-language.component.html","./src/stories/buttons/button-successfully/button-successfully.component.ts","./src/stories/buttons/button-successfully/button-successfully.component.html","./src/stories/buttons/button-tadiran/button-tadiran.component.ts","./src/stories/cards/card.component.ts","./src/stories/cards/card.component.html","./src/stories/directive/bubble-avatar/bubble-avatar.component.ts","./src/stories/directive/bubble-avatar/bubble-avatar.component.html","./src/stories/directive/bubble-avatar/popover.directive.ts","./src/stories/directive/bubble-input/bubble-input.component.ts","./src/stories/directive/bubble-input/bubble-input.component.html","./src/stories/directive/bubble-input/popover-input.directive.ts","./src/stories/directive/dynamic-comp.directive.ts","./src/stories/forms/login-form/login-form-component.ts","./src/stories/forms/login-form/login-form-component.html","./src/stories/forms/registry-form/registry-form.component.ts","./src/stories/forms/registry-form/registry-form.component.html","./src/stories/forms/replace-pass-form/replace-pass-form.component.ts","./src/stories/forms/replace-pass-form/replace-pass-form.component.html","./src/stories/inputs/story-input.component.ts","./src/stories/inputs/story-input.component.html","./src/stories/pages/background1/background1Component.ts","./src/stories/pages/background1/background1Component.html","./src/stories/pass-strength/pass-strength.component.ts","./src/stories/pass-strength/pass-strength.component.html","./src/stories/task-list/task-list.component.ts","./src/stories/task-list/task-list.component.html","./src/stories/task/task.component.ts","./src/stories/task/task.component.html"],"names":[],"mappings":"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","file":"main-es2017.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { HTTP_INTERCEPTORS, HttpEvent, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\n\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\r\nimport { catchError, filter, switchMap, take } from 'rxjs/operators';\r\n\r\n const TOKEN_HEADER_KEY = 'Authorization';       // for Spring Boot back-end\r\n//const TOKEN_HEADER_KEY = 'x-access-token';   // for Node.js Express back-end\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  private isRefreshing = false;\r\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  constructor(private tokenService: TokenStorageService, private authService: AuthService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let authReq = req;\r\n    const token = this.tokenService.getToken();\r\n    if (token != null) {\r\n      authReq = this.addTokenHeader(req, token);\r\n      // for Spring Boot back-end\r\n      // authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\r\n\r\n      // for Node.js Express back-end\r\n      //authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, token) });\r\n    }\r\n    return next.handle(authReq).pipe(catchError(error => {\r\n      if (error instanceof HttpErrorResponse && !authReq.url.includes('auth/signin') && error.status === 401) {\r\n        return this.handle401Error(authReq, next);\r\n      }\r\n      return throwError(error);\r\n    }));\r\n  }\r\n\r\n\r\n  private handle401Error(request: HttpRequest<any>, next: HttpHandler) {\r\n    if (!this.isRefreshing) {\r\n      this.isRefreshing = true;\r\n      this.refreshTokenSubject.next(null);\r\n      const token = this.tokenService.getRefreshToken();\r\n      if (token)\r\n        return this.authService.refreshToken(token).pipe(\r\n          switchMap((token: any) => {\r\n            this.isRefreshing = false;\r\n            this.tokenService.saveToken(token.accessToken);\r\n            this.tokenService.saveRefreshToken(token.refreshToken);\r\n            this.refreshTokenSubject.next(token.accessToken);\r\n\r\n            return next.handle(this.addTokenHeader(request, token.accessToken));\r\n          }),\r\n          catchError((err) => {\r\n            this.isRefreshing = false;\r\n\r\n            this.tokenService.signOut();\r\n            return throwError(err);\r\n          })\r\n        );\r\n    }\r\n    return this.refreshTokenSubject.pipe(\r\n      filter(token => token !== null),\r\n      take(1),\r\n      switchMap((token) => next.handle(this.addTokenHeader(request, token)))\r\n    );\r\n  }\r\n  private addTokenHeader(request: HttpRequest<any>, token: string) {\r\n    /* for Spring Boot back-end */\r\n     return request.clone({ headers: request.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\r\n    /* for Node.js Express back-end */\r\n    //return request.clone({ headers: request.headers.set(TOKEN_HEADER_KEY, token) });\r\n  }\r\n/*\r\n  public forseRefreshToken2() {\r\n    const token = this.tokenService.getRefreshToken();\r\n    if (token)\r\n      this.authService.refreshToken(token).pipe(\r\n        switchMap((token: any) => {\r\n          this.isRefreshing = false;\r\n          this.tokenService.saveToken(token.accessToken);\r\n          this.refreshTokenSubject.next(token.accessToken);\r\n\r\n          filter(token => token !== null),\r\n            take(1),\r\n            switchMap((token) => next.handle(this.addTokenHeader(request, token)))\r\n        }),\r\n        catchError((err) => {\r\n          this.isRefreshing = false;\r\n\r\n          this.tokenService.signOut();\r\n          return throwError(err);\r\n        })\r\n      );\r\n  }\r\n*/\r\n  public forseRefreshToken(): void {\r\n    const token = this.tokenService.getRefreshToken();\r\n    if (token)\r\n      this.authService.refreshToken(token).subscribe(\r\n        data => {\r\n          this.isRefreshing = false;\r\n          this.tokenService.saveToken(data.accessToken);\r\n          this.refreshTokenSubject.next(data.accessToken);\r\n\r\n\r\n        },\r\n        (err) => {\r\n          this.isRefreshing = false;\r\n\r\n          this.tokenService.signOut();\r\n          return throwError(err);\r\n        }\r\n      );\r\n  }\r\n}\r\n\r\nexport const authInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {AppConfig} from \"../app.config\";\r\n\r\n\r\nconst AUTH_API = AppConfig.accServer.ACCWEBServers+'/accGate/auth/';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signin', {\r\n      username,\r\n      password\r\n    }, httpOptions);\r\n  }\r\n\r\n  registerForm(username: string, email: string, password: string, phone: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'register-form', {\r\n      username,\r\n      email,\r\n      password,\r\n      phone,\r\n    }, {responseType: 'text'});\r\n  }\r\n\r\n  replacePassForm(username: string, oldPassword: string, password: string, confirmPassword: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'replace-pass-form', {\r\n      username,\r\n      oldPassword,\r\n      password,\r\n      confirmPassword,\r\n    }, {responseType: 'text'});\r\n  }\r\n\r\n  register(username: string, email: string, password: string, roles: Array<String>): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signup', {\r\n      username,\r\n      email,\r\n      password,\r\n      roles,\r\n    }, httpOptions);\r\n  }\r\n\r\n  getToken(url: string, username: string, email: string, password: string): Observable<any> {\r\n    return this.http.post(url, {\r\n      username,\r\n      email,\r\n      password\r\n    }, httpOptions);\r\n  }\r\n\r\n  // login, register\r\n  refreshToken(token: string): Observable<any>  {\r\n    return this.http.post(AUTH_API + 'refreshtoken', {\r\n      refreshToken: token\r\n    }, httpOptions);\r\n  }\r\n\r\n  // login, register\r\n  webapptab(token: string, webapp: string): Promise<any>  {\r\n    return this.http.post(AUTH_API + 'webapptab', {\r\n      refreshToken: token,\r\n      webApp: webapp\r\n    }, httpOptions).toPromise();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nconst TOKEN_KEY = 'token';\r\nconst REFRESHTOKEN_KEY = 'auth-refreshtoken';\r\nconst USER_KEY = 'user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenStorageService {\r\n  constructor() { }\r\n\r\n  signOut(): void {\r\n    window.sessionStorage.clear();\r\n  }\r\n\r\n  public saveToken(token: string): void {\r\n    window.sessionStorage.removeItem(TOKEN_KEY);\r\n    window.sessionStorage.setItem(TOKEN_KEY, token);\r\n    const user = this.getUser();\r\n    if (user.id) {\r\n      this.saveUser({ ...user, accessToken: token });\r\n    }\r\n  }\r\n\r\n  public getToken(): string | null {\r\n    return window.sessionStorage.getItem(TOKEN_KEY);\r\n  }\r\n\r\n  public saveRefreshToken(token: string): void {\r\n    window.sessionStorage.removeItem(REFRESHTOKEN_KEY);\r\n    window.sessionStorage.setItem(REFRESHTOKEN_KEY, token);\r\n    const user = this.getUser();\r\n    if (user.id) {\r\n      user.refreshToken = token;\r\n      this.saveUser(user);\r\n    }\r\n  }\r\n  public getRefreshToken(): string | null {\r\n    return window.sessionStorage.getItem(REFRESHTOKEN_KEY);\r\n  }\r\n\r\n  public saveUser(user: any): void {\r\n    window.sessionStorage.removeItem(USER_KEY);\r\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\r\n  }\r\n\r\n  public getUser(): any {\r\n    const user = window.sessionStorage.getItem(USER_KEY);\r\n    if (user) {\r\n      return JSON.parse(user);\r\n    }\r\n    return {};\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {AppConfig} from \"../app.config\";\r\n\r\nconst API_URL = AppConfig.accServer.ACCWEBServers+'/accGate/test/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getPublicContent(): Observable<any> {\r\n    return this.http.get(API_URL + 'all', { responseType: 'text' });\r\n  }\r\n\r\n  getAccVersion(): Observable<any> {\r\n    return this.http.get(API_URL + 'accversion', { responseType: 'text' });\r\n  }\r\n\r\n  getUserBoard(): Observable<any> {\r\n    return this.http.get(API_URL + 'user', { responseType: 'text' });\r\n  }\r\n\r\n  getModeratorBoard(): Observable<any> {\r\n    return this.http.get(API_URL + 'mod', { responseType: 'text' });\r\n  }\r\n\r\n  getAdminBoard(): Observable<any> {\r\n    return this.http.get(API_URL + 'admin', { responseType: 'text' });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { EventData } from './event.class';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventBusService {\r\n  private subject$ = new Subject<EventData>();\r\n  constructor() { }\r\n  emit(event: EventData) {\r\n    this.subject$.next(event);\r\n  }\r\n  on(eventName: string, action: any): Subscription {\r\n    return this.subject$.pipe(\r\n      filter((e: EventData) => e.name === eventName),\r\n      map((e: EventData) => e[\"value\"])).subscribe(action);\r\n  }\r\n}\r\n","export class EventData {\r\n  name: string;\r\n  value: any;\r\n  constructor(name: string, value: any) {\r\n    this.name = name;\r\n    this.value = value;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { BoardUserComponent } from './board-user/board-user.component';\r\nimport { BoardModeratorComponent } from './board-moderator/board-moderator.component';\r\nimport { BoardAdminComponent } from './board-admin/board-admin.component';\r\nimport { AppRoutingGuard } from './app-routing.guard';\r\n//import { Login2RoutingModule } from \"./login-main/login-main-routing.module\";\r\nimport Profile2Component from \"./profile2/profile2.component\";\r\nimport { RegisterComponent } from \"./register/register.component\";\r\n//import { Register2Component } from \"./register2/register2.component\";\r\nimport { RegisterFormComponent } from \"./login/register-form/register-form.component\";\r\nimport RegisterForm2Component from \"./login2/login-main/register-form2/register-form2.component\";\r\nimport {Login2Component} from \"./login2/login2.component\";\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'login2', loadChildren: () => import('./login2/login2.module').then(m => m.Login2Module), },\r\n  { path: 'register', component: RegisterComponent },\r\n  //{ path: 'register2', component: Register2Component },\r\n  { path: 'registeform', component: RegisterFormComponent },\r\n  //{ path: 'registerform2', component: RegisterForm2Component },\r\n  { path: 'profile', component: ProfileComponent/*, canActivate: [AppRoutingGuard] */},\r\n  { path: 'profile2', component: Profile2Component/*, canActivate: [AppRoutingGuard] */},\r\n  { path: 'user', component: BoardUserComponent },\r\n  { path: 'mod', component: BoardModeratorComponent },\r\n  { path: 'admin', component: BoardAdminComponent },\r\n  { path: '', redirectTo: 'login2', pathMatch: 'full' },\r\n  { path: 'home', loadChildren: () => import('./app.module').then(m => m.AppModule),},\r\n  { path: '**', redirectTo: 'login2',  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes/*, {useHash: true}*/)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit, OnDestroy  } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { TokenStorageService } from './_services/token-storage.service';\r\nimport { EventBusService } from './_shared/event-bus.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  private roles: string[] = [];\r\n  public isLoggedIn = false;\r\n  showAdminBoard = false;\r\n  showModeratorBoard = false;\r\n  username?: string;\r\n  eventBusSub?: Subscription;\r\n  title?: 'accGate';\r\n\r\n  constructor(private tokenStorageService: TokenStorageService, private eventBusService: EventBusService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\r\n\r\n    if (this.isLoggedIn) {\r\n      const user = this.tokenStorageService.getUser();\r\n      this.roles = user.roles;\r\n\r\n      this.showAdminBoard = (this.roles.includes('Admin') || this.roles.includes('SupervisorAdmin'));\r\n      this.showModeratorBoard = this.roles.includes('SupervisorMonitor');\r\n\r\n      this.username = user.username;\r\n    }\r\n    this.eventBusSub = this.eventBusService.on('logout', () => {\r\n      this.logout();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.eventBusSub)\r\n      this.eventBusSub.unsubscribe();\r\n  }\r\n\r\n  logout(): void {\r\n    this.tokenStorageService.signOut();\r\n    this.isLoggedIn = false;\r\n    this.roles = [];\r\n    this.showAdminBoard = false;\r\n    this.showModeratorBoard = false;\r\n    //window.location.reload();\r\n  }\r\n}\r\n","\r\n<router-outlet  id=\"app\" ></router-outlet>\r\n\r\n<!--div id=\"app\">\r\n  <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\r\n\r\n    <a href=\"#\" class=\"navbar-brand\">\r\n      <img _ngcontent-c0=\"accGate\" class=\"nav-img\" srcset=\"./assets/images/TadiranTelecom2.webp\"  width=\"56\"\r\n           height=\"56\"><label>accGate</label>\r\n    </a>\r\n    <ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\r\n      <li class=\"nav-item\">\r\n        <a href=\"/login-main\" class=\"nav-link\" routerLink=\"login-main\">Page </a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a href=\"/home\" class=\"nav-link\" routerLink=\"home\">Home </a>\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"showAdminBoard\">\r\n        <a href=\"/admin\" class=\"nav-link\" routerLink=\"admin\">Admin Board</a>\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"showModeratorBoard\">\r\n        <a href=\"/mod\" class=\"nav-link\" routerLink=\"mod\">Moderator Board</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a href=\"/user\" class=\"nav-link\" *ngIf=\"isRegSuccess\" routerLink=\"user\">User</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"!isRegSuccess\">\r\n      <li class=\"nav-item\">\r\n        <a href=\"/register\" class=\"nav-link\" routerLink=\"register\">Sign Up</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a href=\"/login\" class=\"nav-link\" routerLink=\"login\">Login</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"isRegSuccess\">\r\n      <li class=\"nav-item\">\r\n        <a href=\"/profile\" class=\"nav-link\" routerLink=\"profile\">{{ username }}</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a href class=\"nav-link\" (click)=\"logout()\">LogOut</a>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div-->\r\n","import {InjectionToken} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n// parse ful url to ip,port, params\r\nvar parsedUrl = new URL(window.location.href);\r\nvar url = parsedUrl.hostname;\r\nvar port = parsedUrl.port;\r\nvar protocol = parsedUrl.protocol;\r\nconst AUTH_API = protocol + \"//\" + url + \":\" + port;\r\n\r\nexport let APP_CONFIG = new InjectionToken('app.config');\r\nexport const AppConfig = {\r\n  accServer: {\r\n    ACCWEBServers: AUTH_API //'https://172.28.8.245:8445'\r\n  },\r\n  endpoints: {\r\n\r\n    TOKEN_KEY: 'token',\r\n    REFRESHTOKEN_KEY: 'auth-refreshtoken',\r\n    USER_KEY: 'user'\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n//import {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport Profile2Component from './profile2/profile2.component';\r\nimport { BoardAdminComponent } from './board-admin/board-admin.component';\r\nimport { BoardModeratorComponent } from './board-moderator/board-moderator.component';\r\nimport { BoardUserComponent } from './board-user/board-user.component';\r\n\r\nimport { authInterceptorProviders, AuthInterceptor } from './_helpers/auth.interceptor';\r\nimport {NgbDatepickerModule} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { MdbAccordionModule } from 'mdb-angular-ui-kit/accordion';\r\nimport { MdbCarouselModule } from 'mdb-angular-ui-kit/carousel';\r\nimport { MdbCheckboxModule } from 'mdb-angular-ui-kit/checkbox';\r\nimport { MdbCollapseModule } from 'mdb-angular-ui-kit/collapse';\r\nimport { MdbDropdownModule } from 'mdb-angular-ui-kit/dropdown';\r\nimport { MdbFormsModule } from 'mdb-angular-ui-kit/forms';\r\nimport { MdbModalModule } from 'mdb-angular-ui-kit/modal';\r\nimport { MdbPopoverModule } from 'mdb-angular-ui-kit/popover';\r\nimport { MdbRadioModule } from 'mdb-angular-ui-kit/radio';\r\nimport { MdbRangeModule } from 'mdb-angular-ui-kit/range';\r\nimport { MdbRippleModule } from 'mdb-angular-ui-kit/ripple';\r\nimport { MdbScrollspyModule } from 'mdb-angular-ui-kit/scrollspy';\r\nimport { MdbTabsModule } from 'mdb-angular-ui-kit/tabs';\r\nimport { MdbTooltipModule } from 'mdb-angular-ui-kit/tooltip';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ModalModule, TooltipModule, PopoverModule, ButtonsModule, MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport { RegisterFormComponent } from './login/register-form/register-form.component';\r\nimport {ReplacePassFormComponent} from \"./login/replace-pass-form/replace-pass-form.component\";\r\nimport {ApiErrorMessagePipe} from \"./pipes/api-error-message.pipe\";\r\nimport {LoginErrorMessagePipe} from \"./pipes/login-error-message.pipe\";\r\nimport Button from '../stories/buttons/button-example/button.component'\r\n\r\n//import {TaskListComponent} from '../stories/task-list/task-list.component'\r\nimport {Login2Module} from \"./login2/login2.module\";\r\nimport {StorybookModule} from \"./storybook/storybook.module\";\r\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\r\n\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        LoginComponent,\r\n        RegisterComponent,\r\n        //Register2Component,\r\n        HomeComponent,\r\n        ProfileComponent,\r\n        Profile2Component,\r\n        BoardAdminComponent,\r\n        BoardModeratorComponent,\r\n        BoardUserComponent,\r\n        RegisterFormComponent,\r\n        ReplacePassFormComponent,\r\n        ApiErrorMessagePipe,\r\n        LoginErrorMessagePipe,\r\n\r\n\r\n\r\n    ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgbDatepickerModule,\r\n    MdbAccordionModule,\r\n    MdbCarouselModule,\r\n    MdbCheckboxModule,\r\n    MdbCollapseModule,\r\n    MdbDropdownModule,\r\n    MdbFormsModule,\r\n    MdbModalModule,\r\n    MdbPopoverModule,\r\n    MdbRadioModule,\r\n    MdbRangeModule,\r\n    MdbRippleModule,\r\n    MdbScrollspyModule,\r\n    MdbTabsModule,\r\n    MdbTooltipModule,\r\n    //MdbValidationModule,\r\n    BrowserAnimationsModule,\r\n    ModalModule,\r\n    ButtonsModule,\r\n    MDBBootstrapModule.forRoot(),\r\n    Login2Module,\r\n    StorybookModule\r\n  ],\r\n  providers: [\r\n    authInterceptorProviders,\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n","<div class=\"container\">\r\n  <header class=\"jumbotron\">\r\n    <p>{{ content }}</p>\r\n  </header>\r\n  <div class=\"col-md-12\">\r\n    <div class=\"card card-container\">\r\n      <img\r\n        id=\"profile-img\"\r\n        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n        class=\"profile-img-card\"\r\n      />\r\n      <form\r\n        *ngIf=\"!isSuccessful\"\r\n        name=\"form\"\r\n        (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n        #f=\"ngForm\"\r\n        novalidate\r\n      >\r\n        <div class=\"form-group\">\r\n          <label for=\"userName\">Username</label>\r\n          <input type=\"text\" class=\"form-control\" name=\"userName\" [(ngModel)]=\"form.userName\"\r\n                 required minlength=\"3\" maxlength=\"20\" #userName=\"ngModel\"/>\r\n          <div class=\"alert-danger\" *ngIf=\"userName.errors && f.submitted\">\r\n            <div *ngIf=\"userName.errors.required\">Username is required</div>\r\n            <div *ngIf=\"userName.errors.minlength\">\r\n              Username must be at least 3 characters\r\n            </div>\r\n            <div *ngIf=\"userName.errors.maxlength\">\r\n              Username must be at most 20 characters\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email</label>\r\n          <input type=\"email\" class=\"form-control\" name=\"email\" [(ngModel)]=\"form.email\"\r\n                 required email #email=\"ngModel\"/>\r\n          <div class=\"alert-danger\" *ngIf=\"email.errors && f.submitted\">\r\n            <div *ngIf=\"email.errors.required\">Email is required</div>\r\n            <div *ngIf=\"email.errors.email\">\r\n              Email must be a valid email address\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"form.password\"\r\n                 required minlength=\"6\" #password=\"ngModel\"/>\r\n          <div class=\"alert-danger\" *ngIf=\"password.errors && f.submitted\">\r\n            <div *ngIf=\"password.errors.required\">Password is required</div>\r\n            <div *ngIf=\"password.errors.minlength\">\r\n              Password must be at least 6 characters\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"privilege\">Privilege Level</label>\r\n          <select type=\"privilege\" class=\"form-control\" name=\"privilege\" id=\"pet-select\"\r\n                  [(ngModel)]=\"form.roles\" required #roles=\"ngModel\">\r\n            <option value=\"\">--Please choose an option--</option>\r\n            <option value=\"admin\">Admin</option>\r\n            <option value=\"mod\">Moderator</option>\r\n            <option value=\"user\">User</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <button class=\"btn btn-primary btn-block\">Sign Up</button>\r\n        </div>\r\n\r\n        <div class=\"alert alert-warning\" >\r\n          Roles: <br />{{ rolesList.toString() }}\r\n        </div>\r\n        <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\r\n          Signup failed!<br />{{ errorMessage }}\r\n        </div>\r\n      </form>\r\n\r\n      <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\r\n        Your registration is successful!\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\nimport {AuthService} from \"../_services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-board-admin',\r\n  templateUrl: './board-admin.component.html',\r\n  styleUrls: ['./board-admin.component.css']\r\n})\r\nexport class BoardAdminComponent implements OnInit {\r\n  content?: string;\r\n  form: any = {\r\n    username: null,\r\n    email: null/*new FormControl('', Validators.email)*/,\r\n    password: null,\r\n    roles: null,\r\n  };\r\n  isSuccessful = false;\r\n  isSignUpFailed = false;\r\n  errorMessage = '';\r\n  rolesList: Array<String> = [];\r\n\r\n  constructor(private userService: UserService, private authService: AuthService) {\r\n\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getAdminBoard().subscribe(\r\n      data => {\r\n        this.content = data;\r\n      },\r\n      err => {\r\n        this.content = JSON.parse(err.error).message;\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const { username, email, password, roles } = this.form;\r\n    this.rolesList.push(roles);\r\n\r\n    this.authService.register(username, email, password, this.rolesList).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.isSuccessful = true;\r\n        this.isSignUpFailed = false;\r\n      },\r\n      err => {\r\n        this.errorMessage = err.error.message;\r\n        this.isSignUpFailed = true;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-board-moderator',\r\n  templateUrl: './board-moderator.component.html',\r\n  styleUrls: ['./board-moderator.component.css']\r\n})\r\nexport class BoardModeratorComponent implements OnInit {\r\n  content?: string;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getModeratorBoard().subscribe(\r\n      data => {\r\n        this.content = data;\r\n      },\r\n      err => {\r\n        this.content = JSON.parse(err.error).message;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <header class=\"jumbotron\">\r\n    <p>{{ content }}</p>\r\n  </header>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\nimport { EventBusService } from '../_shared/event-bus.service';\r\nimport { EventData } from '../_shared/event.class';\r\n\r\n@Component({\r\n  selector: 'app-board-user',\r\n  templateUrl: './board-user.component.html',\r\n  styleUrls: ['./board-user.component.css']\r\n})\r\nexport class BoardUserComponent implements OnInit {\r\n  content?: string;\r\n\r\n  constructor(private userService: UserService, private eventBusService: EventBusService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getUserBoard().subscribe(\r\n      data => {\r\n        this.content = data;\r\n      },\r\n      err => {\r\n        this.content = err.error.message || err.error || err.message;\r\n        if (err.status === 403)\r\n          this.eventBusService.emit(new EventData('logout', null));\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <br>\r\n  <header class=\"background jumbotron  \">\r\n    <h1 class=\"font_0\">\r\n      <span class=\"\" style=\"font-size:44px;\">\r\n        <span>{{ content }}</span>\r\n      </span>\r\n    </h1>\r\n  </header>\r\n\r\n  <embed type=\"text/html\" src=\"https://www.tadirantele.com/\" height=\"300px\" width=\"100%\" >\r\n\r\n  <h2>Iframe - Target for a Link</h2>\r\n.\r\n  <iframe src=\"https://localhost:8445/accRealTime\" sandbox=\"allow-top-navigation-by-user-activation allow-same-origin allow-scripts allow-popups allow-forms\"  name=\"iframe_a\" height=\"300px\" width=\"100%\" title=\"Iframe Example\">\r\n  </iframe>\r\n\r\n\r\n\r\n\r\n  <p><a href=\"https://172.28.8.245:8443/aeonix/mainForm.jsf\" target=\"iframe_a\">aeonix</a></p>\r\n  <p><a href=\"https://en.wikipedia.org/wiki/Avocado\" id=\"testid\" target=\"iframe_a\">wikipedia</a></p>\r\n  <p><a href=\"https://172.28.1.130:8445/accRealTime\" target=\"iframe_a\">accRealTime</a></p>\r\n  <p>When the target attribute of a link matches the name of an iframe, the link will open in the iframe.</p>\r\n\r\n    <!--iframe src=\"https://172.28.1.130:8445/accRealTime\" name=\"iframe_a\" height=\"300px\" width=\"100%\" title=\"Iframe Example\">\r\n  </iframe-->\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  public ACC_VERSION: string = 'ACC_VERSION';\r\n  content?: string = 'Aeonix | Tadiran Telecom';\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getPublicContent().subscribe(\r\n      data => { this.content = data; },\r\n      err => { this.content = JSON.parse(err.error).message; }\r\n    );\r\n    this.userService.getAccVersion().subscribe(\r\n      data => { this.ACC_VERSION = data; },\r\n      err => { this.ACC_VERSION = JSON.parse(err.error).message; }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container \">\r\n  <br>\r\n  <header class=\"background jumbotron  \">\r\n    <h1 class=\"font_0\">\r\n      <span class=\"\" style=\"font-size:44px;\">\r\n        <dl>\r\n          <dt><span>{{ content }}</span></dt>\r\n          <dd><span>{{ ACC_VERSION }}</span></dd>\r\n        </dl>\r\n      </span>\r\n    </h1>\r\n  </header>\r\n\r\n  <storybook-button-fortest></storybook-button-fortest>\r\n  <aside>\r\n    <!-- Card -->\r\n    <div class=\"fa-pull-right bg-image card shadow-1-strong card-img\">\r\n      <div class=\"card-body text-white\">\r\n        <h5 class=\"card-title\">Card title</h5>\r\n        <p class=\"card-text\">\r\n          Some quick example text to build on the card title and make up the bulk of the\r\n          card's content.\r\n        </p>\r\n        <a href=\"#!\" class=\"btn btn-outline-light\">Button</a>\r\n      </div>\r\n    </div>\r\n    <!-- Card -->\r\n  </aside>\r\n\r\n  <div class=\"alert alert-success  \" role=\"alert\">\r\n    <h4 class=\"alert-heading \">Well done!</h4>\r\n    <p>Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.</p>\r\n    <hr>\r\n    <p class=\"mb-0\">Whenever you need to, be sure to use margin utilities to keep things nice and tidy.</p>\r\n  </div>\r\n\r\n</div>\r\n","import {Component, ElementRef, Inject, Input, OnInit, Renderer2, ViewChild} from '@angular/core';\nimport { StoryInput } from \"src/stories/inputs/story-input.model\";\nimport {AuthService} from \"src/app/_services/auth.service\";\nimport {AbstractControl, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {TokenStorageService} from \"src/app/_services/token-storage.service\";\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {Router} from \"@angular/router\";\nimport RegisterForm2Component from \"./register-form2/register-form2.component\";\n//import * as mStoryInput from \"../../../stories/inputs/story-input.stories\";\nimport {RegisterFormComponent} from \"../../login/register-form/register-form.component\";\nimport {ReplacePassFormComponent} from \"../../login/replace-pass-form/replace-pass-form.component\";\nimport {ReplacePassForm2Component} from \"./replace-pass-form2/replace-pass-form2.component\";\n\nexport interface DialogData {\n  username: string;\n  password: string;\n}\n\n\n\n@Component({\n  selector: 'login-main',\n  templateUrl: './login-main.component.html',\n  styleUrls: ['./login-main.component.scss']\n})\nexport class LoginMainComponent implements OnInit {\n\n  public isLoggedIn = false;\n  isLoginFailed = false;\n  loginErrorMessage = '';\n  roles: string[] = [];\n\n\n\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  storyInputsInOrder: StoryInput[]  = [\n    { /*...mStoryInput.Default.args?.['storyInput'],*/ id: '2', title: 'username', state: 'USER NAME', icon: './assets/images/User2ldpi.png', type: 'text', placeholder: 'Ex.Saul Ramirez' , hide: false },\n    { /*...mStoryInput.Default.args?.['storyInput'],*/ id: '3', title: 'password', state: 'PASSWORD', icon: './assets/images/LockIcon2ldpi.png', type: 'password', placeholder: 'your_password', hide: false   },\n  ];\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = true;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  background?: string;\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Login2Component';\n\n  /*user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n\n  }*/\n\n  loginForm: FormGroup;\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-page2--primary' : 'storybook-page2--secondary';\n\n    return ['storybook-page2', mode];\n  }\n\n  @ViewChild('formHeader', { static: false }) mainHeader?: ElementRef;\n\n\n  constructor(private renderer: Renderer2,\n              public registerFormDialog: MatDialog,\n              public replacePassFormDialog: MatDialog,\n              public authService: AuthService,\n              private tokenStorage: TokenStorageService,\n              private router: Router,) {\n    this.loginForm = new FormGroup({\n      username: new FormControl(null, Validators.minLength(2)),\n      password: new FormControl('123456', Validators.minLength(2)),\n    });\n\n  }\n\n\n  openRegisterForm() {\n    const registerFormDialogRef = this.registerFormDialog.open(RegisterForm2Component, {\n      data: {username: this.getUsernameCurrentFieldValue , password: this.getPasswordCurrentFieldValue},\n    });\n\n    registerFormDialogRef.afterClosed().subscribe(result => {\n      console.log('The register form dialog was closed');\n    });\n\n    return registerFormDialogRef.afterClosed().toPromise();\n  }\n\n\n  openReplacePassForm() {\n    const replacePassFormDialogRef = this.replacePassFormDialog.open(ReplacePassForm2Component, {\n      data: {username: this.getUsernameCurrentFieldValue , password: this.getPasswordCurrentFieldValue},\n    });\n\n    replacePassFormDialogRef.beforeClosed().subscribe(result => {\n      console.log('The replace password form dialog before closed');\n    },\n      err => {\n        console.log(err.error.message);\n      });\n\n\n    replacePassFormDialogRef.afterClosed().subscribe(result => {\n      console.log('The replace password form dialog after closed');\n      if (result.message === 'Replace Password Complete') {\n        this.setUsernameCurrentFieldValue(result.data.username);\n        this.setPasswordCurrentFieldValue(result.data.password.toString());\n      }\n    });\n\n    return replacePassFormDialogRef.afterClosed().toPromise();\n  }\n\n  ngOnInit(): void {};\n\n\n\n  get getUsernameCurrentFieldValue(): AbstractControl {\n    return this.loginForm.get('username')?.value;\n  }\n\n  private setUsernameCurrentFieldValue(name: string) {\n    this.loginForm.get('username')?.setValue(name);\n  }\n\n  get getPasswordCurrentFieldValue(): AbstractControl {\n    return this.loginForm.get('password')?.value;\n  }\n\n  private setPasswordCurrentFieldValue(pass: string) {\n    this.loginForm.get('password')?.setValue(pass);\n  }\n\n/*\n  openRegisterForm() {\n    return this.registerFormService.open(RegisterFormComponent).onClose.toPromise();\n  }\n\n  openReplacePassword() {\n    this.replacePassFormService.open(ReplacePassForm2Component);\n  }\n*/\n\n  onSubmit(): void {\n    console.warn('Login Request from login-main!');\n    const { username, password } = this.loginForm.value;\n\n    this.authService.login(username, password).subscribe(\n      data => {\n        this.tokenStorage.saveToken(data.accessToken);\n        this.tokenStorage.saveRefreshToken(data.refreshToken);\n        this.tokenStorage.saveUser(data);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getUser().roles;\n        this.profile2();\n      },\n      err => {\n        switch (err.error.message) {\n          case \"Error: A registry process should be made!\":\n            //this.openRegisterForm().then(() => {this.openReplacePassword()});\n            //toPromise((data) => {this.openReplacePassword()});\n            this.openRegisterForm().then(\n              (val) => {\n                console.log(val);\n                switch (val) {\n                  case \"xbutton\":\n                    break;\n                  case \"Registration Complete\":\n                    this.onSubmit();\n                    break;\n                  case undefined:\n                    //this.openReplacePassword();\n                    break;\n                  default:\n                }\n                return 'done2';\n              },\n              (err) => console.error(err));\n            break;\n          case \"User credentials have expired\":\n            this.openReplacePassForm().then(\n              (val) => {\n                console.log(val);\n                switch (val.message) {\n                  case \"xbutton\":\n                    break;\n                  case \"Replace Password Complete\":\n                    this.onSubmit();\n                    break;\n                  case undefined:\n                    //this.openReplacePassword();\n                    break;\n                  default:\n                }\n                return 'done2';\n              },\n              (err) => console.error(err));\n            break;\n          default:\n            this.loginErrorMessage = err.error.message;\n        }\n\n\n        this.isLoginFailed = true;\n      }\n    );\n  }\n\n\n  reloadPage(): void {\n    this.router.navigate(['/login-main']).then(() => {window.location.reload()});\n  }\n\n  profile2(): void {\n  this.router.navigate(['/profile2']);\n}\n\n}\n\n/*\n@Component({\n  selector: 'dialog-overview-example-dialog',\n  templateUrl: 'dialog-overview-example-dialog.html',\n})\nexport class DialogOverviewExampleDialog {\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n*/\n\n/*\n@Component({\n  selector: 'password-dialog',\n  templateUrl: './password-dialog.html',\n})\nexport class ExtentionDialog {\n  constructor(\n    public dialogRef: MatDialogRef<ExtentionDialog>,\n    @Inject(MAT_DIALOG_DATA) public extensionData: {name: string, password: string;},\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n*/\n","\n<html>\n<head>\n  <style>\n\n  </style>\n  <title></title>\n</head>\n<body>\n\n<!--article><div class=\"Frame-1 relative\">\n<section class=\"relative \" Style=\"{ 'background': backgroundColor }\"-->\n\n<!--storybook-button-globe></storybook-button-globe-->\n\n<storybook-background1></storybook-background1>\n\n<button  mat-raised-button  (click)=\"openReplacePassForm()\">ReplacePassForm</button>\n<button mat-raised-button (click)=\"openRegisterForm()\">RegisterForm</button>\n<button mat-raised-button (click)=\"profile2()\">profile2</button>\n\n\n<storybook-login-form\n  [isLoggedIn]=\"false\"\n  [isLoginFailed]=\"isLoginFailed\"\n  [loginErrorMessage]=\"loginErrorMessage\"\n  [mForm]=\"loginForm\"\n  [storyInputs]=\"storyInputsInOrder\"\n  (sendLoginReq)=\"onSubmit()\"\n></storybook-login-form>\n\n\n<!--/section></div>\n</article-->\n\n</body>\n</html>\n\n\n","import {Component, ElementRef, EventEmitter, Inject, OnInit, Output, Renderer2, ViewChild} from '@angular/core';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport {StoryInput} from \"src/stories/inputs/story-input.model\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {DialogData} from \"../login-main.component\";\r\nimport {PasswordValidators} from \"../replace-pass-form2/replace-pass-form2.component\";\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'register-form2',\r\n  templateUrl: './register-form2.component.html',\r\n  styleUrls: ['./register-form2.component.css']\r\n})\r\nexport default class RegisterForm2Component implements OnInit {\r\n  registerForm: FormGroup;\r\n  isRegSuccess = false;\r\n  isRegFailed = false;\r\n  submitted = false;\r\n  regErrorMessage: any;\r\n  empList: Array<String> = [];\r\n  apiResponse = { message: '', error: false };\r\n  @ViewChild('form', { static: false }) form?: ElementRef;\r\n  errorFieldSubmitted: any = {};\r\n  closeResult = '';\r\n\r\n  storyInputsInOrder: StoryInput[]  = [\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '2', title: 'username', state: 'USER NAME', icon: './assets/images/User2ldpi.png', type: 'text', placeholder: 'Ex.Saul Ramirez', hide: false  },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '3', title: 'password', state: 'PASSWORD', icon: './assets/images/LockIcon2ldpi.png', type: 'password', placeholder: 'your_password' , hide: true },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '5', title: 'phone', state: 'PHONE NUMBER FOR AUTHENTICATION', icon: './assets/images/Phone3ldpi.png', type: 'phone', placeholder: 'Ex: +972547762084', hide: false  },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '4', title: 'email', state: 'EMAIL', icon: './assets/images/AtSign3ldpi.png', type: 'email', placeholder: 'Ex: abc@example.com', hide: false   },\r\n\r\n  ];\r\n\r\n  constructor(private authService: AuthService,\r\n              private renderer: Renderer2,\r\n              public dialogRef: MatDialogRef<RegisterForm2Component>,\r\n              @Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n    this.registerForm = new FormGroup({\r\n      username: new FormControl(data.username.toString(), Validators.minLength(2)),\r\n      password: new FormControl(data.password.toString(), Validators.minLength(2)),\r\n      email: new FormControl(data.username.toString() + '@domain.com', Validators.email),\r\n      phone: new FormControl('123123131321', PasswordValidators.patternValidator(new RegExp(\"(?=.[0-9 ]{8})\"), {requiresPhoneChars: true}))\r\n    });/*Validators.pattern(new RegExp(\"[0-9 ]{12}\")*/\r\n    this.empList.push(\"admin\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.isRegSuccess) {\r\n      this.dialogRef.close('Registration Complete');\r\n    }\r\n    else {\r\n      this.submitted = true;\r\n      const { username, password, email, phone } = this.registerForm.getRawValue();\r\n\r\n      this.authService.registerForm(username, email, password, phone).subscribe(\r\n        data => {\r\n          console.log(data);\r\n          this.isRegSuccess = true;\r\n          this.isRegFailed = false;\r\n          this.errorFieldSubmitted = {} ;\r\n          this.apiResponse.error = false;\r\n          this.apiResponse.message = 'Successful registration';\r\n        },\r\n        error => {\r\n          const errorResponse = JSON.parse(error.error);\r\n          this.apiResponse.error = true;\r\n          this.apiResponse.message = 'Registration error';\r\n          this.regErrorMessage = errorResponse;\r\n          this.isRegFailed = true;\r\n          if (errorResponse.error && errorResponse.message === 'VALIDATION_FAILED') {\r\n            this.errorFieldSubmitted = errorResponse.data;\r\n          }\r\n        },\r\n        () => {\r\n          console.log(\"Registration Complete\");}\r\n      );\r\n    }\r\n  }\r\n\r\n  get username(): AbstractControl {\r\n    return this.registerForm.get('username')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.registerForm.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.registerForm.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.registerForm.get('phone')!;\r\n  }\r\n}\r\n","\r\n<storybook-registry-form #form\r\n  [isRegSuccess]=\"isRegSuccess\"\r\n  [isRegFailed]=\"isRegFailed\"\r\n  [regErrorMessage]=\"regErrorMessage\"\r\n  [storyInputs]=\"storyInputsInOrder\"\r\n  [mForm]=\"registerForm\"\r\n  (sendRegReq)=\"onSubmit()\"\r\n  (clickXButton)=\"this.dialogRef.close('xbutton')\"\r\n></storybook-registry-form>\r\n","import {Component, Inject, Renderer2} from '@angular/core';\r\nimport { MdbModalRef } from 'mdb-angular-ui-kit/modal';\r\nimport {AuthService} from \"src/app/_services/auth.service\";\r\nimport {AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators} from \"@angular/forms\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {DialogData} from \"../login-main.component\";\r\nimport RegisterForm2Component from \"../register-form2/register-form2.component\";\r\nimport {StoryInput} from \"../../../../stories/inputs/story-input.model\";\r\n\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: './replace-pass-form2.component.html',\r\n  styleUrls: ['./replace-pass-form2.component.css']\r\n})\r\nexport class ReplacePassForm2Component {\r\n  replacePassForm: FormGroup;\r\n  status = {\r\n    isRepSuccess: false,\r\n    isRepFailed: false,\r\n    submitted: false,\r\n    repErrorMessage: {},\r\n    apiResponse: { message: '', error: false },\r\n    errorFieldSubmitted: {},\r\n    closeResult: '',\r\n  };\r\n\r\n  //isSignUpFailed = false;\r\n  //submitted = false;\r\n  //errorMessage = '';\r\n  empList: Array<String> = [];\r\n  //apiResponse = { message: '', error: false };\r\n  //errorFieldSubmitted: any = {};\r\n  closeResult = '';\r\n\r\n  storyInputsInOrder: StoryInput[]  = [\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '1', title: 'oldPassword', state: 'INITIAL PASSWORD', icon: './assets/images/LockIcon2ldpi.png', type: 'password', placeholder: 'your_password' , hide: false },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '2', title: 'password', state: 'NEW PASSWORD', icon: './assets/images/LockIcon2ldpi.png', type: 'password', placeholder: 'your_password' , hide: false },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '3', title: 'confirmPassword', state: 'RE-ENTER NEW PASSWORD', icon: './assets/images/LockIcon2ldpi.png', type: 'password', placeholder: 'your_password' , hide: false },\r\n  ];\r\n\r\n\r\n\r\n\r\n  constructor(private authService: AuthService,\r\n              private renderer: Renderer2,\r\n              public dialogRef: MatDialogRef<ReplacePassForm2Component>,\r\n              @Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n    this.replacePassForm = new FormGroup({\r\n      userName: new FormControl(data.username, Validators.required),\r\n      oldPassword: new FormControl(data.password, Validators.minLength(1)),\r\n      password: new FormControl('', Validators.compose([\r\n        Validators.minLength(8),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.*[0-9])\"), {requiresDigit: true}),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.[A-Z])\"), {requiresUppercase: true}),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.[a-z])\"), {requiresLowercase: true} ),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.*[$@^!%*?&])\"), {requiresSpecialChars: true})\r\n      ])),\r\n      confirmPassword: new FormControl(null, [\r\n        Validators.minLength(8),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.*[0-9])\"), {requiresDigit: true}),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.[A-Z])\"), {requiresUppercase: true}),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.[a-z])\"), {requiresLowercase: true}),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.*[$@^!%*?&])\"), {requiresSpecialChars: true})\r\n      ])\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.status.isRepSuccess) {\r\n      this.dialogRef.close({message: 'Replace Password Complete', data: this.data});\r\n    }\r\n    else {\r\n      this.status.submitted = true;\r\n      const { userName, oldPassword, password, confirmPassword } = this.replacePassForm.value;\r\n      this.authService.replacePassForm(userName, oldPassword, password, confirmPassword).subscribe(\r\n        data => {\r\n          console.log(data);\r\n          this.status.isRepSuccess = true;\r\n          this.status.isRepFailed = false;\r\n          this.status.errorFieldSubmitted = {};\r\n          this.status.apiResponse.error = false;\r\n          this.status.apiResponse.message = 'Successful registration';\r\n          this.data.password = password;\r\n        },\r\n        error => {\r\n          const errorResponse = JSON.parse(error.error);\r\n          this.status.apiResponse.error = true;\r\n          this.status.apiResponse.message = 'Replace password error';\r\n          this.status.repErrorMessage = errorResponse;\r\n          this.status.isRepFailed = true;\r\n          if (errorResponse.error && errorResponse.message === 'VALIDATION_FAILED') {\r\n            this.status.errorFieldSubmitted = errorResponse.data;\r\n          }\r\n        },\r\n        () => {\r\n          console.log('Replace Password closed');}\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n\r\n  get userName(): AbstractControl {\r\n    return this.replacePassForm.get('username')!;\r\n  }\r\n\r\n  get oldPassword(): AbstractControl {\r\n    return this.replacePassForm.get('oldPassword')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.replacePassForm.get('password')!;\r\n  }\r\n\r\n  get confirmPassword(): AbstractControl {\r\n    return this.replacePassForm.get('confirmPassword')!;\r\n  }\r\n\r\n}\r\n\r\nexport class PasswordValidators {\r\n  constructor() {\r\n  }\r\n\r\n  static patternValidator(regex: RegExp, error: ValidationErrors): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } | null => {\r\n      if (!control.value) {\r\n        // if the control value is empty return no error.\r\n        return null;\r\n      }\r\n\r\n      // test the value of the control against the regexp supplied.\r\n      const valid = regex.test(control.value);\r\n\r\n      // if true, return no error, otherwise return the error object passed in the second parameter.\r\n      return valid ? null : error;\r\n    };\r\n  }\r\n}\r\n","<storybook-replace-pass-form #form\r\n                         [status]=\"status\"\r\n                         [storyInputs]=\"storyInputsInOrder\"\r\n                         [mForm]=\"replacePassForm\"\r\n                         (sendRegReq)=\"onSubmit()\"\r\n                         (clickXButton)=\"this.dialogRef.close({message: 'xbutton'})\"\r\n></storybook-replace-pass-form>\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport RegisterForm2Component from \"./login-main/register-form2/register-form2.component\";\nimport {LoginMainComponent} from \"./login-main/login-main.component\";\nimport {LogtestComponent} from \"./logtest/logtest.component\";\nimport Profile2Component from \"../profile2/profile2.component\";\n\n\n\n\n\nconst routes: Routes = [\n  { path: 'login-main', component: LoginMainComponent },\n  { path: 'logtest', component: LogtestComponent },\n  /*{ path: 'login2', component: Login2Component },*/\n  //{ path: 'storybook-button-fortest', component: AvatarComponent },\n  { path: 'register-form2', component: RegisterForm2Component },\n  /*{ path: 'register-form2', component: RegisterForm2Component },*/\n  { path: 'profile2',loadChildren: () => import('../app.module').then(m => m.AppModule),},\n  { path: '', redirectTo: 'login-main', pathMatch: 'full' },/**/\n  { path: '**', redirectTo: 'logtest', },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class Login2RoutingModule { }\n","import { Component, OnInit, OnDestroy  } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { TokenStorageService } from 'src/app/_services/token-storage.service';\r\nimport { EventBusService } from 'src/app/_shared/event-bus.service';\r\n\r\n@Component({\r\n  selector: 'login2',\r\n  templateUrl: './login2.component.html',\r\n  //styleUrls: ['./app.component.css']\r\n})\r\nexport class Login2Component {\r\n  private roles: string[] = [];\r\n  public isLoggedIn = false;\r\n  showAdminBoard = false;\r\n  showModeratorBoard = false;\r\n  username?: string;\r\n  eventBusSub?: Subscription;\r\n  title?: 'accGate';\r\n\r\n  constructor(private tokenStorageService: TokenStorageService, private eventBusService: EventBusService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\r\n\r\n    if (this.isLoggedIn) {\r\n      const user = this.tokenStorageService.getUser();\r\n      this.roles = user.roles;\r\n\r\n      this.showAdminBoard = (this.roles.includes('Admin') || this.roles.includes('SupervisorAdmin'));\r\n      this.showModeratorBoard = this.roles.includes('SupervisorMonitor');\r\n\r\n      this.username = user.username;\r\n    }\r\n    this.eventBusSub = this.eventBusService.on('logout', () => {\r\n      this.logout();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.eventBusSub)\r\n      this.eventBusSub.unsubscribe();\r\n  }\r\n\r\n  logout(): void {\r\n    this.tokenStorageService.signOut();\r\n    this.isLoggedIn = false;\r\n    this.roles = [];\r\n    this.showAdminBoard = false;\r\n    this.showModeratorBoard = false;\r\n    //window.location.reload();\r\n  }\r\n\r\n}\r\n","<p>login2 works!</p>\r\n<!--router-outlet  id=\"login2\" ></router-outlet-->\r\n<!--storybook-button-fortest></storybook-button-fortest-->\r\n","import { NgModule } from '@angular/core';\n\nimport { Login2RoutingModule } from './login2-routing.module';\nimport RegisterForm2Component  from './login-main/register-form2/register-form2.component';\nimport { LogtestComponent } from './logtest/logtest.component';\nimport {LoginMainComponent, /*DialogOverviewExampleDialog*/} from './login-main/login-main.component';\nimport {TaskComponent } from \"src/stories/task/task.component\";\nimport {TaskListComponent} from \"../../stories/task-list/task-list.component\";\nimport {Login2Component} from \"./login2.component\";\nimport {StorybookModule} from \"../storybook/storybook.module\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {ReplacePassForm2Component} from \"./login-main/replace-pass-form2/replace-pass-form2.component\";\n\n\n\n\n@NgModule({\n  declarations: [\n    ReplacePassForm2Component,\n    RegisterForm2Component,\n    TaskComponent, TaskListComponent,\n    LogtestComponent,\n    Login2Component,\n    LoginMainComponent,\n\n\n    //PopoverDirective,\n    //ExtentionDialog,\n    //DialogOverviewExampleDialog\n\n\n  ],\n  imports: [\n    Login2RoutingModule,\n    StorybookModule,\n    MatDialogModule,\n    MatButtonModule,\n  ],\n  exports: [\n\n  ],\n  bootstrap: [Login2Component]\n})\nexport class Login2Module { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'logtest',\n  templateUrl: './logtest.component.html',\n  styleUrls: ['./logtest.component.css']\n})\nexport class LogtestComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<storybook-background1></storybook-background1>\n<storybook-button-fortest></storybook-button-fortest>\n<!--storybook-background1></storybook-background1-->\n<!--ButtonLanguageComponent></ButtonLanguageComponent-->\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\nimport {  Router } from '@angular/router';\r\nimport { MdbModalRef, MdbModalService } from 'mdb-angular-ui-kit/modal';\r\nimport {FormControl, Validators} from \"@angular/forms\";\r\nimport { RegisterFormComponent } from './register-form/register-form.component';\r\nimport {ReplacePassFormComponent} from \"./replace-pass-form/replace-pass-form.component\";\r\nimport {Observable} from \"rxjs\";\r\n//import {  Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  registerFormRef: MdbModalRef<RegisterFormComponent> | null = null;\r\n  replacePassFormRef: MdbModalRef<ReplacePassFormComponent> | null = null;\r\n  form: any = {\r\n    username: null, //new FormControl('ea2', Validators.min(2)),\r\n    password: null  //new FormControl('zaqwsx', Validators.min(2))\r\n  };\r\n  public isLoggedIn = false;\r\n  isLoginFailed = false;\r\n  loginErrorMessage = '';\r\n  roles: string[] = [];\r\n  showPass: 'text' | 'password' = 'password';\r\n\r\n  constructor(private authService: AuthService,\r\n              private tokenStorage: TokenStorageService,\r\n              private router: Router,\r\n              private registerFormService: MdbModalService,\r\n              private replacePassFormService: MdbModalService) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.tokenStorage.getToken()) {\r\n      this.isLoggedIn = true;\r\n      this.roles = this.tokenStorage.getUser().roles;\r\n    }\r\n  }\r\n\r\n  showPassChange(): void {\r\n    this.showPass = (this.showPass == 'password' ? 'text' : 'password')\r\n  }\r\n\r\n  test() {\r\n    console.log(\"test start\");\r\n    this.openRegisterForm().then(() => {\r\n      this.openReplacePassword();\r\n      console.log(\"test end\");});\r\n\r\n    this.openRegisterForm().then(\r\n    (val) => {\r\n      console.log(val);\r\n      switch (val) {\r\n        case \"xbutton\":\r\n          break;\r\n        case undefined:\r\n          this.openReplacePassword();\r\n          break;\r\n        default:\r\n\r\n      }\r\n      return 'done2';\r\n    },\r\n      (err) => console.error(err));\r\n  }\r\n\r\n  openRegisterForm() {\r\n    return this.registerFormService.open(RegisterFormComponent).onClose.toPromise();\r\n    /*var promise = new Promise<void>((resolve, reject)  => {\r\n      let newRegisterFormService = this.registerFormService.open(RegisterForm2Component);\r\n      setTimeout(() => {\r\n        console.log(\"Async Work Complete\");\r\n        newRegisterFormService.close();\r\n        resolve();//() => {resolve();}\r\n      }, 5000);\r\n    });\r\n    return promise;*/\r\n  }\r\n\r\n  openReplacePassword() {\r\n    this.replacePassFormService.open(ReplacePassFormComponent);\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const { username, password } = this.form;\r\n\r\n    this.authService.login(username, password).subscribe(\r\n      data => {\r\n        this.tokenStorage.saveToken(data.accessToken);\r\n        this.tokenStorage.saveRefreshToken(data.refreshToken);\r\n        this.tokenStorage.saveUser(data);\r\n\r\n        this.isLoginFailed = false;\r\n        this.isLoggedIn = true;\r\n        this.roles = this.tokenStorage.getUser().roles;\r\n        this.reloadPage();\r\n      },\r\n      err => {\r\n        switch (err.error.message) {\r\n          case \"Error: A registry process should be made!\":\r\n            //this.openRegisterForm().then(() => {this.openReplacePassword()});\r\n            //toPromise((data) => {this.openReplacePassword()});\r\n            this.openRegisterForm().then(\r\n              (val) => {\r\n                console.log(val);\r\n                switch (val) {\r\n                  case \"xbutton\":\r\n                    break;\r\n                  case \"Registration Complete\":\r\n                    this.openReplacePassword();\r\n                    break;\r\n                  case undefined:\r\n                    this.openReplacePassword();\r\n                    break;\r\n                  default:\r\n                }\r\n                return 'done2';\r\n              },\r\n              (err) => console.error(err));\r\n              break;\r\n          default:\r\n            this.loginErrorMessage = err.error.message;\r\n        }\r\n\r\n\r\n        this.isLoginFailed = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  reloadPage(): void {\r\n    //window.location.reload();\r\n    this.router.navigate(['/profile']).then(() => {window.location.reload()});\r\n    //var URL = window.location.mainHeader+\"/profile\"; //'http://localhost:4200/user';\r\n    ///window.open(URL);\r\n    //this.router.navigate([]).then(result => {  window.open(window.location.toString(), 'user'); });\r\n  }\r\n\r\n  /**\r\n   * Is this the principal call to action on the login-main?\r\n   */\r\n  @Input()\r\n  primary = true;\r\n\r\n}\r\n","\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <!--storybook-card  class=\"card-container\"></storybook-card-->\r\n  <div  class=\"card  h-100 d-flex align-items-center justify-content-center\">\r\n\r\n    <div class=\"Aeonix-App-Center\">\r\n    <a>Aeonix App Center</a>\r\n    </div>\r\n    <!--img id=\"profile-img\" class=\"user-image\" src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n      class=\"profile-img-card\" /-->\r\n\r\n    <br>\r\n\r\n    <form *ngIf=\"!isLoggedIn\" name=\"form\" (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate>\r\n\r\n\r\n\r\n      <div class=\"list-item storybook-input Frame-3 \">\r\n        <a class=\"user-name D-Caps-Regular\">USER NAME</a>\r\n\r\n        <br>\r\n        <label [attr.aria-label]=\"'userName'\" for=\"userName\" class=\"Vector2 \">\r\n\r\n          <img src=\"./assets/images/User2ldpi.png\" class=\"icon-input-userName\" alt=\"icon input userName\" />\r\n\r\n          <input type=\"text\" [value]=\"'DanK203'\" id=\"userName\" name=\"userName\"  class=\"DanK203\"\r\n                 [(ngModel)]=\"form.userName\" placeholder=\"Ex. Saul Ramirez\" required #userName=\"ngModel\"/>\r\n        </label>\r\n\r\n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"userName.errors && f.submitted\">\r\n          Username is required!\r\n        </div>\r\n      </div>\r\n\r\n      <br>\r\n\r\n      <div class=\"storybook-input Frame-3 \">\r\n        <span class=\"user-name D-Caps-Regular\">PASSWORD</span>\r\n\r\n\r\n        <br>\r\n        <label [attr.aria-label]=\"'password'\" for=\"password\" class=\"Vector2 \">\r\n          <img src=\"./assets/images/LockIcon2ldpi.png\" class=\"icon-input-password\" alt=\"icon input password\" />\r\n          <input type={{this.showPass}} [value]=\"'DanK203'\" id=\"password\" name=\"password\"  class=\"DanK203\"\r\n                 [(ngModel)]=\"form.password\" placeholder=\"password\" required #password=\"ngModel\"/>\r\n          <button class=\"icon-input-showpass\" type=\"button\" (click)=\"showPassChange()\">\r\n          <img src=\"./assets/images/EyeIcon.png\" class=\"icon-input-showpass\" alt=\"icon input type\" />\r\n          </button>\r\n        </label>\r\n\r\n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"password.errors && f.submitted\">\r\n          <div *ngIf=\"password.errors.required\">Password is required</div>\r\n          <div *ngIf=\"password.errors.minlength\">Password must be at least 1 characters</div>\r\n        </div>\r\n      </div>\r\n\r\n      <br>\r\n      <div class=\"thematic-break\"></div>\r\n\r\n      <div class=\"form-group\">\r\n\r\n        <div>\r\n          <a (mouseover)=\"popover.show()\" (mouseleave)=\"popover.hide()\" (click)=\"openReplacePassword()\"\r\n             class=\"form-check-label white-text\"  href=\"#/login\" mdbPopoverTitle=\"Account recovery\" #popover=\"mdbPopover\"\r\n             mdbPopover=\"To help keep your account safe, we will make sure that it’s really you trying to sign in\">\r\n            Forgot password?\r\n          </a>\r\n          <a (click)=\"openReplacePassword()\"\r\n             class=\"forgot-password\"  href=\"#/login\" >\r\n            Forgot password?\r\n          </a>\r\n\r\n          <button class=\"login-button\">Continue</button>\r\n        </div>\r\n\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && isLoginFailed\">\r\n          Login failed: {{ loginErrorMessage }}\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n\r\n\r\n    <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\r\n      Logged in as {{ roles }}.\r\n    </div>\r\n\r\n    <mdb-card-footer class=\"form-check-label white-text border-bottom-0\" id=\"tests\">\r\n      <label for=\"tests\" class=\"form-check-label white-text\"\r\n              style=\"margin-bottom: 1px; padding: 1px\">R&D test:\r\n        <a (click)=\"openRegisterForm()\"  class=\"green-text font-weight-bold\">RegistrationForm</a>\r\n        <b> ,</b>\r\n        <a (click)=\"openReplacePassword()\" href=\"#/login\" class=\"green-text font-weight-bold pl-2\">ReplacePassForm</a>\r\n        <b> ,</b>\r\n        <a (click)=\"test()\" href=\"#/login\" class=\"green-text font-weight-bold pl-2\">test</a>\r\n      </label>\r\n    </mdb-card-footer>\r\n  </div>\r\n\r\n\r\n\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { MdbModalRef } from 'mdb-angular-ui-kit/modal';\r\nimport { AuthService } from '../../_services/auth.service';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: './register-form.component.html',\r\n  styleUrls: ['./register-form.component.css']\r\n})\r\nexport class RegisterFormComponent {\r\n  validationForm: FormGroup;\r\n  isSuccessful = false;\r\n  isSignUpFailed = false;\r\n  submitted = false;\r\n  errorMessage = '';\r\n  empList: Array<String> = [];\r\n  apiResponse = { message: '', error: false };\r\n  errorFieldSubmitted: any = {};\r\n  closeResult = '';\r\n\r\n  constructor(public modalRef: MdbModalRef<RegisterFormComponent>,\r\n              private authService: AuthService) {\r\n    this.validationForm = new FormGroup({\r\n      userName: new FormControl(null, Validators.required),\r\n      email: new FormControl(null, Validators.email),\r\n      password: new FormControl('', Validators.minLength(1)),\r\n      phone: new FormControl(null, Validators.pattern(new RegExp(\"[0-9 ]{12}\")))\r\n    });\r\n    this.empList.push(\"admin\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n    const { userName, email, password, phone } = this.validationForm.value;\r\n    this.authService.registerForm(userName, email, password, phone).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.isSuccessful = true;\r\n        this.isSignUpFailed = false;\r\n        this.errorFieldSubmitted = {};\r\n        this.apiResponse.error = false;\r\n        this.apiResponse.message = 'Successful registration';\r\n      },\r\n      error => {\r\n        const errorResponse = JSON.parse(error.error);\r\n        this.apiResponse.error = true;\r\n        this.apiResponse.message = 'Registration error';\r\n        this.errorMessage = error.error.message;\r\n        this.isSignUpFailed = true;\r\n        if (errorResponse.error && errorResponse.message === 'VALIDATION_FAILED') {\r\n          this.errorFieldSubmitted = errorResponse.data;\r\n        }\r\n      }, () => {console.log(\"Registration Complete\");\r\n                        this.modalRef.close(\"Registration Complete\");}\r\n    );\r\n  }\r\n\r\n  get userName(): AbstractControl {\r\n    return this.validationForm.get('userName')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.validationForm.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.validationForm.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.validationForm.get('phone')!;\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <!--div class=\"text-center\"-->\r\n    <label class=\"white-text mb-2 mt-2 font-weight-bold fas\">\r\n      <strong>REGISTRATION</strong>\r\n      <a class=\"green-text font-weight-bold\">\r\n        <strong> FORM</strong>\r\n      </a>\r\n    </label>\r\n\r\n  <!--/div-->\r\n  <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)='modalRef.close(\"xbutton\")'></button>\r\n\r\n  <!--h5 class=\"modal-title\" id=\"exampleModalLabel\">REGISTRATION</h5-->\r\n\r\n</div>\r\n<div class=\"modal-body py-4 text-center expansionCard\">\r\n  <img id=\"profile-img\" src=\"./assets/images/T.png\"\r\n       class=\"profile-img-card\"  alt=\"\"/>\r\n  <div class=\"text-white rgba-stylish-strong py-5 px-5 z-depth-2\">\r\n\r\n\r\n  <form *ngIf=\"!isSuccessful\" [formGroup]=\"validationForm\">\r\n\r\n  <!--###################### Username input field ###################### -->\r\n  <div class=\"form-outline\">\r\n    <mdb-form-control  class=\"form-outline\">\r\n    <input [mdbValidate]=\"true\" mdbInput type=\"text\" id=\"typeText\"\r\n           class=\"form-control\"  formControlName=\"userName\" required />\r\n    <label class=\"form-label \" for=\"typeText\" >UserName input</label>\r\n    <mdb-error *ngIf=\"userName?.invalid && (userName?.dirty || userName?.touched)\">\r\n      First name is required\r\n    </mdb-error>\r\n    <mdb-success *ngIf=\"userName?.valid && (userName?.dirty || userName?.touched)\">\r\n      Looks good!\r\n    </mdb-success>\r\n    </mdb-form-control>\r\n  </div>\r\n\r\n  <br>\r\n\r\n    <!--###################### Email input field ###################### -->\r\n  <div class=\"form-outline\">\r\n    <mdb-form-control  class=\"form-outline\">\r\n      <input [mdbValidate]=\"true\" mdbInput type=\"email\" id=\"typeEmail\"\r\n             class=\"form-control\" formControlName=\"email\" required />\r\n      <label mdbLabel class=\"form-label form-white\" for=\"typeEmail\">Email input</label>\r\n      <mdb-error *ngIf=\"email?.invalid && (email?.dirty || email?.touched)\">\r\n        Email is required\r\n      </mdb-error>\r\n      <mdb-success *ngIf=\"email?.valid && (email?.dirty || email?.touched)\">\r\n        Looks good!\r\n      </mdb-success>\r\n    </mdb-form-control>\r\n  </div>\r\n\r\n\r\n  <br>\r\n\r\n    <!--###################### Password input field ###################### -->\r\n  <div class=\"form-outline\">\r\n    <mdb-form-control  class=\"form-outline\">\r\n    <input [mdbValidate]=\"true\" mdbInput type=\"password\" id=\"typePassword\"\r\n           class=\"form-control\" formControlName=\"password\" required minlength=\"1\" />\r\n    <label mdbLabel class=\"form-label form-white\" for=\"typePassword\">Password input</label>\r\n    <mdb-error *ngIf=\"password?.invalid && (password?.dirty || password?.touched)\">\r\n      Password is required\r\n    </mdb-error>\r\n      <!--mdb-error *ngIf=\"email?.errors.length\">  Username must be at least 3 characters</mdb-error-->\r\n    <mdb-success *ngIf=\"password?.valid && (password?.dirty || password?.touched)\">\r\n      Looks good!\r\n    </mdb-success>\r\n    </mdb-form-control>\r\n    <span class=\"text-danger error-input\" *ngIf=\"submitted && errorFieldSubmitted['password']\"\r\n          style=\"white-space: pre-line;  font-size: 14px;\">\r\n          {{errorFieldSubmitted['password'] | apiErrorMessage}}\r\n      <br><br>\r\n    </span>\r\n  </div>\r\n\r\n\r\n  <br>\r\n\r\n    <!--###################### Phone input field ###################### -->\r\n  <div class=\"form-outline\">\r\n    <mdb-form-control  class=\"form-outline\">\r\n    <input [mdbValidate]=\"true\" mdbInput type=\"tel\" id=\"typePhone\"\r\n           class=\"form-control\" formControlName=\"phone\" required />\r\n    <label mdbLabel class=\"form-label form-white\" for=\"typePhone\">Phone number input</label>\r\n    <mdb-error *ngIf=\"phone?.invalid && (phone?.dirty || phone?.touched)\">\r\n      Phone is required\r\n    </mdb-error>\r\n    <mdb-success *ngIf=\"phone?.valid && (phone?.dirty || phone?.touched)\">\r\n      Looks good!\r\n    </mdb-success>\r\n    </mdb-form-control>\r\n  </div>\r\n  <!--mdb-form-control>\r\n    <input mdbInput  type=\"text\" class=\"form-control\" id=\"exampleDatepicker\"/>\r\n    <label mdbLabel for=\"exampleDatepicker\" class=\"form-label\">Select a date</label>\r\n    <ngb-datepicker-month [NgbDatepicker]=\"datepicker\"></ngb-datepicker-month>\r\n    <ngb-datepicker #dateSelect></ngb-datepicker>\r\n  </mdb-form-control-->\r\n    <!--div class=\"form-group\">\r\n      <button class=\"btn btn-primary btn-block\">Login</button>\r\n    </div-->\r\n    <!--Grid row-->\r\n    <div  *ngIf=\"!isSuccessful\" class=\"row d-flex align-items-lg-center \">\r\n      <!--Grid column-->\r\n      <div class=\"form-group text-center mb-2  col-md-12 \">\r\n        <button type=\"button\" (click)=\"onSubmit()\" class=\"btn btn-success btn-block btn-rounded z-depth-1 waves-effect waves-light\">Register</button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n  </div>\r\n\r\n  <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\r\n    Your registration is successful!\r\n  </div>\r\n\r\n\r\n  <div hidden class=\"list-group-horizontal mb-4 col-md-12\">\r\n    <button type=\"button\" class=\" fa-pull-left btn btn-primary\">Save changes</button>\r\n    <!--button type=\"button\" class=\"fa-pull-right btn btn-secondary\" (click)=\"this.modalRef.close()\">Close</button-->\r\n  </div>\r\n\r\n  <br>\r\n</div>\r\n\r\n\r\n\r\n<div class=\"modal-content \">\r\n    <div class=\"modal-footer fal\">\r\n      <input type=\"checkbox\" class=\" form-check-input\" id=\"checkbox7\">\r\n      <label for=\"checkbox7\" class=\"form-check-label white-text\">Subscribe to our <a href=\"#\" class=\"green-text font-weight-bold\"> newsletter?</a></label>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { Component } from '@angular/core';\r\nimport { MdbModalRef } from 'mdb-angular-ui-kit/modal';\r\nimport {AuthService} from \"../../_services/auth.service\";\r\nimport {AbstractControl, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: './replace-pass-form.component.html',\r\n  styleUrls: ['./replace-pass-form.component.css']\r\n})\r\nexport class ReplacePassFormComponent {\r\n  replacePassForm: FormGroup;\r\n  isSuccessful = false;\r\n  isSignUpFailed = false;\r\n  submitted = false;\r\n  errorMessage = '';\r\n  empList: Array<String> = [];\r\n  apiResponse = { message: '', error: false };\r\n  errorFieldSubmitted: any = {};\r\n  closeResult = '';\r\n\r\n  constructor(public modalRef: MdbModalRef<ReplacePassFormComponent>,\r\n              private authService: AuthService) {\r\n    this.replacePassForm = new FormGroup({\r\n      userName: new FormControl(null, Validators.required),\r\n      oldPassword: new FormControl(null, Validators.minLength(1)),\r\n      password: new FormControl('', Validators.minLength(3)),\r\n      confirmPassword: new FormControl(null, Validators.minLength(3))\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n    const { userName, oldPassword, password, confirmPassword } = this.replacePassForm.value;\r\n    this.authService.replacePassForm(userName, oldPassword, password, confirmPassword).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.isSuccessful = true;\r\n        this.isSignUpFailed = false;\r\n        this.errorFieldSubmitted = {};\r\n        this.apiResponse.error = false;\r\n        this.apiResponse.message = 'Successful registration';\r\n      },\r\n      error => {\r\n        const errorResponse = JSON.parse(error.error);\r\n        this.apiResponse.error = true;\r\n        this.apiResponse.message = 'Registration error';\r\n        this.errorMessage = error.error.message;\r\n        this.isSignUpFailed = true;\r\n        if (errorResponse.error && errorResponse.message === 'VALIDATION_FAILED') {\r\n          this.errorFieldSubmitted = errorResponse.data;\r\n        }\r\n      }, () => {this.modalRef.close()}\r\n    );\r\n  }\r\n\r\n\r\n\r\n  get userName(): AbstractControl {\r\n    return this.replacePassForm.get('userName')!;\r\n  }\r\n\r\n  get oldPassword(): AbstractControl {\r\n    return this.replacePassForm.get('oldPassword')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.replacePassForm.get('password')!;\r\n  }\r\n\r\n  get confirmPassword(): AbstractControl {\r\n    return this.replacePassForm.get('confirmPassword')!;\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n  <!--div class=\"text-center\"-->\r\n    <label class=\"white-text mb-2 mt-2 font-weight-bold fas\">\r\n      <strong>REPLACE PASSWORD</strong>\r\n      <a class=\"green-text font-weight-bold\">\r\n        <strong> FORM</strong>\r\n      </a>\r\n    </label>\r\n\r\n  <!--/div-->\r\n  <button type=\"button\" class=\"btn btn-close white-text \" aria-label=\"Close\" (click)='modalRef.close(\"xbutton\")'></button>\r\n\r\n  <!--h5 class=\"modal-title\" id=\"exampleModalLabel\">REGISTRATION</h5-->\r\n\r\n</div>\r\n<div class=\"modal-body py-4 text-center expansionCard\">\r\n  <figure class=\"figure\">\r\n  <img aria-setsize=\"20\"  id=\"profile-img\" src=\"./assets/images/T.png\"\r\n       class=\"profile-img-card img-fluid rounded \"  alt=\"\"/>\r\n    <figcaption class=\"figure-caption text-center text-capitalize\">Tadiran Telecom</figcaption>\r\n  </figure>\r\n  <div class=\"text-white rgba-stylish-strong py-4 px-5 z-depth-2\" style=\"border-bottom: 2rem\">\r\n  <!--div class=\"form-outline\">\r\n    <input type=\"text\" id=\"typeText\" class=\"form-control\" />\r\n    <label  class=\"form-label\" for=\"typeText\">Your UserName</label>\r\n  </div-->\r\n\r\n  <form *ngIf=\"!isSuccessful\" [formGroup]=\"replacePassForm\">\r\n\r\n  <!--###################### Username input field ###################### -->\r\n  <div class=\"form-outline\">\r\n    <mdb-form-control  class=\"form-outline\">\r\n      <input [mdbValidate]=\"true\" mdbInput type=\"text\" id=\"typeText\"\r\n             class=\"form-control\"  formControlName=\"userName\" required />\r\n      <label class=\"form-label \" for=\"typeText\" >Username input</label>\r\n      <mdb-error *ngIf=\"userName?.invalid && (userName?.dirty || userName?.touched)\">\r\n        Username is required\r\n      </mdb-error>\r\n      <mdb-success *ngIf=\"userName?.valid && (userName?.dirty || userName?.touched)\">\r\n        Looks good!\r\n      </mdb-success>\r\n    </mdb-form-control>\r\n  </div>\r\n    <br>\r\n  <!--###################### Old Password input field ###################### -->\r\n  <div class=\"form-outline\">\r\n    <mdb-form-control  class=\"form-outline\">\r\n    <input [mdbValidate]=\"true\" mdbInput type=\"password\" id=\"typeOldPassword\"\r\n           class=\"form-control\" formControlName=\"oldPassword\" required minlength=\"1\" />\r\n    <label class=\"form-label\" for=\"typeOldPassword\">Current Password</label>\r\n      <mdb-error *ngIf=\"oldPassword?.invalid && (oldPassword?.dirty || oldPassword?.touched)\">\r\n        Current password is required\r\n      </mdb-error>\r\n      <mdb-success *ngIf=\"oldPassword?.valid && (oldPassword?.dirty || oldPassword?.touched)\">\r\n        Looks good!\r\n      </mdb-success>\r\n    </mdb-form-control>\r\n    <span class=\"text-danger error-input\" *ngIf=\"submitted && errorFieldSubmitted['oldPassword']\"\r\n          style=\"white-space: pre-line;  font-size: 14px;\">\r\n          {{errorFieldSubmitted['oldPassword'] | loginErrorMessage}}\r\n      <br><br>\r\n    </span>\r\n  </div>\r\n\r\n    <br>\r\n    <hr class=\"my-1 text-black-50\">\r\n    <br>\r\n\r\n  <!--###################### New Password input field ###################### -->\r\n  <div class=\"form-outline text-black-50\">\r\n    <mdb-form-control  class=\"form-outline\">\r\n    <input [mdbValidate]=\"true\" mdbInput type=\"password\" id=\"typePassword\"\r\n           class=\"form-control\" formControlName=\"password\" required minlength=\"3\" />\r\n    <label mdbLabel class=\"form-label form-white\" for=\"typePassword\">New Password</label>\r\n    <mdb-error *ngIf=\"password?.invalid && (password?.dirty || password?.touched)\">\r\n      Password is required\r\n    </mdb-error>\r\n    <mdb-success *ngIf=\"password?.valid && (password?.dirty || password?.touched)\">\r\n      Looks good!\r\n    </mdb-success>\r\n    </mdb-form-control>\r\n    <span class=\"text-danger error-input\" *ngIf=\"submitted && errorFieldSubmitted['password']\"\r\n          style=\"white-space: pre-line;  font-size: 14px;\">\r\n          {{errorFieldSubmitted['password'] | apiErrorMessage}}\r\n      <br><br>\r\n    </span>\r\n  </div>\r\n  <br>\r\n\r\n  <!--###################### Confirm Password input field ###################### -->\r\n  <div class=\"form-outline\">\r\n    <mdb-form-control  class=\"form-outline\">\r\n    <input [mdbValidate]=\"true\" mdbInput type=\"password\" id=\"typeConfirmPassword\"\r\n           class=\"form-control\" formControlName=\"confirmPassword\" required minlength=\"3\" />\r\n    <label mdbLabel class=\"form-label form-white\" for=\"typeConfirmPassword\">Confirm Password</label>\r\n      <mdb-error *ngIf=\"confirmPassword?.invalid && (confirmPassword?.dirty || confirmPassword?.touched)\">\r\n        Retype password is required\r\n      </mdb-error>\r\n      <mdb-success *ngIf=\"confirmPassword?.valid && (confirmPassword?.dirty || confirmPassword?.touched)\">\r\n        Looks good!\r\n      </mdb-success>\r\n    </mdb-form-control>\r\n    <span class=\"text-danger error-input\" *ngIf=\"submitted && errorFieldSubmitted['confirmPassword']\"\r\n          style=\"white-space: pre-line;  font-size: 14px;\">\r\n          {{errorFieldSubmitted['confirmPassword'] | apiErrorMessage}}\r\n      <br><br>\r\n    </span>\r\n  </div>\r\n  </form>\r\n  </div>\r\n\r\n\r\n  <!--Grid row-->\r\n  <div  *ngIf=\"!isSuccessful\" class=\"row d-flex align-items-lg-center border-bottom-0 \">\r\n    <!--Grid column-->\r\n    <div class=\"text-center mb-2  col-md-12 border-bottom-0\">\r\n      <button type=\"button\" (click)=\"onSubmit()\" class=\"btn btn-success btn-block btn-rounded z-depth-1 waves-effect waves-light border-bottom-0\"\r\n      style=\"margin-bottom: 0;\">Replace Password</button>\r\n    </div>\r\n  </div>\r\n  <div hidden class=\"list-group-horizontal mb-4 col-md-12\">\r\n    <button type=\"button\" class=\" fa-pull-left btn btn-primary\">Save changes</button>\r\n    <button type=\"button\" class=\"fa-pull-right btn btn-secondary\" (click)=\"modalRef.close()\">Close</button>\r\n  </div>\r\n\r\n</div>\r\n\r\n\r\n\r\n<div class=\"modal-content \">\r\n    <div class=\"modal-footer fal\">\r\n      <input type=\"checkbox\" class=\" form-check-input\" id=\"checkbox7\">\r\n      <label for=\"checkbox7\" class=\"form-check-label white-text\">Subscribe to our <a href=\"#\" class=\"green-text font-weight-bold\"> newsletter?</a></label>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'apiErrorMessage'\r\n})\r\nexport class ApiErrorMessagePipe implements PipeTransform {\r\n\r\n  transform(message: string, ...args: unknown[]): unknown {\r\n    const dataToArray = message.split(',').map(item => item.trim());\r\n    // convert array to string replacing comma with new line\r\n    return dataToArray.join('\\n');\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'loginErrorMessage'\r\n})\r\nexport class LoginErrorMessagePipe implements PipeTransform {\r\n\r\n  transform(message: string, ...args: unknown[]): unknown {\r\n    const dataToArray = message.split(',').map(item => item.trim());\r\n    // convert array to string replacing comma with new line\r\n    return dataToArray.join('\\n');\r\n  }\r\n\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\nimport { StoryInput } from \"../../stories/inputs/story-input.model\";\nimport {AuthService} from \"../_services/auth.service\";\nimport {FormGroup} from \"@angular/forms\";\nimport {TokenStorageService} from \"../_services/token-storage.service\";\nimport {Router} from \"@angular/router\";\nimport {AppConfig} from \"../app.config\";\nimport {BehaviorSubject, throwError} from \"rxjs\";\n\n\n\n\n@Component({\n  selector: 'profile2',\n  templateUrl: './profile2.component.html',\n  styleUrls: ['./profile2.component.scss']\n})\nexport default class Profile2Component implements OnInit {\n\n  currentUser: any;\n  accessToken: any;\n  refreshToken: any;\n  windowObjectReference: any;\n  refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n  private isRefreshing = false;\n  public appConfig: any;\n  private TOKEN_KEY: string;\n\n\n  constructor(private authService: AuthService,\n              private token: TokenStorageService,\n              private router: Router,) {\n    this.TOKEN_KEY = AppConfig.endpoints.TOKEN_KEY;\n  }\n\n  ngOnInit(): void {\n    this.currentUser = this.token.getUser();\n    this.accessToken = this.currentUser.accessToken;\n    this.refreshToken = this.currentUser.refreshToken;\n  }\n\n\n\n  openapp(): void {\n    console.log('window.location.origin.toString():  '+window.location.origin.toString());\n\n    this.router.navigate([]).then(result => { this.windowObjectReference = window.open(AppConfig.accServer.ACCWEBServers+'/accGCCS/'/*window.location.origin.toString()+\"/profile\"*/); });\n    console.log('window.location.origin.toString():  '+ this.windowObjectReference.window.document.getElementById(\"profile_title\").innerHTML);\n    var promise = new Promise((resolve, reject) => {this.windowObjectReference.window.document.getElementById(\"profile_title\").innerHTML = \"new title\";});\n\n    console.log('window.location.origin.toString():  '+ this.windowObjectReference.window.document.getElementById(\"profile_title\").innerHTML);\n\n  }\n\n  public forseRefreshToken(): void {\n\n    if (!this.isRefreshing) {\n      const token = this.token.getRefreshToken();\n      if (token)\n        this.authService.refreshToken(token).subscribe(\n          data => {\n            this.isRefreshing = false;\n            this.token.saveToken(data.accessToken);\n            this.token.saveRefreshToken(data.refreshToken);\n            this.refreshTokenSubject.next(data.accessToken);\n            this.currentUser = this.token.getUser();\n            this.accessToken = this.token.getToken();\n            this.refreshToken = this.token.getRefreshToken();\n          },\n          (err) => {\n            this.isRefreshing = false;\n\n            this.token.signOut();\n            return throwError(err);\n          }\n        );\n    }\n  }\n\n  public openNewTabForApp(appRequest: string[]): void {\n    const [ webapp, webappURLPrefix ] = appRequest.values();\n    var newAccessToken = \"\";\n    var newRefreshToken = \"\";\n    var newCurrentUser = \"\";\n\n    if (!this.isRefreshing) {\n      const token = this.token.getRefreshToken();\n      if (token)\n        this.authService.webapptab(token, webapp)\n          .then(\n            data => {\n              this.isRefreshing = false;\n              newAccessToken = (data.accessToken);\n              newRefreshToken = (data.refreshToken);\n              newCurrentUser = (data);\n            },\n            (reject) => {return throwError(reject.error);})\n          .then(() => {this.router.navigate([])\n            .then(result => { this.windowObjectReference = window.open(AppConfig.accServer.ACCWEBServers+webappURLPrefix);})\n            .then(result => { this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.TOKEN_KEY, newAccessToken);\n                this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.REFRESHTOKEN_KEY, newRefreshToken);\n                this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.USER_KEY, JSON.stringify(newCurrentUser));},\n              (err) => { this.isRefreshing = false;\n                return throwError(err);})});\n    }\n  }\n\n\n  public openNewWinForApp(appRequest: string[]): void {\n    /*webapp: string, webappURLPrefix: string*/\n    const [ webapp, webappURLPrefix ] = appRequest.values();\n    var newAccessToken = \"\";\n    var newRefreshToken = \"\";\n    var newCurrentUser = \"\";\n\n    if (!this.isRefreshing) {\n      const token = this.token.getRefreshToken();\n      if (token)\n        this.authService.webapptab(token, webapp)\n          .then(\n            data => {\n              this.isRefreshing = false;\n              newAccessToken = (data.accessToken);\n              newRefreshToken = (data.refreshToken);\n              newCurrentUser = (data);\n            },\n            (reject) => {return throwError(reject.error);})\n          .then(result => { this.windowObjectReference = window.open(AppConfig.accServer.ACCWEBServers+webappURLPrefix+'start.html',\n            'C-Sharpcorner', 'scrollbars=no');})\n          .then(result => { this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.TOKEN_KEY, newAccessToken);\n              this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.REFRESHTOKEN_KEY, newRefreshToken);\n              this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.USER_KEY, JSON.stringify(newCurrentUser));},\n            (err) => { this.isRefreshing = false;\n              return throwError(err);})\n    }\n  }\n\n}\n\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>Title</title>\r\n</head>\r\n<body>\r\n<storybook-background1></storybook-background1>\r\n\r\n\r\n<storybook-avatar id=\"avatar\" [label]=\"'DanK203'\" [isNotify]=\"true\"></storybook-avatar>\r\n\r\n\r\n<storybook-app-menu\r\n  (openNewWinForApp)=\"openNewWinForApp($event)\"\r\n  (openNewTabForApp)=\"openNewTabForApp($event)\">\r\n</storybook-app-menu>\r\n\r\n</body>\r\n</html>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\nimport {Router} from \"@angular/router\";\r\nimport {AuthService} from \"../_services/auth.service\";\r\nimport {AuthInterceptor, authInterceptorProviders} from \"../_helpers/auth.interceptor\";\r\nimport {catchError, switchMap} from \"rxjs/operators\";\r\nimport {BehaviorSubject, pipe, throwError} from \"rxjs\";\r\nimport {HTTP_INTERCEPTORS} from \"@angular/common/http\";\r\nimport { AppConfig } from \"../app.config\"\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  currentUser: any;\r\n  accessToken: any;\r\n  refreshToken: any;\r\n  windowObjectReference: any;\r\n  refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  private isRefreshing = false;\r\n  public appConfig: any;\r\n  private TOKEN_KEY: string;\r\n\r\n\r\n  constructor(private token: TokenStorageService, private router: Router, private authService: AuthService) {\r\n    this.TOKEN_KEY = AppConfig.endpoints.TOKEN_KEY;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.token.getUser();\r\n    this.accessToken = this.currentUser.accessToken;\r\n    this.refreshToken = this.currentUser.refreshToken;\r\n  }\r\n\r\n\r\n  openapp(): void {\r\n    console.log('window.location.origin.toString():  '+window.location.origin.toString());\r\n\r\n    this.router.navigate([]).then(result => { this.windowObjectReference = window.open(AppConfig.accServer.ACCWEBServers+'/accGCCS/'/*window.location.origin.toString()+\"/profile\"*/); });\r\n    //console.log('window.location.origin.toString():  '+ this.windowObjectReference\r\n    console.log('window.location.origin.toString():  '+ this.windowObjectReference.window.document.getElementById(\"profile_title\").innerHTML);\r\n    var promise = new Promise((resolve, reject) => {this.windowObjectReference.window.document.getElementById(\"profile_title\").innerHTML = \"new title\";});\r\n\r\n\r\n    //this.windowObjectReference.window.document.getElementById(\"profile_title\").innerHTML = \"new title\";\r\n    //this.windowObjectReference.window.document.done.\r\n    console.log('window.location.origin.toString():  '+ this.windowObjectReference.window.document.getElementById(\"profile_title\").innerHTML);\r\n    //let { username, password } = this.loginForm.value;\r\n    //username = this.loginForm.get(['username'])?.value.toString();\r\n    //let password = this.loginForm.get(['password'])?.value.toString();\r\n    //this.authenticationService.logout();\r\n  }\r\n\r\n  public forseRefreshToken(): void {\r\n    //@Value(\"${bezkoder.app.jwtExpirationMs}\")\r\n\r\n    if (!this.isRefreshing) {\r\n      const token = this.token.getRefreshToken();\r\n      if (token)\r\n        this.authService.refreshToken(token).subscribe(\r\n          data => {\r\n            this.isRefreshing = false;\r\n            this.token.saveToken(data.accessToken);\r\n            this.token.saveRefreshToken(data.refreshToken);\r\n            this.refreshTokenSubject.next(data.accessToken);\r\n            this.currentUser = this.token.getUser();\r\n            this.accessToken = this.token.getToken();\r\n            this.refreshToken = this.token.getRefreshToken();\r\n          },\r\n          (err) => {\r\n            this.isRefreshing = false;\r\n\r\n            this.token.signOut();\r\n            return throwError(err);\r\n          }\r\n        );\r\n\r\n\r\n    }\r\n  }\r\n\r\n  public openNewTabForApp(webapp: string, webappURLPrefix: string): void {\r\n    var newAccessToken = \"\";\r\n    var newRefreshToken = \"\";\r\n    var newCurrentUser = \"\";\r\n\r\n    if (!this.isRefreshing) {\r\n      const token = this.token.getRefreshToken();\r\n      if (token)\r\n        this.authService.webapptab(token, webapp)\r\n          .then(\r\n          data => {\r\n            this.isRefreshing = false;\r\n            newAccessToken = (data.accessToken);\r\n            newRefreshToken = (data.refreshToken);\r\n            newCurrentUser = (data);\r\n          },\r\n          (reject) => {return throwError(reject.error);})\r\n        .then(() => {this.router.navigate([])\r\n        .then(result => { this.windowObjectReference = window.open(AppConfig.accServer.ACCWEBServers+webappURLPrefix);})\r\n        .then(result => { this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.TOKEN_KEY, newAccessToken);\r\n                          this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.REFRESHTOKEN_KEY, newRefreshToken);\r\n                          this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.USER_KEY, JSON.stringify(newCurrentUser));},\r\n             (err) => { this.isRefreshing = false;\r\n                        return throwError(err);})});\r\n    }\r\n  }\r\n\r\n\r\n  public openNewWinForApp(webapp: string, webappURLPrefix: string): void {\r\n    var newAccessToken = \"\";\r\n    var newRefreshToken = \"\";\r\n    var newCurrentUser = \"\";\r\n\r\n    if (!this.isRefreshing) {\r\n      const token = this.token.getRefreshToken();\r\n      if (token)\r\n        this.authService.webapptab(token, webapp)\r\n          .then(\r\n            data => {\r\n              this.isRefreshing = false;\r\n              newAccessToken = (data.accessToken);\r\n              newRefreshToken = (data.refreshToken);\r\n              newCurrentUser = (data);\r\n            },\r\n            (reject) => {return throwError(reject.error);})\r\n            .then(result => { this.windowObjectReference = window.open(AppConfig.accServer.ACCWEBServers+webappURLPrefix+'start.html',\r\n                        'C-Sharpcorner', 'scrollbars=no');})\r\n            .then(result => { this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.TOKEN_KEY, newAccessToken);\r\n                this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.REFRESHTOKEN_KEY, newRefreshToken);\r\n                this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.USER_KEY, JSON.stringify(newCurrentUser));},\r\n              (err) => { this.isRefreshing = false;\r\n                return throwError(err);})\r\n    }\r\n  }\r\n  /*\r\n  forseRefreshToken(): void {\r\n    console.log('Sending forseRefreshToken request...   ');\r\n    this.authInterceptor.forseRefreshToken();\r\n    //authInterceptorProviders.\r\n  }*/\r\n}\r\n","<div class=\"container\" *ngIf=\"currentUser; else loggedOut\">\r\n  <br>\r\n  <header class=\"background jumbotron\">\r\n    <h3 class=\"font_0\" id=\"profile_title\">\r\n      {{ currentUser.username }} Profile\r\n    </h3>\r\n  </header>\r\n  <p>\r\n    <strong>accessToken:</strong>\r\n    <!--{{ currentUser.accessToken.substring(0, 20) }} ...\r\n    {{ currentUser.accessToken.substr(currentUser.accessToken.length - 20) }}-->\r\n    {{ accessToken }}\r\n  </p>\r\n  <p>\r\n    <strong>refreshToken:</strong>\r\n    {{ refreshToken }}\r\n    <br>\r\n    <button id=\"forseRefreshToken\" (click)=\"forseRefreshToken()\" style='text-align: left; width:auto;cursor: pointer;'>Refresh</button>\r\n    <br>\r\n    <button id=\"openNewGccsTab\" (click)='openNewTabForApp(\"GCCS\",\"/accGCCS/\")' style='text-align: left; width:auto;cursor: pointer;'>Open new tab for GCCS</button>\r\n    <br>\r\n    <button id=\"openNewAgentTab\" (click)='openNewWinForApp(\"AGENT\",\"/accAgent/\")' style='text-align: left; width:auto;cursor: pointer;'>Open new tab for Vee</button>\r\n    <br>\r\n    <button id=\"openNewWebRTTab\" (click)='openNewTabForApp(\"ACCREALTIME\",\"/accRealTime/\")' style='text-align: left; width:auto;cursor: pointer;'>Open new tab for WebRT</button>\r\n  </p>\r\n  <p>\r\n    <strong>Email:</strong>\r\n    {{ currentUser.email }}\r\n  </p>\r\n  <p>\r\n    <strong>ID:</strong>\r\n    {{ currentUser.id }}\r\n  </p>\r\n  <p>\r\n    <strong>Web App:</strong>\r\n    {{ currentUser.webApp }}\r\n  </p>\r\n  <strong>Roles:</strong>\r\n  <ul>\r\n    <li *ngFor=\"let role of currentUser.roles\">\r\n      {{ role }}\r\n    </li>\r\n  </ul>\r\n  <p><a href=\"http://tadiran2014.azurewebsites.net/en/products/unified-communications/aeonix/\" id=\"testid2\" target=\"iframe_a\">Tadiran Azure</a></p>\r\n  <p><a href=\"https://www.tadirantele.com/aeonix4cloud\" id=\"testid4\" target=\"iframe_a\">aeonix4cloud</a></p>\r\n  <iframe src=\"https://www.tadirantele.com/aeonix4cloud\" sandbox=\"allow-same-origin allow-scripts allow-popups allow-forms\"  name=\"iframe_a\" height=\"550px\" width=\"100%\" title=\"Iframe Example\">\r\n  </iframe>\r\n  <ul class=\"list-unstyled\">\r\n    <li class=\"media\">\r\n      <a href=\"https://172.28.8.245:8443/aeonix/mainForm.jsf\" class=\"app-icon-wide\"  target=\"_blank\" aria-current=\"true\">\r\n        <img class=\"\" src=\"./assets/images/aeonix_logo_72.png\" alt=\"Icon app number 1\">\r\n      </a>\r\n      <div class=\"media-body\">\r\n        <h5 class=\"mt-0 mb-1\">aeonix - SERVER</h5>\r\n        Aeonix is a software only communications solution that consolidates disparate business applications into a single, fault tolerant platform. The Aeonix Unified Communications platform, Aeonix Contact Center(ACC), and Aeonix Dispatch Console (ADC), all reside in one virtual instance or COTS server. Aeonix runs on any virtualization platform including VMware, Hyper-V and cloud platforms such as AWS, and can easily port from one platform to another.\r\n      </div>\r\n    </li>\r\n    <li class=\"media my-4\">\r\n      <button (click)=\"openapp()\" class=\"app-icon\" >\r\n        <img class=\"app-icon\" src=\"./assets/images/dashboard.png\" alt=\"Icon app number 2\" >\r\n      </button>\r\n      <!--a href=\"https://172.28.1.130:8445/accRealTime/index.jsp\" class=\"app-icon\" rel=\"opener\" aria-current=\"true\"></a-->\r\n      <div class=\"media-body\">\r\n        <h5 class=\"mt-0 mb-1\">AccGCCS - SERVER</h5>\r\n        Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.\r\n      </div>\r\n    </li>\r\n    <li class=\"media\">\r\n      <a href=\"https://localhost:8445/accGCCS/\" id=\"testid3\" target=\"iframe_a\" rel=\"noopener\" aria-current=\"false\">\r\n      <img class=\"app-icon\" src=\"./assets/images/management.png\" alt=\"Icon app number 3\">\r\n      </a>\r\n      <div class=\"media-body\">\r\n        <h5 class=\"mt-0 mb-1\">AccGCCS - LOCAL</h5>\r\n        Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.\r\n      </div>\r\n    </li>\r\n    <li class=\"media my-4\">\r\n      <a href=\"http://localhost:8080/accWebRT/\" id=\"testid5\" target=\"iframe_a\" rel=\"noopener\" aria-current=\"false\">\r\n        <img class=\"app-icon\" src=\"./assets/images/dashboard.png\" alt=\"Icon app number 4\" >\r\n      </a>\r\n\r\n      <div class=\"media-body\">\r\n        <h5 class=\"mt-0 mb-1\">AccWebRT - LOCAL</h5>\r\n        Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.\r\n      </div>\r\n    </li>\r\n    <li class=\"media\">\r\n      <a href=\"https://172.28.8.245:8445/accAgent/\" id=\"testid6\" target=\"iframe_a\" rel=\"noopener\" aria-current=\"false\">\r\n        <img class=\"app-icon\" src=\"./assets/images/management.png\" alt=\"Icon app number 5\">\r\n      </a>\r\n      <div class=\"media-body\">\r\n        <h5 class=\"mt-0 mb-1\">AccAgent - SERVER</h5>\r\n        Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.\r\n      </div>\r\n    </li>\r\n  </ul>\r\n</div>\r\n\r\n<ng-template #loggedOut>\r\n  Please login.\r\n</ng-template>\r\n","<div class=\"col-md-12\">\r\n  <div class=\"card card-container\">\r\n    <img\r\n      id=\"profile-img\"\r\n      src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n      class=\"profile-img-card\"/>\r\n    <form  *ngIf=\"!isSuccessful\"  name=\"form\"  (ngSubmit)=\"f.form.valid && onSubmit()\"  #f=\"ngForm\"  novalidate>\r\n      <div class=\"form-group\">\r\n        <label for=\"userName\">Username</label>\r\n        <input type=\"text\" class=\"form-control\" name=\"userName\" [(ngModel)]=\"form.userName\"\r\n          required minlength=\"3\" maxlength=\"20\" #userName=\"ngModel\"/>\r\n        <div class=\"alert-danger\" *ngIf=\"userName.errors && f.submitted\">\r\n          <div *ngIf=\"userName.errors.required\">Username is required</div>\r\n          <div *ngIf=\"userName.errors.minlength\">\r\n            Username must be at least 3 characters\r\n          </div>\r\n          <div *ngIf=\"userName.errors.maxlength\">\r\n            Username must be at most 20 characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email</label>\r\n        <input type=\"email\" class=\"form-control\" name=\"email\" [(ngModel)]=\"form.email\"\r\n          required email #email=\"ngModel\"/>\r\n        <div class=\"alert-danger\" *ngIf=\"email.errors && f.submitted\">\r\n          <div *ngIf=\"email.errors.required\">Email is required</div>\r\n          <div *ngIf=\"email.errors.email\">\r\n            Email must be a valid email address\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"form.password\"\r\n          required minlength=\"6\" #password=\"ngModel\"/>\r\n        <div class=\"alert-danger\" *ngIf=\"password.errors && f.submitted\">\r\n          <div *ngIf=\"password.errors.required\">Password is required</div>\r\n          <div *ngIf=\"password.errors.minlength\">\r\n            Password must be at least 6 characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <button class=\"btn btn-primary btn-block\">Sign Up</button>\r\n      </div>\r\n\r\n      <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\r\n        Signup failed!<br />{{ errorMessage }}\r\n      </div>\r\n    </form>\r\n\r\n    <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\r\n      Your registration is successful!\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport {FormControl, Validators} from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  form: any = {\r\n    username: null,\r\n    email: null/*new FormControl('', Validators.email)*/,\r\n    password: null\r\n  };\r\n  isSuccessful = false;\r\n  isSignUpFailed = false;\r\n  errorMessage = '';\r\n  empList: Array<String> = [];\r\n  closeResult = '';\r\n\r\n\r\n  constructor(private authService: AuthService) {\r\n    this.empList.push(\"admin\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const { username, email, password } = this.form;\r\n\r\n\r\n\r\n    this.authService.register(username, email, password, this.empList).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.isSuccessful = true;\r\n        this.isSignUpFailed = false;\r\n      },\r\n      err => {\r\n        this.errorMessage = err.error.message;\r\n        this.isSignUpFailed = true;\r\n      }\r\n    );\r\n  }\r\n}\r\n","import {Injectable, Pipe, PipeTransform} from '@angular/core';\r\nimport {ApiErrorMessageService} from \"./api-error-message.service\";\r\n\r\n@Pipe({\r\n  name: 'apiErrorMessage',\r\n  pure: false,\r\n})\r\nexport class ApiErrorMessagePipe implements PipeTransform {\r\n    constructor(private apiErrorMessageService: ApiErrorMessageService) {}\r\n\r\n    transform(value: any, args?: any): any {\r\n      this.apiErrorMessageService.language = args.language;\r\n      return this.apiErrorMessageService.apiErrorMessage(value)    }\r\n\r\n/*    transform(message: string, ...args: unknown[]): unknown {\r\n      const dataToArray = message.split(',').map(item => {item.trim();\r\n        console.log('ApiErrorMessagePipe: '+item.toString() +'   '+ item.trim().toString());\r\n      });\r\n\r\n      // convert array to string replacing comma with new line\r\n      return dataToArray.join('\\n');\r\n    }\r\n*/\r\n}\r\n\r\n\r\n\r\n","import {Injectable} from \"@angular/core\";\r\nimport {first} from \"rxjs/operators\";\r\n\r\n\r\n@Injectable()\r\nexport class ApiErrorMessageService {\r\n  public languages = ['login-main', 'eng']\r\n\r\n  public language  = 'login-main'\r\n\r\n  private dictionary: { [key: string]: TranslationSet } = {\r\n    'login-main': {\r\n      languange: 'login-main',\r\n      values: {\r\n        \"example\": \"Beispiel\",\r\n        \"must be a well-formed email address\": \"must be a well-formed email address\",\r\n        \"Error: A registry process should be made!\": \"Error: A registry process should be made!\",\r\n        \"Error: A registry process un valid!\": \"Incorrect user name\",\r\n        \"VALIDATION_FAILED\": \"* A registry process un valid!\",\r\n        \"Bad credentials\": \"Incorrect user name or password\",\r\n        \"Password matches one of %1$s previous passwords.\": \"Try again with a password you haven’t used before\",\r\n        \"Passwords do not match!\": \"* Passwords do not match!\"\r\n      },\r\n    },\r\n    eng: {\r\n      languange: 'eng',\r\n      values: {\r\n        \"example\": \"Example\",\r\n      },\r\n    },\r\n\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  apiErrorMessage(key: string): any {\r\n    if (this.dictionary[this.language ] != null) {\r\n      return this.dictionary[this.language ].values[key];\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport class TranslationSet {\r\n  public languange?: any;\r\n  public values: { [key: string]: any } = {}\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n//import { BrowserModule } from '@angular/platform-browser';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n\nimport {ButtonLanguageComponent} from \"../../stories/buttons/button-language/button-language.component\";\nimport {ButtonFortestComponent} from '../../stories/buttons/button-fortest/button-fortest.component';\nimport {ButtonGlobeComponent} from \"../../stories/buttons/button-globe/button-globe.component\";\nimport Background1Component from \"../../stories/pages/background1/background1Component\";\nimport {ButtonTadiranComponent} from \"../../stories/buttons/button-tadiran/button-tadiran.component\";\nimport CardComponent from \"../../stories/cards/card.component\";\nimport LoginFormComponent from \"../../stories/forms/login-form/login-form-component\";\nimport RegistryFormComponent from \"../../stories/forms/registry-form/registry-form.component\";\nimport {ButtonContinueComponent} from \"../../stories/buttons/button-continue/button-continue.component\";\nimport {ButtonExComponent} from \"../../stories/buttons/button-ex/button-ex.component\";\nimport {ButtonAppsComponent} from \"../../stories/buttons/button-apps/button-apps.component\";\nimport {ButtonSuccessfullyComponent} from \"../../stories/buttons/button-successfully/button-successfully.component\";\nimport Button from \"../../stories/buttons/button-example/button.component\";\nimport {AppMenuComponent} from \"../../stories/app-menu/app-menu.component\";\nimport {StoryInputComponent} from \"../../stories/inputs/story-input.component\";\nimport {HighlightDirective} from \"src/stories/buttons/button-fortest/custom-directive/Highlight.directive\";\nimport ReplacePassFormComponent from \"../../stories/forms/replace-pass-form/replace-pass-form.component\";\nimport PassStrengthComponent from \"../../stories/pass-strength/pass-strength.component\";\nimport {ApiErrorMessagePipe} from \"./pipes/api-error-message.pipe\";\nimport {AvatarComponent} from \"../../stories/avatars/avatar.component\";\nimport {AppComponent} from \"../app.component\";\nimport { DynamicCompDirective } from '../../stories/directive/dynamic-comp.directive';\nimport {PopoverDirective} from \"../../stories/directive/bubble-avatar/popover.directive\";\nimport { BubbleAvatarComponent } from '../../stories/directive/bubble-avatar/bubble-avatar.component';\nimport { ActionAvatarComponent } from '../../stories/actions/action-avatar/action-avatar.component';\nimport {PopoverInputDirective} from \"../../stories/directive/bubble-input/popover-input.directive\";\nimport { BubbleInputComponent } from '../../stories/directive/bubble-input/bubble-input.component';\nimport { ActionInputComponent } from '../../stories/actions/action-input/action-input.component';\nimport {MdbPopoverModule} from \"mdb-angular-ui-kit/popover\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {ButtonExclamationMarkComponent} from \"../../stories/buttons/button-exclamation-mark/button-exclamation-mark.component\"\nimport {ApiErrorMessageService} from \"./pipes/api-error-message.service\";\n\n\n\n\n@NgModule({\n  declarations: [\n    ButtonGlobeComponent, Background1Component, ButtonTadiranComponent, ButtonLanguageComponent,\n    ButtonFortestComponent,\n    CardComponent,\n    LoginFormComponent, LoginFormComponent, RegistryFormComponent,\n    ButtonContinueComponent, ButtonExComponent, ButtonAppsComponent, ButtonSuccessfullyComponent, Button,\n    AppMenuComponent,\n    StoryInputComponent,\n    HighlightDirective,\n    ReplacePassFormComponent,\n    PassStrengthComponent,\n    ApiErrorMessagePipe,\n    AvatarComponent,\n    DynamicCompDirective,\n    ActionAvatarComponent , PopoverDirective, BubbleAvatarComponent,\n    ActionInputComponent, PopoverInputDirective, BubbleInputComponent,\n    ButtonExclamationMarkComponent,\n\n\n  ],\n  imports: [\n    CommonModule,\n    FormsModule, ReactiveFormsModule, MdbPopoverModule, MatButtonModule,\n  ],\n  providers: [ ApiErrorMessageService],\n  exports: [\n    ButtonGlobeComponent, Background1Component, ButtonTadiranComponent, ButtonLanguageComponent,\n    ButtonFortestComponent,\n    CardComponent,\n    LoginFormComponent, LoginFormComponent, RegistryFormComponent,\n    ButtonContinueComponent, ButtonExComponent, ButtonAppsComponent, ButtonSuccessfullyComponent, Button,\n    AppMenuComponent,\n    StoryInputComponent,\n    CommonModule,\n    FormsModule, ReactiveFormsModule,\n    HighlightDirective,\n    ReplacePassFormComponent,\n    PassStrengthComponent,\n    AvatarComponent,\n    DynamicCompDirective,\n    ActionAvatarComponent   , PopoverDirective, BubbleAvatarComponent,\n    ActionInputComponent, PopoverInputDirective, BubbleInputComponent,\n    ButtonExclamationMarkComponent,\n\n\n\n  ],\n  bootstrap: [AvatarComponent, ]\n})\nexport class StorybookModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'action-avatar',\r\n  templateUrl: './action-avatar.component.html',\r\n  styleUrls: ['./action-avatar.component.css']\r\n})\r\nexport class ActionAvatarComponent implements OnInit {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","<div class=\"password-alert-text\">\r\n<p>\r\nYour password will expire in 3 Days.\r\n</p>\r\n<a >Change it now ></a>\r\n</div>\r\n","<div class=\"password-alert-text\" Style=\"text-indent: 27px; padding-bottom: 15px\">\r\n<tr><strong>{{this.actionHeader}}</strong></tr>\r\n</div>\r\n<div >\r\n\r\n  <table >\r\n\r\n    <!--thead>\r\n\r\n    </thead-->\r\n    <tbody>\r\n      <tr *ngFor=\"let actionInput of actionInputs\">\r\n        <td  *ngIf=\"actionInput.isFulfilled\" Style=\"color: green\">✔</td>\r\n        <td  *ngIf=\"!actionInput.isFulfilled\" Style=\"color: red\">X</td>\r\n        <td Style=\"text-indent: 7px\">{{ actionInput.presentingMessage }}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ActionInput} from \"./action-input.interface\";\r\n\r\n\r\ninterface USERS {\r\n  conditionName: String;\r\n  presentingMessage: String;\r\n  isFulfilled: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'action-input',\r\n  templateUrl: './action-input.component.html',\r\n  styleUrls: ['./action-input.component.css']\r\n})\r\nexport class ActionInputComponent implements OnInit {\r\n\r\n  actionInputs?: ActionInput[];\r\n  actionHeader?: string = \"The password must contain:\";\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public setConditions(actionInputs: ActionInput[]) {\r\n    this.actionInputs = actionInputs;\r\n  }\r\n\r\n  public setHeader(actionHeader: string) {\r\n    this.actionHeader = actionHeader;\r\n  }\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { StoryInput } from \"../inputs/story-input.model\";\r\nimport { AuthService } from '../../app/_services/auth.service';\r\nimport {MdbModalRef} from \"mdb-angular-ui-kit/modal\";\r\n\r\n\r\nexport interface AeonixAppCenterForm {\r\n  username: null, //new FormControl('ea2', Validators.min(2)),\r\n  password: null  //new FormControl('zaqwsx', Validators.min(2))\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-app-menu',\r\n  templateUrl: './app-menu.component.html',\r\n  styleUrls: ['./app-menu.css'],\r\n})\r\nexport class AppMenuComponent implements OnInit {\r\n\r\n  /*form: AeonixAppCenterForm = {\r\n    username: null,     //new FormControl('ea2', Validators.min(2)),\r\n    password: null      //new FormControl('zaqwsx', Validators.min(2))\r\n  };*/\r\n\r\n\r\n\r\n  @Input() formService!: AuthService;\r\n\r\n  credentials: any = {\r\n    username: null,\r\n    password: null\r\n  };\r\n\r\n  isLoginFailed = false;\r\n  loginErrorMessage = '';\r\n\r\n  openReplacePassword() {\r\n    //this.replacePassFormService.open(ReplacePassForm2Component);\r\n  }\r\n\r\n  constructor() {\r\n    this.validationForm = new FormGroup({\r\n      username: new FormControl('Telecom2', Validators.minLength(2)),\r\n      //email: new FormControl(null, Validators.email),\r\n      password: new FormControl('T@diran2022', Validators.minLength(2)),\r\n      //phone: new FormControl(null, Validators.pattern(new RegExp(\"[0-9 ]{12}\")))\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * Component property to define ordering of tasks\r\n   */\r\n  storyInputsInOrder: StoryInput[] = [];\r\n\r\n  validationForm: FormGroup;\r\n\r\n  @Input() isLoggedIn = false;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onPinInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onArchiveInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() openNewWinForApp = new EventEmitter<any>();\r\n\r\n  @Output() openNewTabForApp = new EventEmitter<any>();\r\n\r\n\r\n  @Input()\r\n  set storyInputs(arr: StoryInput[]) {\r\n    const initialTasks = [\r\n      ...arr.filter(t => t.state === 'USER NAME'),\r\n      ...arr.filter(t => t.state !== 'USER NAME'),\r\n    ];\r\n    const filteredTasks = initialTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME'\r\n    );\r\n    this.storyInputsInOrder = filteredTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME'\r\n    );\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.warn('Login Request!');\r\n    this.credentials.username=this.validationForm.get('username')?.value;\r\n    this.credentials.password=this.validationForm.get('password')?.value;\r\n\r\n    this.openNewWinForApp.emit(this.credentials);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  get userName(): AbstractControl {\r\n    return this.validationForm.get('username')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.validationForm.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.validationForm.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.validationForm.get('phone')!;\r\n  }\r\n\r\n\r\n}\r\n\r\n","\r\n\r\n\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <storybook-card class=\"card-container\" ></storybook-card>\r\n  <div  class=\"h-100 d-flex align-items-center justify-content-center\">\r\n    <div class=\"Aeonix-App-Center\">\r\n      <a>Aeonix App Center</a>\r\n    </div>\r\n\r\n    <div class=\"grid-container\">\r\n      <div class=\"item1\"><storybook-button-apps application=\"Agent\" label=\"Continue\" type=\"button\"\r\n        id=\"openNewAgentTab\" (click)='this.openNewWinForApp.emit([\"AGENT\",\"/accAgent/\"])' ></storybook-button-apps></div>\r\n      <div class=\"item2\"><storybook-button-apps application=\"WebRT\" label=\"Continue\" type=\"button\"\r\n        id=\"openNewWebRTTab\" (click)='this.openNewTabForApp.emit([\"ACCREALTIME\",\"/accRealTime/\"])' ></storybook-button-apps></div>\r\n      <div class=\"item3\"><storybook-button-apps application=\"GCCS\" label=\"Continue\" type=\"button\"\r\n        id=\"openNewGccsTab\" (click)='this.openNewTabForApp.emit([\"GCCS\",\"/accGCCS/\"])' ></storybook-button-apps></div>\r\n      <div class=\"item4\"><storybook-button-apps application=\"Admin\" label=\"Continue\" type=\"button\"\r\n        ></storybook-button-apps></div>\r\n      <div class=\"item5\"><storybook-button-apps application=\"GCCS\" label=\"Continue\" type=\"button\"\r\n        id=\"openNewGccsTab2\" (click)='this.openNewTabForApp.emit([\"GCCS\",\"/accGCCS/\"])'></storybook-button-apps></div>\r\n    </div>\r\n\r\n\r\n\r\n  </div>\r\n</div>\r\n\r\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n} from '@angular/core';\nimport {PopoverOptions} from \"../directive/popover.interface\";\nimport {ActionAvatarComponent} from \"../actions/action-avatar/action-avatar.component\";\n/**/\n@Component({\n  selector: 'storybook-avatar',\n  templateUrl: './avatar.component.html',\n  styleUrls: ['./avatar.scss'],\n})\nexport  class AvatarComponent {\n  popover: PopoverOptions = {\n    content: ActionAvatarComponent\n  };\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  isNotify = false;\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-avatar--primary' : 'storybook-avatar--secondary';\n\n    return ['sstorybook-avatar', `storybook-avatar--${this.size}`, mode];\n  }\n\n  ngOnInit(): void {\n  }\n}\n","\r\n<div [twPopover] = \"this.popover\">\r\n<!-- a (mouseover)=\"popover.show()\" (mouseleave)=\"popover.hide()\"\r\n   class=\"form-check-label white-text\"   mdbPopoverTitle=\"Account recovery\" #popover=\"mdbPopover\"\r\n   mdbPopover=\"To help keep your account safe, we will make sure that it’s really you trying to sign in\">\r\n</a\r\n  Forgot password?-->\r\n\r\n\r\n<button class=\"main\" highlight=\"blue\" colorName=\"blue\"\r\n        type=\"button\"\r\n        (click)=\"onClick.emit($event)\"\r\n        [ngClass]=\"classes\"\r\n        [ngStyle]=\"{ 'background-color': backgroundColor }\">\r\n\r\n  <div class=\"circle\">\r\n\r\n    <img src=\"/assets/images/ProfileImage 1.svg\" srcset=\"/assets/images/profile-image-1@2x.svg, /assets/images/profile-image-1@3x.svg\"\r\n         class=\"Avatar-Icon\"  alt=\"apps-button-icon\">\r\n\r\n  </div>\r\n  <storybook-button-exclamation-mark  *ngIf=\"this.isNotify\" class=\"exclamation-mark\" size=\"small\" ></storybook-button-exclamation-mark>\r\n  <div class=\"Avatar-Label\"><a class=\"font\">{{ label }}</a></div>\r\n</button>\r\n\r\n</div>\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-apps',\n  templateUrl: './button-apps.component.html',\n  styleUrls: ['./button-apps.component.scss']\n})\nexport class ButtonAppsComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * What application should the button linked to?\n   */\n  @Input()\n  application: 'Agent' | 'WebRT' | 'GCCS' | 'Admin' = 'Admin';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-apps--primary' : 'storybook-button-apps--secondary';\n\n    return ['storybook-button-apps', `storybook-button-apps--${this.application}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"button-apps\" class=\"container\">\n<div id=\"circle\" class=\"circle\">\n\n<img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n   src=\"./assets/images/{{application?.toString()}}.png\" class=\"Apps-Button-Icon center\"  alt=\"apps-button-icon\"/>\n</div>\n\n<div class=\"Button-App-Label \">\n  <div class=\"center mfont\">\n\n    {{ application.toString() }}\n\n  </div>\n</div>\n\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-continue',\n  templateUrl: './button-continue.component.html',\n  /*template: `<div class=\"storybook-button-continue\">\n    <img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n         src=\"./assets/images/img_2.png\" class=\"Language-Desktop-Icon\"  alt=\"form-desktop-icon\"/>\n  </div>`,*/\n  styleUrls: ['./button-continue.component.scss'],\n})\nexport class ButtonContinueComponent {\n\n  /**\n   * Is this gallery attribute are set?\n   */\n  @Input()\n  gallery = false;\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Continue';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-continue--primary' : 'storybook-button-continue--secondary';\n    const galleryMode = this.gallery ? 'storybook-button-continue--set-in' : 'storybook-button-continue--set-out';\n\n    return ['storybook-button-continue', `storybook-button-continue--${this.size}`, mode, galleryMode];\n  }\n\n\n}\n","<button id=\"login-button\" class=\"login-button\" (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\" >\n{{label}}\n</button>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-ex',\n  templateUrl: './button-ex.component.html',\n  styleUrls: ['./button-ex.component.css']\n})\nexport class ButtonExComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-ex--primary' : 'storybook-button-ex--secondary';\n\n    return ['storybook-button-ex', `storybook-button-ex--${this.size}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<button class=\"Vector\" (click)=\"onClick.emit($event)\" >\n\n    <img  [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n       src=\"./assets/images/x_close.png\"\n           class=\"Ex-Icon\"  alt=\"Ex-Icon\"/>\n\n</button>\n\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-exclamation-mark',\n  templateUrl: './button-exclamation-mark.component.html',\n  styleUrls: ['./button-exclamation-mark.component.scss']\n})\nexport class ButtonExclamationMarkComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-exclamation-mark--primary' : 'storybook-button-exclamation-mark--secondary';\n\n    return ['storybook-button-exclamation-mark', `storybook-button-exclamation-mark--${this.size}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"button-exclamation-mark\" class=\"container\">\n<div id=\"button-exclamation-mark-circle\" class=\"circle\" (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\">\n\n<img\n     src=\"./assets/images/Exclamation.png\" class=\"Exclamation-Mark-Icon center\" alt=\"exclamation-mark-button-icon\"/>\n</div>\n\n\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-fortest',\n  template: ` <p >Highlight Directive</p>\n    <button highlight=\"blue\" colorName=\"blue\"\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button-fortest.css'],\n})\nexport  class ButtonFortestComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[highlight]',\r\n})\r\nexport class HighlightDirective {\r\n  constructor(private eleRef: ElementRef) {}\r\n\r\n  @Input() highlight: any;\r\n  @Input() colorName: any;\r\n\r\n\r\n  @HostListener('mouseover') onMouseOver() {\r\n    this.eleRef.nativeElement.style.color = this.colorName;\r\n  }\r\n  @HostListener('mouseleave') onMouseLeave() {\r\n    this.eleRef.nativeElement.style.color = 'black';\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-globe',\n  templateUrl: './button-globe.component.html',\n  styleUrls: ['./button-globe.component.css']\n})\nexport class ButtonGlobeComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-tadiran--primary' : 'storybook-button-tadiran--secondary';\n\n    return ['storybook-button-tadiran', `storybook-tadiran-icon--${this.size}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"Vector\">\n<img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n   src=\"./assets/images/GlobeIcon.png\" class=\"Language-Desktop-Icon\"  alt=\"form-desktop-icon\"/>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-language',\n  templateUrl: './button-language.component.html',\n  styleUrls: ['./button-language.component.css']\n})\nexport class ButtonLanguageComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-form--primary' : 'storybook-button-form--secondary';\n\n    return ['storybook-button-form', `storybook-language-icon--${this.size}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"Vector\">\n<img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n   src=\"./assets/images/language-desktop-icon.png\"\n       srcset=\"./assets/images/language-desktop-icon@2x.png 2x,\n             /assets/images/language-desktop-icon@3x.png 3x\"\n       class=\"Language-Desktop-Icon\"  alt=\"form-desktop-icon\"/>\n\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-successfully',\n  templateUrl: './button-successfully.component.html',\n  styleUrls: ['./button-successfully.component.css']\n})\nexport class ButtonSuccessfullyComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-successfully--primary' : 'storybook-button-successfully--secondary';\n\n    return ['storybook-button-successfully', `storybook-button-successfully--${this.size}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"button-successfully\" class=\"container\">\n<div class=\"circle\">\n\n<img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n     src=\"./assets/images/Vee.png\" class=\"Vee-Icon center\" alt=\"successfully-button-icon\"/>\n</div>\n\n\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-tadiran',\n  /*templateUrl: './button-continue.component.html',*/\n  template: `<div class=\"storybook-button-tadiran\">\n    <img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n         src=\"./assets/images/img_2.png\" class=\"Language-Desktop-Icon\"  alt=\"language-desktop-icon\"/>\n  </div>`,\n  styleUrls: ['./button-tadiran.component.scss'],\n})\nexport class ButtonTadiranComponent {\n\n  /**\n   * Is this gallery attribute are set?\n   */\n  @Input()\n  gallery = false;\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-tadiran--primary' : 'storybook-button-tadiran--secondary';\n    const galleryMode = this.gallery ? 'storybook-button-tadiran--set-in' : 'storybook-button-tadiran--set-out';\n\n    return ['storybook-button-tadiran', `storybook-button-tadiran--${this.size}`, mode, galleryMode];\n  }\n\n\n}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.css']\r\n})\r\nexport default class CardComponent  {\r\n\r\n\r\n\r\n  /**\r\n   * Is this the principal call to action on the login-main?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large'  = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-card--primary' : 'storybook-card--secondary';\r\n\r\n    return ['storybook-card', `storybook-card--${this.size}`, mode];\r\n  }\r\n\r\n\r\n\r\n}\r\n","\r\n  <div class=\"card\">\r\n\r\n  </div>\r\n\r\n\r\n","import {\r\n  Component,\r\n  Input,\r\n  ViewChild,\r\n  OnInit,\r\n  AfterViewInit,\r\n  ComponentFactoryResolver,\r\n  ChangeDetectionStrategy,\r\n  ApplicationRef,\r\n  Output,\r\n  EventEmitter,\r\n  Type\r\n} from '@angular/core';\r\nimport { DynamicCompDirective } from '../dynamic-comp.directive';\r\nimport { PopoverOptions } from '../popover.interface'\r\nimport {ActionAvatarComponent} from \"src/stories/actions/action-avatar/action-avatar.component\";\r\n\r\n\r\n@Component({\r\n  selector: 'bubble-avatar',\r\n    templateUrl: './bubble-avatar.component.html',\r\n  styleUrls: ['./bubble-avatar.component.scss']\r\n})\r\nexport class BubbleAvatarComponent implements OnInit, AfterViewInit{\r\n  @Input() display: any;\r\n  @Input() popover: any;\r\n  @Input()  options?: PopoverOptions;\r\n  show: boolean = false;\r\n  isDynamic: boolean = false;\r\n  @ViewChild(DynamicCompDirective, {static: true}) content!: DynamicCompDirective;\r\n  @Output() triggerDetectionChange: EventEmitter<void> = new EventEmitter<void> ();\r\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    if (this.options && typeof this.options.content !== \"string\") {\r\n      this.isDynamic = true;\r\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(<Type<any>>this.options.content);\r\n      const viewContainerRef = this.content.viewContainerRef;\r\n      viewContainerRef.clear();\r\n      viewContainerRef.createComponent(componentFactory);\r\n    }\r\n\r\n  }\r\n  ngAfterViewInit(): void {}\r\n\r\n  showPopup() {\r\n    this.show = true;\r\n    this.triggerDetectionChange.emit();\r\n  }\r\n\r\n  hidePopup() {\r\n    this.show = false;\r\n    this.triggerDetectionChange.emit();\r\n  }\r\n\r\n  loadCarComponent(){\r\n    const _viewContainerRef = this.content.viewContainerRef;\r\n\r\n    //removes all views in that container\r\n    _viewContainerRef.clear();\r\n\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(<Type<any>>this.options?.content);\r\n\r\n    //Create an instance of the component\r\n    const carComponentRef = _viewContainerRef.createComponent<ActionAvatarComponent>(componentFactory);\r\n/*\r\n    //Pass data to the component\r\n    carComponentRef.instance.image = 'https://images.unsplash.com/photo-1494976388531-d1058494cdd8?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80';\r\n*/\r\n  }\r\n}\r\n","<div class=\"tooltip\" [ngClass]=\"{'tooltip-display' : show}\">\r\n  <!--button (click)=\"loadCarComponent()\">Load Car Component</button-->\r\n  <span *ngIf=\"!isDynamic\">{{popover}}</span>\r\n  <ng-template appDynamicComp>\r\n  </ng-template>\r\n\r\n</div>\r\n\r\n","import {\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Directive,\r\n  ElementRef,\r\n  HostListener,\r\n  Input,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { PopoverOptions } from '../popover.interface';\r\nimport {BubbleAvatarComponent} from \"./bubble-avatar.component\";\r\n\r\n@Directive({\r\n  selector: '[twPopover]',\r\n})\r\nexport class PopoverDirective {\r\n  @Input(\"twPopover\") popover?: PopoverOptions;\r\n\r\n  popoverComponentRef?: ComponentRef<BubbleAvatarComponent>;\r\n  @HostListener('mouseover', ['$event']) onMouseOver($event: any){\r\n    this.popoverComponentRef?.instance.showPopup();\r\n    //this.eleRef.nativeElement.style.color = 'blue';\r\n  }\r\n\r\n  @HostListener('mouseleave', ['$event']) onLeave($event: any){\r\n    this.popoverComponentRef?.instance.hidePopup();\r\n  }\r\n\r\n  @HostListener('click', ['$event']) onClick($event: any){\r\n    this.popoverComponentRef?.instance.showPopup();\r\n  }\r\n\r\n\r\n\r\n\r\n  constructor(private eleRef: ElementRef,\r\n              private el: ElementRef,\r\n              private viewContainer: ViewContainerRef,\r\n              private componentFactoryResolver: ComponentFactoryResolver) {}\r\n\r\n  @Input() highlight: any;\r\n  @Input() colorName: any;\r\n\r\n/*\r\n  @HostListener('mouseover') onMouseOver() {\r\n    this.popoverComponentRef?.instance.showPopup();\r\n    this.eleRef.nativeElement.style.color = this.colorName;\r\n  }*/\r\n\r\n\r\n  ngOnInit(): void {\r\n    const factory =  this.componentFactoryResolver.resolveComponentFactory(BubbleAvatarComponent);\r\n\r\n    const comp = factory.create(this.viewContainer.injector);\r\n    comp.instance.display = \"I test some content\";\r\n    comp.instance.popover = this.popover?.content;\r\n    comp.instance.options = this.popover;\r\n\r\n    this.popoverComponentRef = comp;\r\n    this.el.nativeElement.classList.add(\"wrapper\");\r\n    this.el.nativeElement.appendChild(comp.location.nativeElement);\r\n\r\n    comp.hostView.detectChanges();\r\n\r\n    comp.instance.triggerDetectionChange.subscribe(() =>  {\r\n      comp.hostView.detectChanges();\r\n    });\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ViewChild,\r\n  OnInit,\r\n  AfterViewInit,\r\n  ComponentFactoryResolver,\r\n  ChangeDetectionStrategy,\r\n  ApplicationRef,\r\n  Output,\r\n  EventEmitter,\r\n  Type, ComponentRef\r\n} from '@angular/core';\r\nimport { DynamicCompDirective } from '../dynamic-comp.directive';\r\nimport { PopoverOptions } from '../popover.interface'\r\nimport {ActionInputComponent} from \"src/stories/actions/action-input/action-input.component\";\r\nimport {ActionInput} from \"../../actions/action-input/action-input.interface\";\r\n\r\n\r\n@Component({\r\n  selector: 'bubble-input',\r\n    templateUrl: './bubble-input.component.html',\r\n  styleUrls: ['./bubble-input.component.scss']\r\n})\r\nexport class BubbleInputComponent implements OnInit, AfterViewInit{\r\n  @Input() display: any;\r\n  @Input() popover: any;\r\n  @Input() data?: ActionInput[];\r\n  @Input() header?: string;\r\n  @Input()  options?: PopoverOptions;\r\n  show: boolean = false;\r\n  isDynamic: boolean = false;\r\n  @ViewChild(DynamicCompDirective, {static: true}) content!: DynamicCompDirective;\r\n  @Output() triggerDetectionChange: EventEmitter<void> = new EventEmitter<void> ();\r\n  actionInputComponentRef?: ComponentRef<any>;\r\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    if (this.options && typeof this.options.content !== \"string\") {\r\n      this.isDynamic = true;\r\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(<Type<any>>this.options.content);\r\n      const viewContainerRef = this.content.viewContainerRef;\r\n      viewContainerRef.clear();\r\n      this.actionInputComponentRef = viewContainerRef.createComponent(componentFactory);\r\n      this.actionInputComponentRef.instance.setConditions(this.data);\r\n      this.actionInputComponentRef.instance.setHeader(this.header);\r\n    }\r\n\r\n  }\r\n  ngAfterViewInit(): void {}\r\n\r\n  showPopup() {\r\n    if (this.data != undefined && this.data?.length > 0) {\r\n      this.show = true;\r\n    }\r\n    this.triggerDetectionChange.emit();\r\n  }\r\n\r\n  hidePopup() {\r\n    this.show = false;\r\n    this.triggerDetectionChange.emit();\r\n  }\r\n\r\n  setData(data: ActionInput[]) {\r\n    this.data = data;\r\n    this.actionInputComponentRef?.instance.setConditions(this.data);\r\n  }\r\n\r\n  setHeader(header: string) {\r\n    this.header = header;\r\n    this.actionInputComponentRef?.instance.setHeader(this.header);\r\n  }\r\n\r\n  /*   loadCarComponent(){\r\n     const _viewContainerRef = this.content.viewContainerRef;\r\n\r\n     //removes all views in that container\r\n     _viewContainerRef.clear();\r\n\r\n     const componentFactory = this.componentFactoryResolver.resolveComponentFactory(<Type<any>>this.options?.content);\r\n\r\n     //Create an instance of the compo\r\n     /*    const carComponentRef = _viewContainerRef.createComponent<ActionInputComponent>(componentFactory);\r\n\r\n         //Pass data to the component\r\n         carComponentRef.instance.image = 'https://images.unsplash.com/photo-1494976388531-d1058494cdd8?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80';\r\n\r\n   }*/\r\n}\r\n","<div class=\"tooltip\" [ngClass]=\"{'tooltip-display' : show}\">\r\n  <!--button (click)=\"loadCarComponent()\">Load Car Component</button-->\r\n  <span *ngIf=\"!isDynamic\">{{popover}}</span>\r\n  <ng-template appDynamicComp>\r\n  </ng-template>\r\n\r\n</div>\r\n\r\n","import {\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Directive,\r\n  ElementRef,\r\n  HostListener,\r\n  Input,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { PopoverOptions } from '../popover.interface';\r\nimport {BubbleInputComponent} from \"./bubble-input.component\";\r\nimport {ActionInput} from \"../../actions/action-input/action-input.interface\";\r\n\r\n@Directive({\r\n  selector: '[inputPopover]',\r\n})\r\nexport class PopoverInputDirective {\r\n  @Input(\"inputPopover\") popover?: PopoverOptions;\r\n\r\n  popoverComponentRef?: ComponentRef<BubbleInputComponent>;\r\n  @HostListener('mouseover', ['$event']) onMouseOver($event: any){\r\n    this.popoverComponentRef?.instance.showPopup();\r\n    //this.eleRef.nativeElement.style.color = 'blue';\r\n  }\r\n\r\n  @HostListener('mouseleave', ['$event']) onLeave($event: any){\r\n    this.popoverComponentRef?.instance.hidePopup();\r\n  }\r\n\r\n  @HostListener('click', ['$event']) onClick($event: any){\r\n    this.popoverComponentRef?.instance.showPopup();\r\n  }\r\n\r\n  @HostListener('keyup', ['$event']) onDataChange($event: any) {\r\n    this.popoverComponentRef?.instance.setData(this.data!);\r\n    this.popoverComponentRef?.instance.showPopup();\r\n  }\r\n\r\n\r\n  constructor(private eleRef: ElementRef,\r\n              private el: ElementRef,\r\n              private viewContainer: ViewContainerRef,\r\n              private componentFactoryResolver: ComponentFactoryResolver) {}\r\n\r\n  @Input() highlight: any;\r\n  @Input() data?: ActionInput[] | undefined;\r\n  @Input() header?: string = '';\r\n\r\n/*\r\n  @HostListener('mouseover') onMouseOver() {\r\n    this.popoverComponentRef?.instance.showPopup();\r\n    this.eleRef.nativeElement.style.color = this.colorName;\r\n  }*/\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    const factory =  this.componentFactoryResolver.resolveComponentFactory(BubbleInputComponent);\r\n\r\n    const comp = factory.create(this.viewContainer.injector);\r\n    comp.instance.display = \"I test some content\";\r\n    comp.instance.popover = this.popover?.content;\r\n    comp.instance.options = this.popover;\r\n    comp.instance.data = this.data;\r\n    comp.instance.header = this.header;\r\n\r\n    this.popoverComponentRef = comp;\r\n    this.el.nativeElement.classList.add(\"wrapper\");\r\n    this.el.nativeElement.appendChild(comp.location.nativeElement);\r\n\r\n    comp.hostView.detectChanges();\r\n\r\n    comp.instance.triggerDetectionChange.subscribe(() =>  {\r\n      comp.hostView.detectChanges();\r\n    });\r\n  }\r\n\r\n}\r\n","import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appDynamicComp]'\r\n})\r\nexport class DynamicCompDirective {\r\n\r\n  constructor(public viewContainerRef: ViewContainerRef) {}\r\n\r\n}\r\n","import {Component, ElementRef, EventEmitter, Input, OnInit, Output, Renderer2, ViewChild} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { StoryInput } from \"../../inputs/story-input.model\";\r\nimport { AuthService } from '../../../app/_services/auth.service';\r\n//import {ApiErrorMessageService} from \"../../../app/storybook/pipes/api-error-message.service\";\r\n//import {ApiErrorMessageService} from \"../../../app/storybook/pipes/api-error-message.service\";\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-login-form',\r\n  templateUrl: './login-form-component.html',\r\n  styleUrls: ['./login-form.css'],\r\n})\r\nexport default class LoginFormComponent implements OnInit {\r\n\r\n\r\n  param = {language: 'login-main'};\r\n\r\n  @Input() formService!: AuthService;\r\n\r\n\r\n  @Input() isLoginFailed = false;\r\n  @Input() loginErrorMessage = '';\r\n\r\n\r\n\r\n  openReplacePassword() {\r\n    //this.replacePassFormService.open(ReplacePassForm2Component);\r\n  }\r\n\r\n  constructor(/*private apiErrorMessage: ApiErrorMessageService*/) {\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * @ignore\r\n   * Component property to define ordering of tasks\r\n   */\r\n  storyInputsInOrder: StoryInput[] = [];\r\n\r\n  @Input() mForm: FormGroup = new FormGroup({}); /* = new FormGroup({\r\n  username: new FormControl('Telecom4', Validators.minLength(2)),\r\n  password: new FormControl('T@diran2022', Validators.minLength(2)),\r\n});*/\r\n\r\n/*\r\n  validationFormInOrder: { [p: string]: AbstractControl } =[];\r\n  @Input()\r\n  set registerForm(arr: FormGroup) {\r\n    this.validationFormInOrder = arr.controls\r\n  }*/\r\n\r\n  @Input() isLoggedIn = false;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onPinInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onArchiveInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() sendLoginReq = new EventEmitter();\r\n\r\n\r\n  @Input()\r\n  set storyInputs(arr: StoryInput[]) {\r\n    const initialTasks = [\r\n      ...arr.filter(t => t.state === 'USER NAME'),\r\n      ...arr.filter(t => t.state !== 'USER NAME'),\r\n    ];\r\n    const filteredTasks = initialTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME'\r\n    );\r\n    this.storyInputsInOrder = filteredTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME'\r\n    );\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.warn('Login Request!');\r\n\r\n    this.sendLoginReq.emit();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  get userName(): AbstractControl {\r\n    return this.mForm?.get('username')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.mForm?.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.mForm?.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.mForm?.get('phone')!;\r\n  }\r\n\r\n\r\n}\r\n\r\n","\r\n\r\n\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <storybook-card class=\"card-container\"></storybook-card>\r\n  <div  class=\"h-100 d-flex align-items-center justify-content-center\">\r\n    <div class=\"form-header\">\r\n      <a>Aeonix App Center</a>\r\n    </div>\r\n\r\n    <br>\r\n    <!--form name=\"form\"  (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate --> <!-- *ngIf=\"!isRegSuccess\"-->\r\n      <form name=\"currentForm\"   [formGroup]=\"mForm\">\r\n      <div  *ngIf=\"!isLoggedIn\" class=\"Vector\">\r\n\r\n        <div class=\"login-button\">\r\n\r\n            <div *ngIf=\"isLoggedIn\">isRegSuccess</div>\r\n            <div *ngIf=\"!isLoggedIn && storyInputsInOrder.length === 0\">empty</div>\r\n            <storybook-input\r\n              [storyInput]=\"storyInputsInOrder[0]\"\r\n              (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n              (onPinInput)=\"onPinInput.emit($event)\"\r\n              [currentForm]=\"mForm\">\r\n            </storybook-input>\r\n\r\n            <storybook-input\r\n              [storyInput]=\"storyInputsInOrder[1]\"\r\n              (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n              (onPinInput)=\"onPinInput.emit($event)\"\r\n              [currentForm]=\"mForm\">\r\n            </storybook-input>\r\n\r\n\r\n            <br>\r\n            <div class=\"thematic-break\"></div>\r\n            <div class=\"login-failed-message\" role=\"alert\" >\r\n              <p *ngIf=\"isLoginFailed\">*  {{ loginErrorMessage | apiErrorMessage: param }}</p>\r\n            </div>\r\n\r\n\r\n            <a (click)=\"openReplacePassword()\" class=\"forgot-password\"  href=\"#/login\" >\r\n              {{ 'Forgot password?'  }}\r\n            </a>\r\n\r\n            <storybook-button-continue size=\"medium\" label=\"Continue \" type=\"button\" (click)=\"onSubmit()\" ></storybook-button-continue>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n","import {\r\n  AfterViewChecked,\r\n  Component, Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input, OnChanges,\r\n  OnInit,\r\n  Output,\r\n  QueryList,\r\n  Renderer2, SimpleChanges, ViewChild,\r\n  ViewChildren\r\n} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { StoryInput } from \"src/stories/inputs/story-input.model\";\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport {ApiErrorMessageService} from \"../../../app/storybook/pipes/api-error-message.service\";\r\n//import {BehaviorSubject} from \"rxjs\";\r\n//import {StoryInputComponent} from \"../../inputs/story-input.component\";\r\n\r\n/*\r\n@Directive({selector: 'storybook-input'})\r\nexport class StoryInput {\r\n  @Input() storyInput!: StoryInput;\r\n}\r\n*/\r\n@Component({\r\n  selector: 'storybook-registry-form',\r\n  templateUrl: './registry-form.component.html',\r\n  styleUrls: ['./registry-form.css'],\r\n})\r\nexport default class RegistryFormComponent implements OnInit, AfterViewChecked, OnChanges {\r\n\r\n/*\r\n  @ViewChild('storybook-input')\r\n  set mStoryInput(v: StoryInput) {\r\n    setTimeout(() => {\r\n      this.selectedPane = v.id;\r\n      console.log('this.selectedPane'+this.selectedPane.toString())\r\n    }, 30);\r\n  }\r\n  selectedPane: string = '';\r\n  shouldShow = true;\r\n  toggle() {\r\n    this.shouldShow = !this.shouldShow;\r\n  }\r\n*/\r\n\r\n  @Input() formService!: AuthService;\r\n\r\n  credentials: any = {\r\n    username: null,\r\n    password: null\r\n  };\r\n\r\n  @Input() isRegFailed = false;\r\n  @Input() regErrorMessage: any = {};\r\n\r\n  openReplacePassword() {\r\n    //this.replacePassFormService.open(ReplacePassForm2Component);\r\n  }\r\n\r\n  @ViewChild('formHeader', { static: false }) mainHeader?: ElementRef;\r\n  @ViewChild('storybook-input', { static: false }) storybookInput?: ElementRef;\r\n\r\n\r\n  param = {language: 'login-main'};\r\n\r\n  constructor(private renderer: Renderer2) {\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * Component property to define ordering of tasks\r\n   */\r\n  storyInputsInOrder: StoryInput[] = [];\r\n\r\n  @Input() mForm: FormGroup  = new FormGroup({});\r\n  /*username: new FormControl('', Validators.minLength(2)),\r\n  password: new FormControl('T@diran2022', Validators.minLength(2)),\r\n  email: new FormControl('', Validators.email),\r\n  phone: new FormControl(null, Validators.pattern(new RegExp(\"[0-9 ]{12}\")))*/\r\n\r\n  changeLog: string[] = [];\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.isRegSuccess) {\r\n      if (!changes.isRegSuccess.previousValue &&  changes.isRegSuccess.currentValue) {\r\n        console.warn('Register Request Succeeded!');\r\n        this.loadSuccessfullyLoggedIn();\r\n      }\r\n    }\r\n    /*if (changes.isRegFailed || changes.regErrorMessage) {\r\n      console.log('isRegFailed' + this.regErrorMessage['message'])\r\n    }*/\r\n  }\r\n\r\n\r\n\r\n  @Input() isRegSuccess = false;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onPinInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onArchiveInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() sendRegReq: EventEmitter<void> = new EventEmitter();\r\n\r\n  @Output() clickXButton: EventEmitter<void> = new EventEmitter();\r\n\r\n\r\n  @Input()\r\n  set storyInputs(arr: StoryInput[]) {\r\n    const initialTasks = [\r\n      ...arr.filter(t => t.state === 'USER NAME'),\r\n      ...arr.filter(t => t.state !== 'USER NAME'),\r\n    ];\r\n    const filteredTasks = initialTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME' || t.state === 'EMAIL' || t.state === 'PHONE NUMBER FOR AUTHENTICATION'\r\n    );\r\n    this.storyInputsInOrder = filteredTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME' || t.state === 'EMAIL' || t.state === 'PHONE NUMBER FOR AUTHENTICATION');\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.warn('Registry Request Sent!');\r\n\r\n    //this.renderer.setAttribute(this.storybookInput?.nativeElement ,'hidden', 'true');\r\n    //this.renderer.setAttribute(this.mainHeader?.nativeElement ,'hidden', 'true');\r\n    //this.renderer.setProperty(this.mainHeader?.nativeElement ,'innerHTML','You have successfully complete your registeration!');\r\n\r\n\r\n    //this.renderer.setAttribute(this.storybookInput?.nativeElement ,'innerHTML','true');\r\n    this.sendRegReq.emit();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n  get userName(): AbstractControl {\r\n    return this.mForm?.get('username')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.mForm?.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.mForm?.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.mForm?.get('phone')!;\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    //console.log(this.childComp?.length)\r\n  }\r\n\r\n  loadSuccessfullyLoggedIn(){\r\n    this.renderer.setProperty(this.mainHeader?.nativeElement ,'innerHTML','You have successfully complete your registeration!');\r\n\r\n\r\n  }\r\n\r\n}\r\n\r\n","\r\n\r\n\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <storybook-card class=\"card-container\"></storybook-card>\r\n  <div  class=\"h-100 d-flex align-items-center justify-content-center\">\r\n    <storybook-button-ex id=\"button-ex\" (click)=\"this.clickXButton.emit()\" ></storybook-button-ex>\r\n    <div class=\"form-header\">\r\n      <a class=\"main-form-header\" #formHeader>Complete Registration</a>\r\n      <br>\r\n      <a *ngIf=\"!isRegSuccess\" class=\"sub-form-header\">complete the registration by filling the missing info:</a>\r\n\r\n    <br>\r\n    <!--form name=\"form\"  (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate --> <!-- *ngIf=\"!isRegSuccess\"-->\r\n      <form name=\"currentForm\"   [formGroup]=\"mForm\">\r\n      <div class=\"Vector\">\r\n\r\n\r\n        <div *ngIf=\"isRegSuccess\" id=\"button-successfully\" style=\"\">\r\n          <storybook-button-successfully   style=\"position: relative; margin-bottom: 50px;\"></storybook-button-successfully>\r\n        </div>\r\n\r\n        <div class=\"login-button\">\r\n            <div *ngIf=\"!isRegSuccess && storyInputsInOrder.length === 0\">empty</div>\r\n            <div *ngIf=\"!isRegSuccess\">\r\n              <storybook-input\r\n                [storyInput]=\"storyInputsInOrder[0]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\">\r\n              </storybook-input>\r\n              <storybook-input\r\n                [storyInput]=\"storyInputsInOrder[1]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\">\r\n              </storybook-input>\r\n              <storybook-input\r\n                [storyInput]=\"storyInputsInOrder[2]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\"\r\n                [conditionList]=\"['requiresPhone']\">\r\n              </storybook-input>\r\n              <storybook-input\r\n                [storyInput]=\"storyInputsInOrder[3]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\"\r\n                [conditionList]=\"['requiresEmail']\">\r\n              </storybook-input>\r\n              <!--storybook-input\r\n                *ngFor=\"let storyInput of storyInputsInOrder\"\r\n                [storyInput]=\"storyInput\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\">\r\n              </storybook-input-->\r\n            </div>\r\n\r\n            <div *ngIf=\"!isRegSuccess\" class=\"thematic-break\"></div>\r\n            <div class=\"login-failed-message\" role=\"alert\" >\r\n              <p *ngIf=\"isRegFailed\">*  {{ this.regErrorMessage['message'] | apiErrorMessage: param }}</p>\r\n            </div>\r\n\r\n            <storybook-button-continue [label]=\"isRegSuccess ? 'Continue' :'Complete Rgistration'\"  size=\"small\"\r\n                                       label=\"Continue\" type=\"button\" (click)=\"onSubmit()\" >\r\n            </storybook-button-continue>\r\n        </div>\r\n        </div>\r\n\r\n    </form>\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n","import {\r\n  AfterViewChecked,\r\n  Component, Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input, OnChanges,\r\n  OnInit,\r\n  Output,\r\n  QueryList,\r\n  Renderer2, SimpleChanges, ViewChild,\r\n  ViewChildren\r\n} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { StoryInput } from \"src/stories/inputs/story-input.model\";\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport {PopoverOptions} from \"../../directive/popover.interface\";\r\nimport {ActionInputComponent} from \"../../actions/action-input/action-input.component\";\r\n//import {BehaviorSubject} from \"rxjs\";\r\n//import {StoryInputComponent} from \"../../inputs/story-input.component\";\r\n\r\n/*\r\n@Directive({selector: 'storybook-input'})\r\nexport class StoryInput {\r\n  @Input() storyInput!: StoryInput;\r\n}\r\n*/\r\n@Component({\r\n  selector: 'storybook-replace-pass-form',\r\n  templateUrl: './replace-pass-form.component.html',\r\n  styleUrls: ['./replace-pass-form.css'],\r\n})\r\nexport default class ReplacePassFormComponent implements OnInit, AfterViewChecked, OnChanges {\r\n\r\n  popover: PopoverOptions = {\r\n    content: ActionInputComponent\r\n  };\r\n\r\n  param = {language: 'login-main'};\r\n\r\n\r\n\r\n\r\n\r\n  @Input() formService!: AuthService;\r\n\r\n  credentials: any = {\r\n    username: null,\r\n    password: null\r\n  };\r\n\r\n  @Input() isRepFailed = false;\r\n  @Input() repErrorMessage = '';\r\n\r\n  openReplacePassword() {\r\n    //this.replacePassFormService.open(ReplacePassForm2Component);\r\n  }\r\n\r\n  @ViewChild('formHeader', { static: false }) mainHeader?: ElementRef;\r\n  @ViewChild('storybook-input', { static: false }) storybookInput?: ElementRef;\r\n\r\n\r\n\r\n  constructor(private renderer: Renderer2) {\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * Component property to define ordering of tasks\r\n   */\r\n  storyInputsInOrder: StoryInput[] = [];\r\n\r\n  @Input() mForm: FormGroup  = new FormGroup({});\r\n  /*username: new FormControl('', Validators.minLength(2)),\r\n  password: new FormControl('T@diran2022', Validators.minLength(2)),\r\n  email: new FormControl('', Validators.email),\r\n  phone: new FormControl(null, Validators.pattern(new RegExp(\"[0-9 ]{12}\")))*/\r\n\r\n  changeLog: string[] = [];\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.isRegSuccess) {\r\n      if (!changes.isRegSuccess.previousValue &&  changes.isRegSuccess.currentValue) {\r\n        console.warn('Register Request Succeeded!');\r\n        this.loadSuccessfullyLoggedIn();\r\n      }\r\n    }\r\n  }\r\n\r\n  @Input() status?: any;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onPinInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onArchiveInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() sendRegReq: EventEmitter<void> = new EventEmitter();\r\n\r\n  @Output() clickXButton: EventEmitter<void> = new EventEmitter();\r\n\r\n\r\n  @Input()\r\n  set storyInputs(arr: StoryInput[]) {\r\n    const initialTasks = [\r\n      ...arr.filter(t => t.state === 'USER NAME'),\r\n      ...arr.filter(t => t.state !== 'USER NAME'),\r\n    ];\r\n    const filteredTasks = initialTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME' || t.state === 'EMAIL' || t.state === 'PHONE NUMBER FOR AUTHENTICATION'\r\n    );\r\n    this.storyInputsInOrder = filteredTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME' || t.state === 'EMAIL' || t.state === 'PHONE NUMBER FOR AUTHENTICATION');\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.warn('Registry Request Sent!');\r\n\r\n    //this.renderer.setAttribute(this.storybookInput?.nativeElement ,'hidden', 'true');\r\n    //this.renderer.setAttribute(this.mainHeader?.nativeElement ,'hidden', 'true');\r\n    //this.renderer.setProperty(this.mainHeader?.nativeElement ,'innerHTML','You have successfully complete your registeration!');\r\n\r\n\r\n    //this.renderer.setAttribute(this.storybookInput?.nativeElement ,'innerHTML','true');\r\n    this.sendRegReq.emit();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n  get userName(): AbstractControl {\r\n    return this.mForm?.get('username')!;\r\n  }\r\n\r\n  get oldPassword(): AbstractControl {\r\n    return this.mForm?.get('oldPassword')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.mForm?.get('password')!;\r\n  }\r\n\r\n  get confirmPassword(): AbstractControl {\r\n    return this.mForm?.get('confirmPassword')!;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  ngAfterViewChecked(): void {\r\n    //console.log(this.childComp?.length)\r\n  }\r\n\r\n  loadSuccessfullyLoggedIn(){\r\n    this.renderer.setProperty(this.mainHeader?.nativeElement ,'innerHTML','You have successfully changed your password!');\r\n  }\r\n\r\n}\r\n\r\n","\r\n\r\n\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <storybook-card class=\"card-container\"></storybook-card>\r\n  <div  class=\"h-100 d-flex align-items-center justify-content-center\">\r\n    <storybook-button-ex id=\"button-ex\" (click)=\"this.clickXButton.emit()\" ></storybook-button-ex>\r\n    <div class=\"form-header\">\r\n      <a class=\"main-form-header\" #formHeader>Change Password</a>\r\n      <br>\r\n\r\n      <br>\r\n      <form name=\"currentForm\"   [formGroup]=\"mForm\">\r\n        <div class=\"Vector\">\r\n\r\n          <div *ngIf=\"status.isRepSuccess\" id=\"button-successfully\" style=\"\">\r\n            <storybook-button-successfully   style=\"position: relative; margin-bottom: 50px;\"></storybook-button-successfully>\r\n          </div>\r\n\r\n          <div class=\"login-button\">\r\n              <div *ngIf=\"!status.isRepSuccess && storyInputsInOrder.length === 0\">empty</div>\r\n              <div *ngIf=\"!status.isRepSuccess\">\r\n                <storybook-input\r\n                  [storyInput]=\"storyInputsInOrder[0]\"\r\n                  (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                  (onPinInput)=\"onPinInput.emit($event)\"\r\n                  [currentForm]=\"mForm\">\r\n                </storybook-input>\r\n\r\n                <div *ngIf=\"!status.isRepSuccess\" class=\"thematic-break\"></div>\r\n\r\n                <storybook-input\r\n                  [storyInput]=\"storyInputsInOrder[1]\"\r\n                  (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                  (onPinInput)=\"onPinInput.emit($event)\"\r\n                  [currentForm]=\"mForm\"\r\n                  [conditionList]=\"['minLength','requiresUppercase','requiresLowercase','requiresDigit']\">\r\n                </storybook-input>\r\n\r\n\r\n                <div></div>\r\n                <storybook-input\r\n                  [storyInput]=\"storyInputsInOrder[2]\"\r\n                  (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                  (onPinInput)=\"onPinInput.emit($event)\"\r\n                  [currentForm]=\"mForm\"\r\n                  [conditionList]=\"['minLength','requiresUppercase','requiresLowercase','requiresDigit']\">\r\n                </storybook-input>\r\n              </div>\r\n\r\n              <br>\r\n                <div class=\"login-failed-message\" role=\"alert\" >\r\n                  <table *ngIf=\"this.status?.isRepFailed\">\r\n                    <tr>{{ this.status?.repErrorMessage['message'] | apiErrorMessage: param }}</tr>\r\n                    <tr  *ngFor=\"let message of this.status?.repErrorMessage.data?.confirmPassword.split(', ')\">{{message.trim() | apiErrorMessage: param }}</tr>\r\n                  </table>\r\n                </div>\r\n              <storybook-button-continue [label]=\"status.isRepSuccess ? 'Continue' :'Change Password'\" size=\"small\"\r\n                                         label=\"Continue\" type=\"button\" (click)=\"onSubmit()\" >\r\n              </storybook-button-continue>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import {Component, EventEmitter, HostBinding, Inject, Injector, Input, OnInit, Output} from '@angular/core';\r\nimport { StoryInput } from './story-input.model'\r\nimport {\r\n  AbstractControl,\r\n  ControlValueAccessor,\r\n  FormControl,\r\n  FormGroup,\r\n  NG_VALIDATORS,\r\n  Validator,\r\n  Validators\r\n} from \"@angular/forms\";\r\nimport {PopoverOptions} from \"../directive/popover.interface\";\r\nimport {ActionInputComponent} from \"../actions/action-input/action-input.component\";\r\nimport {ActionInput} from \"../actions/action-input/action-input.interface\";\r\n\r\n\r\nexport interface GroupForm {\r\n  username:  FormControl,\r\n  password:  FormControl,\r\n}\r\n\r\nexport interface ValidationForm {\r\n  validationForm2: GroupForm,\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-input',\r\n  templateUrl: './story-input.component.html',\r\n  styleUrls: ['./story-input.scss']\r\n})\r\nexport class StoryInputComponent implements OnInit{\r\n\r\n\r\n\r\n  popover: PopoverOptions = {\r\n    content: ActionInputComponent\r\n  };\r\n\r\n  @Input() storyInput!: StoryInput;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onPinInput = new EventEmitter<Event>();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onArchiveInput = new EventEmitter<Event>();\r\n\r\n\r\n  @Input()\r\n  hideInput = false;\r\n\r\n  showPassChange(): void {\r\n    this.storyInput.type = (this.storyInput?.type == 'password' ? 'text' : 'password')\r\n  }\r\n\r\n  @Input() currentForm!: FormGroup;\r\n\r\n  private isStrength: string = (this.storyInput?.state === 'NEW PASSWORD') ? 'storybook-input--addStrength' : 'storybook-input--clearStrength';\r\n\r\n  public isPasswordTextHide: boolean = false;\r\n\r\n  @Input() conditionList: string[] = [];\r\n  /*registerForm = new FormGroup({\r\n    username: new FormControl('', Validators.minLength(2)),\r\n    password: new FormControl('zaqwsx', Validators.minLength(2))\r\n  });\r\n\r\n\r\n  get username2(): FormControl  {\r\n    return this.currentForm?.controls.username.get();\r\n  }*/\r\n\r\n  get username(): AbstractControl {\r\n    return this.currentForm.get('username')!;\r\n  }\r\n\r\n\r\n  get password(): AbstractControl {\r\n    return this.currentForm.get('password')!;\r\n  }\r\n\r\n  public getErrorHeader(controllerType: string): string {\r\n    let header: string = '';\r\n\r\n    switch (controllerType) {\r\n      case \"phone\":\r\n        header = 'Must contain phone:';\r\n        break;\r\n\r\n      case \"email\":\r\n        header = 'Must contain email:';\r\n        break;\r\n\r\n      case \"oldPassword\":\r\n      case \"confirmPassword\":\r\n      case \"password\":\r\n        header = 'The password must contain:';\r\n        break;\r\n\r\n      default:\r\n        header = controllerType;\r\n    }\r\n\r\n    return header;\r\n  }\r\n\r\n  public getErrorList(conditionList: String[]): ActionInput[] {\r\n\r\n    let passConditions: string[] = [];\r\n\r\n\r\n    var actionInputs: ActionInput[] = [];\r\n\r\n    conditionList.forEach(condition => {\r\n      switch (condition) {\r\n        case \"minLength\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"minLengthValid\",\r\n            \"presentingMessage\": ' A minimum of 8 characters',\r\n            \"isFulfilled\": !(this.minLengthValid || !(this.currentForm?.controls[\"password\"].value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresUppercase\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresUppercaseValid\",\r\n            \"presentingMessage\": ' At least 1 Uppercase letters',\r\n            \"isFulfilled\": !(this.requiresUppercaseValid || !(this.currentForm?.controls[\"password\"].value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresLowercase\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresLowercaseValid\",\r\n            \"presentingMessage\": ' At least 1 lowercase letters',\r\n            \"isFulfilled\": !(this.requiresLowercaseValid || !(this.currentForm?.controls[\"password\"].value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresDigit\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresDigitValid\",\r\n            \"presentingMessage\": ' A number',\r\n            \"isFulfilled\": !(this.requiresDigitValid || !(this.currentForm?.controls[\"password\"].value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresEmail\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresEmailValid\",\r\n            \"presentingMessage\": ' A well-formed email address',\r\n            \"isFulfilled\": !(this.requiresEmailValid || !(this.currentForm?.controls[\"email\"].value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresPhone\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresPhoneValid\",\r\n            \"presentingMessage\": ' A well-formed phone number',\r\n            \"isFulfilled\": !(this.requiresPhoneValid || !(this.currentForm?.controls[\"email\"].value.length > 0))\r\n          })\r\n          break;\r\n      }\r\n    });\r\n\r\n\r\n    return actionInputs;\r\n  }\r\n\r\n  get passwordValid() {\r\n    return this.formControler.errors === null;\r\n  }\r\n\r\n  get requiredValid() {\r\n    return this.formControler.hasError(\"required\");\r\n  }\r\n\r\n  get minLengthValid() {\r\n    return this.formControler.hasError(\"minlength\");\r\n  }\r\n\r\n  get requiresDigitValid() {\r\n    return this.formControler.hasError(\"requiresDigit\");\r\n  }\r\n\r\n  get requiresUppercaseValid() {\r\n    return this.formControler.hasError(\"requiresUppercase\");\r\n  }\r\n\r\n  get requiresLowercaseValid() {\r\n    return this.formControler.hasError(\"requiresLowercase\") ;\r\n  }\r\n\r\n  get requiresSpecialCharsValid() {\r\n    return this.formControler.hasError(\"requiresSpecialChars\");\r\n  }\r\n\r\n  get requiresEmailValid() {\r\n    return this.formControler.hasError(\"email\");\r\n  }\r\n\r\n  get requiresPhoneValid() {\r\n    return this.formControler.hasError(\"requiresPhoneChars\");\r\n  }\r\n\r\n  get formControler(): AbstractControl {\r\n    return this.currentForm.get(this.storyInput?.title.toString())!;\r\n  }\r\n\r\n\r\n  /**\r\n   * Component method to trigger the onPin event\r\n   * @param id string\r\n   */\r\n  onPin(id: any) {\r\n    this.onPinInput.emit(id);\r\n  }\r\n  /**\r\n   * Component method to trigger the onArchive event\r\n   * @param id string\r\n   */\r\n  onArchive(id: any) {\r\n    this.onArchiveInput.emit(id);\r\n  }\r\n\r\n  public get classes(): string[] {\r\n    this.isStrength = (this.storyInput?.state === 'NEW PASSWORD') ? 'storybook-input--addStrength' : 'storybook-input--clearStrength';\r\n\r\n    return ['storybook-input-strength',  this.isStrength];\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.isPasswordTextHide = this.storyInput?.state.includes('PASSWORD');\r\n\r\n  }\r\n\r\n}\r\n","<div id=\"parent3\"  [hidden]=\"storyInput?.hide\" [ngClass]=\"classes\"  >\r\n<div id=\"parent1\" >\r\n  <div class=\"main\"  [formGroup]=\"this.currentForm\">\r\n  <div>\r\n  <a class=\"user-name D-Caps-Regular\">{{storyInput?.state}}</a>\r\n\r\n  <br>\r\n  <label [attr.aria-label]=\"storyInput?.id + ''\" for=\"{{ storyInput?.title }}\" class=\"Vector2 \">\r\n    <img src=\"{{ storyInput?.icon }}\" class=\"icon-input\" alt=\"icon input userName\"  name=\"{{ storyInput?.title }}\" />\r\n    <div [inputPopover] = \"this.popover\" [data]=\"this.getErrorList(this.conditionList)\" [header]=\"this.getErrorHeader(storyInput.title)\">\r\n    <input type=\"{{storyInput?.type}}\" id=\"{{ storyInput?.id }}\" class=\"DanK203\"\r\n            name=\"{{storyInput?.title}}\" formControlName=\"{{storyInput?.title}}\" placeholder=\"{{storyInput?.placeholder}}\" required  />\r\n    </div>\r\n\r\n    <button *ngIf=\"this.isPasswordTextHide\" class=\"icon-input-showpass\" type=\"button\" (click)=\"showPassChange()\">\r\n      <img src=\"./assets/images/EyeIcon.png\" class=\"icon-input-showpass\" alt=\"icon input type\" />\r\n\r\n    </button>\r\n\r\n\r\n\r\n  <br>\r\n\r\n  <span hidden [ngSwitch]=\"storyInput?.title\" class=\"D-Caps-Regular\"  style=\"line-height: 0\" >\r\n      <span  class=\"position-absolute\"  *ngIf=\"formControler?.invalid && (formControler?.dirty || formControler?.touched)\"  >\r\n          <span *ngSwitchCase=\"'username'\"><br>{{storyInput?.state}} is required!</span>\r\n          <span *ngSwitchCase=\"'password'\">\r\n            <br>\r\n            {{storyInput?.state}} is required!\r\n            <!--div *ngIf=\"password.errors.required\">Password is required</div>\r\n            <div *ngIf=\"password.errors.minlength\">Password must be at least 1 characters</div-->\r\n          </span>\r\n          <span *ngSwitchCase=\"'email'\"   ><br>{{storyInput?.state}} is required!</span>\r\n          <span *ngSwitchCase=\"'phone'\"   ><br>{{storyInput?.state}} is required!</span>\r\n\r\n      </span>\r\n      <div   *ngIf=\"formControler?.valid && (formControler?.dirty || formControler?.touched)\">\r\n        <div *ngSwitchCase=\"'username'\">ok!</div>\r\n        <div *ngSwitchCase=\"'password'\">ok!</div>\r\n        <div *ngSwitchCase=\"'email'\"   >ok!</div>\r\n        <div *ngSwitchCase=\"'phone'\"   >ok!</div>\r\n      </div>\r\n\r\n </span>\r\n\r\n  </label>\r\n\r\n\r\n\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n<div id=\"parent2\"  *ngIf=\"storyInput?.state === 'NEW PASSWORD'\">\r\n  <div class=\"absolute\">\r\n    <storybook-pass-strength id=\"pass-strength\" [passwordToCheck]=\"password?.value\" ></storybook-pass-strength>\r\n  </div>\r\n</div>\r\n\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\n\n\n\n@Component({\n  selector: 'storybook-background1',\n  templateUrl: './background1Component.html',\n  styleUrls: ['./background1Component.scss']\n})\nexport default class Background1Component {\n\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = true;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  background?: string;\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Page2Component';\n\n  /*user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n\n  }*/\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-background1--primary' : 'storybook-background1--secondary';\n\n    return ['storybook-background1', mode];\n  }\n\n  constructor() {}\n\n\n\n\n}\n\n","\r\n<figure class=\"Desktop-1Login-1\"  [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': background }\" >\r\n  <!--div [ngStyle]=\"{ 'background-color': background }\" ></div-->\r\n  <img src=\"assets/images/icon-1.webp\" srcset=\"./assets/images/icon-1@2x.webp 2x, /assets/images/icon-1@3x.webp 3x\"\r\n       alt=\"icon-1\" />\r\n\r\n  <img src=\"assets/images/icon-2.webp\" srcset=\"./assets/images/icon-2@2x.webp 2x, /assets/images/icon-2@3x.webp 3x\"\r\n       class=\"icon-2  \" alt=\"icon-2fdf\" />\r\n\r\n\r\n</figure>\r\n\r\n<storybook-button-language size=\"large\"></storybook-button-language>\r\n<storybook-button-tadiran></storybook-button-tadiran>\r\n<storybook-button-globe></storybook-button-globe>\r\n","import {Component, OnChanges, Input, SimpleChange} from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-pass-strength',\r\n  templateUrl: './pass-strength.component.html',\r\n  styleUrls: ['./pass-strength.scss']\r\n})\r\nexport default class PassStrengthComponent implements OnChanges  {\r\n\r\n  /**\r\n   * Is this the principal call to action on the login-main?\r\n   */\r\n  @Input() primary: boolean = false;\r\n\r\n\r\n  /**\r\n   * The password strength in percentage.\r\n   */\r\n  @Input() strength: number = 0;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input() backgroundColor?: string;\r\n\r\n  /**\r\n   * The password to measure.\r\n   */\r\n  @Input() passwordToCheck?: string;\r\n\r\n  private static measureStrength(pass: string) {\r\n    let score = 0;\r\n    // award every unique letter until 5 repetitions\r\n    let letters: any = {};\r\n    for (let i = 0; i< pass.length; i++) {\r\n      letters[pass[i]] = (letters[pass[i]] || 0) + 1;\r\n      score += 5.0 / letters[pass[i]];\r\n    }\r\n    // bonus points for mixing it up\r\n    let variations: any = {\r\n      digits: /\\d/.test(pass),\r\n      lower: /[a-z]/.test(pass),\r\n      upper: /[A-Z]/.test(pass),\r\n      nonWords: /\\W/.test(pass),\r\n    };\r\n\r\n    let variationCount = 0;\r\n    for (let check in variations) {\r\n      variationCount += (variations[check]) ? 1 : 0;\r\n    }\r\n    score += (variationCount - 1) * 10;\r\n    return Math.trunc(score);\r\n  }\r\n\r\n  public strengthColor(strength: number) {\r\n\r\n    if (strength < 10) return 0;\r\n    if (strength < 20) return 10;\r\n    if (strength < 30) return 20;\r\n    if (strength < 40) return 30;\r\n    if (strength < 50) return 40;\r\n    if (strength < 60) return 50;\r\n    if (strength < 70) return 60;\r\n    if (strength < 90) return 70;\r\n    if (strength < 99) return 90;\r\n\r\n    return 100;\r\n  }\r\n\r\n  ngOnChanges(changes: {[propName: string]: SimpleChange}): void {\r\n    var password = changes['passwordToCheck'].currentValue;\r\n    if (password) {\r\n      this.strength = PassStrengthComponent.measureStrength(password);\r\n    }\r\n  }\r\n\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-pass-strength--primary' : 'storybook-pass-strength--secondary';\r\n\r\n    return ['storybook-pass-strength', `storybook-pass-strength--${this.strengthColor(this.strength)}`, mode];\r\n  }\r\n\r\n}\r\n\r\n","\r\n<div id=\"PassStrength\" [ngClass]=\"classes\"   class=\"storybook-pass-strength  \" >\r\n  <div class=\"center\"><a class=\"mfont\">Strength : {{this.strength?.toString()}}%</a>\r\n  </div>\r\n</div>\r\n\r\n","\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Task } from '../task/task.model';\r\n\r\n@Component({\r\n  selector: 'app-task-list',\r\n  templateUrl: './task-list.component.html',\r\n})\r\nexport class TaskListComponent {\r\n\r\n  /**\r\n   * @ignore\r\n   * Component property to define ordering of tasks\r\n   */\r\n  tasksInOrder: Task[] = [];\r\n\r\n  @Input() loading = false;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onPinTask: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onArchiveTask: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Input()\r\n  set tasks(arr: Task[]) {\r\n    const initialTasks = [\r\n      ...arr.filter(t => t.state === 'TASK_PINNED'),\r\n      ...arr.filter(t => t.state !== 'TASK_PINNED'),\r\n    ];\r\n    const filteredTasks = initialTasks.filter(\r\n      t => t.state === 'TASK_INBOX' || t.state === 'TASK_PINNED'\r\n    );\r\n    this.tasksInOrder = filteredTasks.filter(\r\n      t => t.state === 'TASK_INBOX' || t.state === 'TASK_PINNED'\r\n    );\r\n  }\r\n}\r\n","<div class=\"list-items\">\r\n  <storybook-task\r\n    *ngFor=\"let task of tasksInOrder\"\r\n    [task]=\"task\"\r\n    (onArchiveTask)=\"onArchiveTask.emit($event)\"\r\n    (onPinTask)=\"onPinTask.emit($event)\">\r\n  </storybook-task>\r\n  <div *ngIf=\"tasksInOrder.length === 0 && !loading\" class=\"wrapper-message\">\r\n    <span class=\"icon-check\"></span>\r\n    <p class=\"title-message\">You have no tasks</p>\r\n    <p class=\"subtitle-message\">Sit back and relax</p>\r\n  </div>\r\n  <div *ngIf=\"loading\">\r\n    <div *ngFor=\"let i of [1, 2, 3, 4, 5, 6]\" class=\"loading-item\">\r\n      <span class=\"glow-checkbox\"></span>\r\n      <span class=\"glow-text\">\r\n           <span>Loading</span> <span>cool</span> <span>state</span>\r\n         </span>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { Task } from './task.model';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-task',\r\n  templateUrl: './task.component.html',\r\n  styleUrls: ['./task.css']\r\n})\r\nexport class TaskComponent {\r\n  @Input() task!: Task;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onPinTask = new EventEmitter<Event>();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onArchiveTask = new EventEmitter<Event>();\r\n\r\n  /**\r\n   * Component method to trigger the onPin event\r\n   * @param id string\r\n   */\r\n  onPin(id: any) {\r\n    this.onPinTask.emit(id);\r\n  }\r\n  /**\r\n   * Component method to trigger the onArchive event\r\n   * @param id string\r\n   */\r\n  onArchive(id: any) {\r\n    this.onArchiveTask.emit(id);\r\n  }\r\n}\r\n","<div class=\"list-item {{ task?.state }}\">\r\n  <label [attr.aria-label]=\"'archiveTask-' + task.id\" for=\"checked-{{ task?.id }}\" class=\"checkbox\">\r\n    <input\r\n      type=\"checkbox\"\r\n      disabled=\"true\"\r\n      [defaultChecked]=\"task?.state === 'TASK_ARCHIVED'\"\r\n      name=\"checked-{{ task?.id }}\"\r\n      id=\"checked-{{ task?.id }}\"\r\n    />\r\n    <span class=\"checkbox-custom\" (click)=\"onArchive(task.id)\"></span>\r\n  </label>\r\n  <label [attr.aria-label]=\"task.title + ''\" for=\"title-{{ task?.id }}\" class=\"title\">\r\n    <input type=\"text\" [value]=\"task.title\" readonly=\"true\" id=\"title-{{ task?.id }}\" name=\"title-{{ task?.id }}\" placeholder=\"Input title\"/>\r\n  </label>\r\n  <button *ngIf=\"task?.state !== 'TASK_ARCHIVED'\" class=\"pin-button\" [attr.aria-label]=\"'pinTask-' + task.id\" (click)=\"onPin(task.id)\">\r\n    <span class=\"icon-star\"></span>\r\n  </button>\r\n</div>\r\n\r\n\r\n<div class=\"list-item {{ task?.state }}\">\r\n  <label [attr.aria-label]=\"'archiveTask-' + task.id\" for=\"checked-{{ task?.id }}\" class=\"checkbox\">\r\n    <input\r\n      type=\"checkbox\"\r\n      disabled=\"true\"\r\n      [defaultChecked]=\"task?.state === 'TASK_ARCHIVED'\"\r\n      name=\"checked-{{ task?.id }}\"\r\n      id=\"checked-{{ task?.id }}\"\r\n    />\r\n    <span class=\"checkbox-custom\" (click)=\"onArchive(task.id)\"></span>\r\n  </label>\r\n  <label [attr.aria-label]=\"task.title + ''\" for=\"title-{{ task?.id }}\" class=\"title\">\r\n    <input type=\"text\" [value]=\"task.title\" readonly=\"true\" id=\"title-{{ task?.id }}\" name=\"title-{{ task?.id }}\" placeholder=\"Input title\"/>\r\n  </label>\r\n  <button *ngIf=\"task?.state !== 'TASK_ARCHIVED'\" class=\"pin-button\" [attr.aria-label]=\"'pinTask-' + task.id\" (click)=\"onPin(task.id)\">\r\n    <span class=\"icon-star\"></span>\r\n  </button>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}