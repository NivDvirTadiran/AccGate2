{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/_helpers/auth.interceptor.ts","./src/app/_services/auth.service.ts","./src/app/_services/token-storage.service.ts","./src/app/_services/user.service.ts","./src/app/_shared/event-bus.service.ts","./src/app/_shared/event.class.ts","./src/app/app-routing.guard.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.config.ts","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login2/login-main/forgot-pass-form2/forgot-pass-form2.component.ts","./src/app/login2/login-main/forgot-pass-form2/forgot-pass-form2.component.html","./src/app/login2/login-main/login-main.component.ts","./src/app/login2/login-main/login-main.component.html","./src/app/login2/login-main/register-form2/register-form2.component.ts","./src/app/login2/login-main/register-form2/register-form2.component.html","./src/app/login2/login-main/replace-pass-form2/replace-pass-form2.component.ts","./src/app/login2/login-main/replace-pass-form2/replace-pass-form2.component.html","./src/app/login2/login-main/reset-pass-form2/reset-pass-form2.component.ts","./src/app/login2/login-main/reset-pass-form2/reset-pass-form2.component.html","./src/app/login2/login-main/verification-form2/verification-form2.component.ts","./src/app/login2/login-main/verification-form2/verification-form2.component.html","./src/app/login2/login2-routing.module.ts","./src/app/login2/login2.module.ts","./src/app/login2/profile2/board-admin2/board-admin2.component.ts","./src/app/login2/profile2/board-admin2/board-admin2.component.html","./src/app/login2/profile2/board-admin/board-admin.component.html","./src/app/login2/profile2/board-admin/board-admin.component.ts","./src/app/login2/profile2/board-moderator/board-moderator.component.ts","./src/app/login2/profile2/board-moderator/board-moderator.component.html","./src/app/login2/profile2/board-user/board-user.component.ts","./src/app/login2/profile2/board-user/board-user.component.html","./src/app/login2/profile2/my-account-form2/my-account-form2.component.ts","./src/app/login2/profile2/my-account-form2/my-account-form2.component.html","./src/app/login2/profile2/portal/portal.component.ts","./src/app/login2/profile2/portal/portal.component.html","./src/app/login2/profile2/profile2-routing.module.ts","./src/app/login2/profile2/profile2.module.ts","./src/app/pipes/api-error-message.pipe.ts","./src/app/pipes/login-error-message.pipe.ts","./src/app/storybook/pipes/api-error-message.pipe.ts","./src/app/storybook/pipes/api-error-message.service.ts","./src/app/storybook/storybook.module.ts","./src/environments/environment.ts","./src/main.ts","./src/stories/actions/action-avatar/action-avatar.component.ts","./src/stories/actions/action-avatar/action-avatar.component.html","./src/stories/actions/action-input/action-input.component.html","./src/stories/actions/action-input/action-input.component.ts","./src/stories/app-menu/app-menu.component.ts","./src/stories/app-menu/app-menu.component.html","./src/stories/avatars/avatar.component.ts","./src/stories/avatars/avatar.component.html","./src/stories/buttons/button-apps/button-apps.component.ts","./src/stories/buttons/button-apps/button-apps.component.html","./src/stories/buttons/button-configuration/button-configuration.component.ts","./src/stories/buttons/button-configuration/button-configuration.component.html","./src/stories/buttons/button-continue/button-continue.component.ts","./src/stories/buttons/button-continue/button-continue.component.html","./src/stories/buttons/button-edit-save/button-edit-save.component.ts","./src/stories/buttons/button-edit-save/button-edit-save.component.html","./src/stories/buttons/button-edit-save/button-edit-save.stories.ts","./src/stories/buttons/button-ex/button-ex.component.ts","./src/stories/buttons/button-ex/button-ex.component.html","./src/stories/buttons/button-example/button.component.ts","./src/stories/buttons/button-exclamation-mark/button-exclamation-mark.component.ts","./src/stories/buttons/button-exclamation-mark/button-exclamation-mark.component.html","./src/stories/buttons/button-fortest/button-fortest.component.ts","./src/stories/buttons/button-fortest/custom-directive/Highlight.directive.ts","./src/stories/buttons/button-globe/button-globe.component.ts","./src/stories/buttons/button-globe/button-globe.component.html","./src/stories/buttons/button-language/button-language.component.ts","./src/stories/buttons/button-language/button-language.component.html","./src/stories/buttons/button-successfully/button-successfully.component.ts","./src/stories/buttons/button-successfully/button-successfully.component.html","./src/stories/buttons/button-tadiran/button-tadiran.component.ts","./src/stories/cards/card-rugged/card-rugged.component.ts","./src/stories/cards/card-rugged/card-rugged.component.html","./src/stories/cards/card/card.component.ts","./src/stories/cards/card/card.component.html","./src/stories/directive/bubble-avatar/bubble-avatar.component.ts","./src/stories/directive/bubble-avatar/bubble-avatar.component.html","./src/stories/directive/bubble-avatar/popover.directive.ts","./src/stories/directive/bubble-input/bubble-input.component.ts","./src/stories/directive/bubble-input/bubble-input.component.html","./src/stories/directive/bubble-input/popover-input.directive.ts","./src/stories/directive/dynamic-comp.directive.ts","./src/stories/forms/configuration-form/configuration-form.component.ts","./src/stories/forms/configuration-form/configuration-form.component.html","./src/stories/forms/forgot-pass-form/forgot-pass-form.component.ts","./src/stories/forms/forgot-pass-form/forgot-pass-form.component.html","./src/stories/forms/login-form/login-form.component.ts","./src/stories/forms/login-form/login-form.component.html","./src/stories/forms/my-account-form/my-account-form.component.ts","./src/stories/forms/my-account-form/my-account-form.component.html","./src/stories/forms/registry-form/registry-form.component.ts","./src/stories/forms/registry-form/registry-form.component.html","./src/stories/forms/replace-pass-form/replace-pass-form.component.ts","./src/stories/forms/replace-pass-form/replace-pass-form.component.html","./src/stories/forms/reset-pass-form/reset-pass-form.component.ts","./src/stories/forms/reset-pass-form/reset-pass-form.component.html","./src/stories/forms/verification-form/verification-form.component.ts","./src/stories/forms/verification-form/verification-form.component.html","./src/stories/inputs/account-input/account-input.component.ts","./src/stories/inputs/account-input/account-input.component.html","./src/stories/inputs/account-input/account-input.stories.ts","./src/stories/inputs/code-input/code-input.component.config.ts","./src/stories/inputs/code-input/code-input.component.ts","./src/stories/inputs/code-input/code-input.component.html","./src/stories/inputs/configuration-input/configuration-input.component.ts","./src/stories/inputs/configuration-input/configuration-input.component.html","./src/stories/inputs/configuration-input/configuration-input.stories.ts","./src/stories/inputs/digitcode-input/digitcode-input.component.ts","./src/stories/inputs/digitcode-input/digitcode-input.component.html","./src/stories/inputs/input/story-input.component.ts","./src/stories/inputs/input/story-input.component.html","./src/stories/pages/background1/background1Component.ts","./src/stories/pages/background1/background1Component.html","./src/stories/pass-strength/pass-strength.component.ts","./src/stories/pass-strength/pass-strength.component.html","./src/stories/spinners/spinner1/spinner1.component.ts","./src/stories/spinners/spinner1/spinner1.component.html","ignored|C:\\niv\\web\\AccGate2\\AccGateFrontend\\node_modules\\object-inspect|./util.inspect"],"names":[],"mappings":"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","file":"main-es2017.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { HTTP_INTERCEPTORS, HttpEvent, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\n\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\r\nimport { catchError, filter, switchMap, take } from 'rxjs/operators';\r\n\r\n const TOKEN_HEADER_KEY = 'Authorization';       // for Spring Boot back-end\r\n//const TOKEN_HEADER_KEY = 'x-access-token';   // for Node.js Express back-end\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  private isRefreshing = false;\r\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  constructor(private tokenService: TokenStorageService, private authService: AuthService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let authReq = req;\r\n    const token = this.tokenService.getToken();\r\n    if (token != null && !authReq.url.includes('test/')) {\r\n      authReq = this.addTokenHeader(req, token);\r\n      // for Spring Boot back-end\r\n      // authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\r\n\r\n      // for Node.js Express back-end\r\n      //authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, token) });\r\n    }\r\n    return next.handle(authReq).pipe(catchError(error => {\r\n      if (error instanceof HttpErrorResponse && !authReq.url.includes('auth/signin') && error.status === 401) {\r\n        return this.handle401Error(authReq, next);\r\n      }\r\n      return throwError(error);\r\n    }));\r\n  }\r\n\r\n\r\n  private handle401Error(request: HttpRequest<any>, next: HttpHandler) {\r\n    if (!this.isRefreshing) {\r\n      this.isRefreshing = true;\r\n      this.refreshTokenSubject.next(null);\r\n      const token = this.tokenService.getRefreshToken();\r\n      if (token)\r\n        return this.authService.refreshToken(token).pipe(\r\n          switchMap((token: any) => {\r\n            this.isRefreshing = false;\r\n            this.tokenService.saveToken(token.accessToken);\r\n            this.tokenService.saveRefreshToken(token.refreshToken);\r\n            this.refreshTokenSubject.next(token.accessToken);\r\n\r\n            return next.handle(this.addTokenHeader(request, token.accessToken));\r\n          }),\r\n          catchError((err) => {\r\n            this.isRefreshing = false;\r\n            return throwError(err);\r\n          })\r\n        );\r\n    }\r\n    return this.refreshTokenSubject.pipe(\r\n      filter(token => token !== null),\r\n      take(1),\r\n      switchMap((token) => next.handle(this.addTokenHeader(request, token)))\r\n    );\r\n  }\r\n  private addTokenHeader(request: HttpRequest<any>, token: string) {\r\n    /* for Spring Boot back-end */\r\n     return request.clone({ headers: request.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\r\n    /* for Node.js Express back-end */\r\n    //return request.clone({ headers: request.headers.set(TOKEN_HEADER_KEY, token) });\r\n  }\r\n\r\n\r\n  public forseRefreshToken(): void {\r\n    const token = this.tokenService.getRefreshToken();\r\n    if (token)\r\n      this.authService.refreshToken(token).subscribe(\r\n        data => {\r\n          this.isRefreshing = false;\r\n          this.tokenService.saveToken(data.accessToken);\r\n          this.refreshTokenSubject.next(data.accessToken);\r\n\r\n\r\n        },\r\n        (err) => {\r\n          this.isRefreshing = false;\r\n\r\n          this.tokenService.signOut();\r\n          return throwError(err);\r\n        }\r\n      );\r\n  }\r\n}\r\n\r\nexport const authInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {AppConfig} from \"../app.config\";\r\n\r\n\r\n\r\n\r\nconst AUTH_API = AppConfig.accServer.ACCWEBServers+'/accGate/auth/';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signin', {\r\n      username,\r\n      password\r\n    }, httpOptions);\r\n  }\r\n\r\n  registerForm(username: string, email: string, password: string, phone: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'register-form', {\r\n      username,\r\n      email,\r\n      password,\r\n      phone,\r\n    }, {responseType: 'text'});\r\n  }\r\n\r\n  replacePassForm(username: string, oldPassword: string, password: string, confirmPassword: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'replace-pass-form', {\r\n      username,\r\n      oldPassword,\r\n      password,\r\n      confirmPassword,\r\n    }, {responseType: 'text'});\r\n  }\r\n\r\n  register(username: string, email: string, password: string, roles: Array<String>): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signup', {\r\n      username,\r\n      email,\r\n      password,\r\n      roles,\r\n    }, httpOptions);\r\n  }\r\n\r\n  getToken(url: string, username: string, email: string, password: string): Observable<any> {\r\n    return this.http.post(url, {\r\n      username,\r\n      email,\r\n      password\r\n    }, httpOptions);\r\n  }\r\n\r\n  // login, register\r\n  refreshToken(token: string): Observable<any>  {\r\n    return this.http.post(AUTH_API + 'refreshtoken', {\r\n      refreshToken: token\r\n    }, httpOptions);\r\n  }\r\n\r\n  // open app in a new browser tab\r\n  webapptab(token: string, webapp: string): Observable<any>  {\r\n    return this.http.post(AUTH_API + 'webapptab', {\r\n      refreshToken: token,\r\n      webApp: webapp\r\n    }, httpOptions);\r\n  }\r\n\r\n  getPassExpireDate(token: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'passexpdate', {\r\n      accessToken: token,\r\n    }, httpOptions);\r\n  }\r\n\r\n\r\n  getPermittedWebAppList(token: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'permitwebapplist', {\r\n      accessToken: token,\r\n    }, httpOptions);\r\n  }\r\n\r\n  getAccountDetails(username: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'getaccountdetails', {\r\n      username: username,\r\n    }, httpOptions);\r\n  }\r\n\r\n  setAccountDetails( changedDetails: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'setaccountdetails', {\r\n      detail: changedDetails\r\n    }, httpOptions);\r\n  }\r\n\r\n  getConfigurationData(): Observable<any> {\r\n    return this.http.get(AUTH_API + 'getconfigurationdata', httpOptions);\r\n  }\r\n\r\n  setConfigurationData( changedProperties: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'setconfigurationdata', {\r\n      prop: changedProperties\r\n    }, httpOptions);\r\n  }\r\n\r\n  TSV_ValidateCodeByName(username: string, email: string, code: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'tsv_codevalidatebyname', {\r\n      username,\r\n      email,\r\n      code,\r\n    }, httpOptions);\r\n  }\r\n\r\n  TSV_ReplacePassForm(username: string, oldPassword: string, password: string,\r\n                      confirmPassword: string, pinCodeToken: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'tsv_replace-pass-form', {\r\n      username,\r\n      oldPassword,\r\n      password,\r\n      confirmPassword,\r\n      pinCodeToken,\r\n    }, httpOptions);\r\n  }\r\n\r\n\r\n  ResetPassByMail( username: string, email: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'forgotpassword', {\r\n      username,\r\n      email,\r\n    }, httpOptions);\r\n  }\r\n\r\n  TSV_GenerateCodeByName( username: string, email: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'tsv_codegeneratebyname', {\r\n      username,\r\n      email,\r\n    }, httpOptions);\r\n  }\r\n\r\n  TSV_GenerateCodeByEmail( username: string, email: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'tsv_codegeneratebyemail', {\r\n      username,\r\n      email,\r\n    }, httpOptions);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nconst TOKEN_KEY = 'token';\r\nconst REFRESHTOKEN_KEY = 'auth-refreshtoken';\r\nconst PINCODETOKEN_KEY = 'auth-pincodetoken';\r\nconst USER_KEY = 'user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenStorageService {\r\n  constructor() { }\r\n\r\n  signOut(): void {\r\n    window.sessionStorage.clear();\r\n  }\r\n\r\n  public saveToken(token: string): void {\r\n    window.sessionStorage.removeItem(TOKEN_KEY);\r\n    window.sessionStorage.setItem(TOKEN_KEY, token);\r\n    const user = this.getUser();\r\n    if (user.id) {\r\n      this.saveUser({ ...user, accessToken: token });\r\n    }\r\n  }\r\n\r\n  public getToken(): string | null {\r\n    return window.sessionStorage.getItem(TOKEN_KEY);\r\n  }\r\n\r\n  public saveRefreshToken(token: string): void {\r\n    window.sessionStorage.removeItem(REFRESHTOKEN_KEY);\r\n    window.sessionStorage.setItem(REFRESHTOKEN_KEY, token);\r\n    const user = this.getUser();\r\n    if (user.id) {\r\n      user.refreshToken = token;\r\n      this.saveUser(user);\r\n    }\r\n  }\r\n\r\n  public getRefreshToken(): string | null {\r\n    return window.sessionStorage.getItem(REFRESHTOKEN_KEY);\r\n  }\r\n\r\n  public savePinCodeToken(token: string): void {\r\n    window.sessionStorage.removeItem(PINCODETOKEN_KEY);\r\n    window.sessionStorage.setItem(PINCODETOKEN_KEY, token);\r\n  }\r\n\r\n  public getPinCodeToken(): string | null {\r\n    return window.sessionStorage.getItem(PINCODETOKEN_KEY);\r\n  }\r\n\r\n  public saveUser(user: any): void {\r\n    window.sessionStorage.removeItem(USER_KEY);\r\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\r\n  }\r\n\r\n  public getUser(): any {\r\n    const user = window.sessionStorage.getItem(USER_KEY);\r\n    if (user) {\r\n      return JSON.parse(user);\r\n    }\r\n    return {};\r\n  }\r\n\r\n  public getRoles(): any {\r\n    const user = this.getUser();\r\n    if (user.roles) {\r\n      return user.roles;\r\n    }\r\n    return {};\r\n  }\r\n\r\n  public getUsername(): string {\r\n    const user = this.getUser();\r\n    return user.username.toString();\r\n  }\r\n\r\n  public isSupervisorAdmin(): boolean {\r\n    return this.getUser().roles.includes(\"SupervisorAdmin\");\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {AppConfig} from \"../app.config\";\r\n\r\nconst API_URL = AppConfig.accServer.ACCWEBServers+'/accGate/test/';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getPublicContent(): Observable<any> {\r\n    return this.http.get(API_URL + 'all', { responseType: 'text' });\r\n  }\r\n\r\n  getAccVersion(): Observable<any> {\r\n    return this.http.get(API_URL + 'accversion', { responseType: 'text' });\r\n  }\r\n\r\n  isTowStepVerRequired(): Observable<any> {\r\n    return this.http.get(API_URL + 'istsvon', httpOptions);\r\n  }\r\n\r\n  getUserBoard(): Observable<any> {\r\n    return this.http.get(API_URL + 'user', { responseType: 'text' });\r\n  }\r\n\r\n  getModeratorBoard(): Observable<any> {\r\n    return this.http.get(API_URL + 'mod', { responseType: 'text' });\r\n  }\r\n\r\n  getAdminBoard(): Observable<any> {\r\n    return this.http.get(API_URL + 'admin', { responseType: 'text' });\r\n  }\r\n\r\n  getAccountDetails(): Observable<any> {\r\n    return this.http.get(API_URL + 'getaccountdetails', { responseType: 'text' });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { EventData } from './event.class';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventBusService {\r\n  private subject$ = new Subject<EventData>();\r\n  constructor() { }\r\n  emit(event: EventData) {\r\n    this.subject$.next(event);\r\n  }\r\n  on(eventName: string, action: any): Subscription {\r\n    return this.subject$.pipe(\r\n      filter((e: EventData) => e.name === eventName),\r\n      map((e: EventData) => e[\"value\"])).subscribe(action);\r\n  }\r\n}\r\n","export class EventData {\r\n  name: string;\r\n  value: any;\r\n  constructor(name: string, value: any) {\r\n    this.name = name;\r\n    this.value = value;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, CanDeactivate, CanLoad, Route, RouterStateSnapshot, UrlSegment, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AppComponent } from './app.component';\r\nimport {TokenStorageService} from \"./_services/token-storage.service\";\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n\r\nconst jwtHelper = new JwtHelperService();\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppRoutingGuard implements CanActivate, CanActivateChild, CanDeactivate<unknown>, CanLoad {\r\n\r\n  constructor(private app: AppComponent,\r\n              private tokenService: TokenStorageService) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return this.isApproved();\r\n  }\r\n  canActivateChild(\r\n    childRoute: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return this.isApproved();\r\n  }\r\n  canDeactivate(\r\n    component: unknown,\r\n    currentRoute: ActivatedRouteSnapshot,\r\n    currentState: RouterStateSnapshot,\r\n    nextState?: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return this.isApproved();\r\n  }\r\n  canLoad(\r\n    route: Route,\r\n    segments: UrlSegment[]): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return this.isApproved();\r\n  }\r\n\r\n\r\n  private isApproved(): boolean {\r\n\r\n    const token = this.tokenService.getToken();\r\n    console.log('guard check for authentication..' + !jwtHelper.isTokenExpired(this.tokenService.getToken()) );\r\n    return !jwtHelper.isTokenExpired(this.tokenService.getToken());\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home/home.component';\r\n\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'login2', loadChildren: () => import('./login2/login2.module').then(m => m.Login2Module), },\r\n\r\n  { path: '', redirectTo: 'login2', pathMatch: 'full' },\r\n  { path: '**', redirectTo: 'login2',  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes/*, {useHash: true}*/)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit, OnDestroy  } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { TokenStorageService } from './_services/token-storage.service';\r\nimport { EventBusService } from './_shared/event-bus.service';\r\nimport {Router} from \"@angular/router\";\r\nimport {workingModeConfiguration} from \"./app.config\";\r\nimport { UserService } from 'src/app/_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  private roles: string[] = [];\r\n  public isLoggedIn = false;\r\n  showAdminBoard = false;\r\n  showModeratorBoard = false;\r\n  username?: string;\r\n  eventBusSub?: Subscription;\r\n  title?: 'accGate';\r\n\r\n  constructor(private tokenStorageService: TokenStorageService,\r\n              private eventBusService: EventBusService,\r\n              private userService: UserService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\r\n\r\n    if (this.isLoggedIn) {\r\n      const user = this.tokenStorageService.getUser();\r\n      this.roles = user.roles;\r\n\r\n      this.showAdminBoard = (this.roles.includes('Admin') || this.roles.includes('SupervisorAdmin'));\r\n      this.showModeratorBoard = this.roles.includes('SupervisorMonitor');\r\n\r\n      this.username = user.username;\r\n    }\r\n\r\n    this.eventBusSub = this.eventBusService.on('logout', () => {\r\n      this.logout();\r\n    });\r\n\r\n    this.eventBusSub = this.eventBusService.on('is2SVRequired', () => {\r\n      this.is2SVRequired();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.eventBusSub)\r\n      this.eventBusSub.unsubscribe();\r\n  }\r\n\r\n  logout(): void {\r\n    console.log(\"logging out\")\r\n    this.tokenStorageService.signOut();\r\n    this.isLoggedIn = false;\r\n    this.roles = [];\r\n    this.showAdminBoard = false;\r\n    this.showModeratorBoard = false;\r\n    this.router.navigate(['/login2']);\r\n  }\r\n\r\n  is2SVRequired(): void {\r\n    console.log(\"is2SVRequired: \")\r\n    this.userService.isTowStepVerRequired().subscribe(\r\n      data => { console.log(\"data.data: \" + data.data);\r\n        console.log(\"data.message: \" + data.message);\r\n        workingModeConfiguration.runMode.TSV = (data.data);\r\n        console.log(\"workingModeConfiguration.runMode.TSV: \" + workingModeConfiguration.runMode.TSV.toString());},\r\n      err => { console.log(\"Can't detect 2SV operation mode:  \"+ err.error); }\r\n    );\r\n  }\r\n}\r\n","\r\n<router-outlet  id=\"app\" ></router-outlet>\r\n\r\n<!--div id=\"app\">\r\n  <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\r\n\r\n    <a href=\"#\" class=\"navbar-brand\">\r\n      <img _ngcontent-c0=\"accGate\" class=\"nav-img\" srcset=\"./assets/images/TadiranTelecom2.webp\"  width=\"56\"\r\n           height=\"56\"><label>accGate</label>\r\n    </a>\r\n    <ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\r\n      <li class=\"nav-item\">\r\n        <a href=\"/login-main\" class=\"nav-link\" routerLink=\"login-main\">Page </a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a href=\"/home\" class=\"nav-link\" routerLink=\"home\">Home </a>\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"showAdminBoard\">\r\n        <a href=\"/admin\" class=\"nav-link\" routerLink=\"admin\">Admin Board</a>\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"showModeratorBoard\">\r\n        <a href=\"/mod\" class=\"nav-link\" routerLink=\"mod\">Moderator Board</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a href=\"/user\" class=\"nav-link\" *ngIf=\"isConfigSuccess\" routerLink=\"user\">User</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"!isConfigSuccess\">\r\n      <li class=\"nav-item\">\r\n        <a href=\"/register\" class=\"nav-link\" routerLink=\"register\">Sign Up</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a href=\"/login\" class=\"nav-link\" routerLink=\"login\">Login</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"isConfigSuccess\">\r\n      <li class=\"nav-item\">\r\n        <a href=\"/profile\" class=\"nav-link\" routerLink=\"profile\">{{ username }}</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a href class=\"nav-link\" (click)=\"logout()\">LogOut</a>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div-->\r\n","import {InjectionToken} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n// parse ful url to ip,port, params\r\nvar parsedUrl = new URL(window.location.href);\r\nvar url = parsedUrl.hostname;\r\nvar port = parsedUrl.port; (parsedUrl.port=='4200' ?  '8445' : parsedUrl.port);\r\nvar protocol = parsedUrl.protocol;\r\nconst AUTH_API = protocol + \"//\" + url + \":\" + port;\r\n\r\nexport let APP_CONFIG = new InjectionToken('app.config');\r\nexport const AppConfig = {\r\n  accServer: {\r\n    ACCWEBServers: AUTH_API //'https://172.28.8.245:8445'\r\n  },\r\n  endpoints: {\r\n\r\n    TOKEN_KEY: 'token',\r\n    REFRESHTOKEN_KEY: 'auth-refreshtoken',\r\n    USER_KEY: 'user'\r\n  }\r\n};\r\nexport let workingModeConfiguration = {\r\n  runMode: {\r\n    TSV: false,\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\n\r\n//import { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { HomeComponent } from './home/home.component';\r\n\r\n\r\n\r\nimport { authInterceptorProviders } from './_helpers/auth.interceptor';\r\nimport {NgbDatepickerModule} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { MdbAccordionModule } from 'mdb-angular-ui-kit/accordion';\r\nimport { MdbCarouselModule } from 'mdb-angular-ui-kit/carousel';\r\nimport { MdbCheckboxModule } from 'mdb-angular-ui-kit/checkbox';\r\nimport { MdbCollapseModule } from 'mdb-angular-ui-kit/collapse';\r\nimport { MdbDropdownModule } from 'mdb-angular-ui-kit/dropdown';\r\nimport { MdbFormsModule } from 'mdb-angular-ui-kit/forms';\r\nimport { MdbModalModule } from 'mdb-angular-ui-kit/modal';\r\nimport { MdbPopoverModule } from 'mdb-angular-ui-kit/popover';\r\nimport { MdbRadioModule } from 'mdb-angular-ui-kit/radio';\r\nimport { MdbRangeModule } from 'mdb-angular-ui-kit/range';\r\nimport { MdbRippleModule } from 'mdb-angular-ui-kit/ripple';\r\nimport { MdbScrollspyModule } from 'mdb-angular-ui-kit/scrollspy';\r\nimport { MdbTabsModule } from 'mdb-angular-ui-kit/tabs';\r\nimport { MdbTooltipModule } from 'mdb-angular-ui-kit/tooltip';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ModalModule, ButtonsModule, MDBBootstrapModule } from 'angular-bootstrap-md';\r\n\r\nimport {ApiErrorMessagePipe} from \"./pipes/api-error-message.pipe\";\r\nimport {LoginErrorMessagePipe} from \"./pipes/login-error-message.pipe\";\r\n\r\n\r\nimport {Login2Module} from \"./login2/login2.module\";\r\nimport {StorybookModule} from \"./storybook/storybook.module\";\r\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\r\nimport {MdbValidationModule} from \"mdb-angular-ui-kit/validation\";\r\nimport {MatDialogModule} from \"@angular/material/dialog\";\r\nimport {MatButtonModule} from \"@angular/material/button\";\r\nimport ForgotPassForm2Component from \"./login2/login-main/forgot-pass-form2/forgot-pass-form2.component\";\r\nimport ResetPassForm2Component from \"./login2/login-main/reset-pass-form2/reset-pass-form2.component\";\r\nimport {AppRoutingModule} from \"./app-routing.module\";\r\nimport {Profile2Module} from \"./login2/profile2/profile2.module\";\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        HomeComponent,\r\n        ApiErrorMessagePipe,\r\n        LoginErrorMessagePipe,\r\n        ForgotPassForm2Component,\r\n        ResetPassForm2Component,\r\n\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        HttpClientModule,\r\n        NgbDatepickerModule,\r\n        MdbAccordionModule,\r\n        MdbCarouselModule,\r\n        MdbCheckboxModule,\r\n        MdbCollapseModule,\r\n        MdbDropdownModule,\r\n        MdbFormsModule,\r\n        MdbModalModule,\r\n        MdbPopoverModule,\r\n        MdbRadioModule,\r\n        MdbRangeModule,\r\n        MdbRippleModule,\r\n        MdbScrollspyModule,\r\n        MdbTabsModule,\r\n        MdbTooltipModule,\r\n        MdbValidationModule,\r\n        BrowserAnimationsModule,\r\n        ModalModule,\r\n        ButtonsModule,\r\n        MDBBootstrapModule.forRoot(),\r\n        Login2Module,\r\n        Profile2Module,\r\n        StorybookModule,\r\n        MatDialogModule,\r\n        MatButtonModule,\r\n\r\n\r\n    ],\r\n    providers: [\r\n        authInterceptorProviders,\r\n        AppComponent,\r\n        {provide: LocationStrategy, useClass: HashLocationStrategy}\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  public ACC_VERSION: string = 'ACC_VERSION';\r\n  content?: string = 'Aeonix | Tadiran Telecom';\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getPublicContent().subscribe(\r\n      data => { this.content = data; },\r\n      err => { this.content = JSON.parse(err.error).message; }\r\n    );\r\n    this.userService.getAccVersion().subscribe(\r\n      data => { this.ACC_VERSION = data; },\r\n      err => { this.ACC_VERSION = JSON.parse(err.error).message; }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container \">\r\n  <br>\r\n  <header class=\"background jumbotron  \">\r\n    <h1 class=\"font_0\">\r\n      <span class=\"\" style=\"font-size:44px;\">\r\n        <dl>\r\n          <dt><span>{{ content }}</span></dt>\r\n          <dd><span>{{ ACC_VERSION }}</span></dd>\r\n        </dl>\r\n      </span>\r\n    </h1>\r\n  </header>\r\n\r\n  <storybook-button-fortest></storybook-button-fortest>\r\n  <aside>\r\n    <!-- Card -->\r\n    <div class=\"fa-pull-right bg-image card shadow-1-strong card-img\">\r\n      <div class=\"card-body text-white\">\r\n        <h5 class=\"card-title\">Card title</h5>\r\n        <p class=\"card-text\">\r\n          Some quick example text to build on the card title and make up the bulk of the\r\n          card's content.\r\n        </p>\r\n        <a href=\"#!\" class=\"btn btn-outline-light\">Button</a>\r\n      </div>\r\n    </div>\r\n    <!-- Card -->\r\n  </aside>\r\n\r\n  <div class=\"alert alert-success  \" role=\"alert\">\r\n    <h4 class=\"alert-heading \">Well done!</h4>\r\n    <p>Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.</p>\r\n    <hr>\r\n    <p class=\"mb-0\">Whenever you need to, be sure to use margin utilities to keep things nice and tidy.</p>\r\n  </div>\r\n\r\n</div>\r\n","import {Component, ElementRef, Inject, OnInit, Renderer2, ViewChild} from '@angular/core';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport {StoryInput} from \"src/stories/inputs/input/story-input.model\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {TokenStorageService} from \"../../../_services/token-storage.service\";\r\nexport interface TSVData {\r\n  username: string;\r\n  email: string;\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'forgot-pass-form2',\r\n  templateUrl: './forgot-pass-form2.component.html',\r\n  styleUrls: ['./forgot-pass-form2.component.css']\r\n})\r\nexport default class ForgotPassForm2Component implements OnInit {\r\n  forgotPassForm: FormGroup;\r\n  status = {\r\n    isVerSuccess: false,\r\n    isRecSuccess: false,\r\n    isVerFailed: false,\r\n    verErrorMessage: {},\r\n  }\r\n\r\n  public isLoading = false;\r\n  submitted = false;\r\n  empList: Array<String> = [];\r\n  apiResponse = { message: '', error: false };\r\n  errorFieldSubmitted: any = {};\r\n  closeResult = '';\r\n\r\n  storyInputsInOrder: StoryInput[]  = [\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '2', title: 'username', state: 'USER NAME', icon: './assets/images/User2ldpi.png', type: 'text', placeholder: 'Ex.Saul Ramirez', hide: false  },\r\n  ];\r\n\r\n\r\n  constructor(private authService: AuthService,\r\n              private renderer: Renderer2,\r\n              private tokenStorage: TokenStorageService,\r\n              public dialogRef: MatDialogRef<ForgotPassForm2Component>,\r\n              @Inject(MAT_DIALOG_DATA) public data: TSVData) {\r\n    this.forgotPassForm = new FormGroup({\r\n      username: new FormControl(data.username.toString(), Validators.minLength(2)),\r\n    });/*Validators.pattern(new RegExp(\"[0-9 ]{12}\")*/\r\n    this.empList.push(\"admin\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //this.generateNewCodeFor2SV();\r\n  }\r\n\r\n  onSubmit(code: string): void {\r\n    if (this.status.isVerSuccess) {\r\n      this.dialogRef.close({message: 'Successful verification', data: this.data});\r\n    }\r\n    this.submitted = true;\r\n    const { username } = this.forgotPassForm.getRawValue();\r\n    this.data.username = username;\r\n\r\n    this.isLoading = true;\r\n    this.authService.TSV_ValidateCodeByName(username, this.data.email, code).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.tokenStorage.savePinCodeToken(data.pinCodeToken);\r\n        this.status.isVerSuccess = true;\r\n        this.status.isVerFailed = false;\r\n        this.errorFieldSubmitted = {} ;\r\n        this.apiResponse.error = false;\r\n        this.apiResponse.message = 'Successful verification';\r\n      },\r\n      error => {\r\n        const errorResponse = error.error;\r\n        this.apiResponse.error = true;\r\n        this.apiResponse.message = 'Verification error';\r\n        this.status.verErrorMessage = error.error.message;\r\n        this.status.isVerFailed = true;\r\n        this.errorFieldSubmitted = errorResponse.message;\r\n        console.log(errorResponse);\r\n        this.isLoading = false;\r\n      },\r\n      () => {\r\n        this.isLoading = false;\r\n        console.log(\"Validate Code Request Finished\");}\r\n    );\r\n  }\r\n\r\n  generateNewCodeFor2SV() {\r\n    const { username } = this.forgotPassForm.getRawValue();\r\n    this.isLoading = true;\r\n    this.authService.ResetPassByMail(username, this.data.email).subscribe(\r\n      data => {\r\n          if (data.message == \"Password successfully sent to email!\") {\r\n            this.status.isRecSuccess = true;\r\n          }\r\n        console.log(\"Generating Temporary Password Succeeded\", data);\r\n      },\r\n      error => {\r\n        this.isLoading = false;\r\n        console.log(\"Error: Can't generate temporary password for user \");\r\n      },\r\n      () => {\r\n        this.isLoading = false;\r\n        console.log(\"Sending generation temporary password request complete\");\r\n      });\r\n  }\r\n\r\n  get username(): AbstractControl {\r\n    return this.forgotPassForm.get('username')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.forgotPassForm.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.forgotPassForm.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.forgotPassForm.get('phone')!;\r\n  }\r\n}\r\n","\r\n<storybook-forgot-pass-form\r\n  [status]=\"status\"\r\n  [isLoading]=\"isLoading\"\r\n  [isVerSuccess]=\"status.isVerSuccess\"\r\n  [isRecSuccess]=\"status.isRecSuccess\"\r\n  [storyInputs]=\"storyInputsInOrder\"\r\n  [mForm]=\"forgotPassForm\"\r\n  (sendVerificationReq)=\"onSubmit($event)\"\r\n  (generateNewCodeFor2SV)=\"generateNewCodeFor2SV()\"\r\n  (clickXButton)=\"this.dialogRef.close({message: 'xbutton'})\">\r\n</storybook-forgot-pass-form>\r\n","import {Component, ElementRef, Inject, Input, OnInit, Renderer2, ViewChild} from '@angular/core';\nimport { StoryInput } from \"src/stories/inputs/input/story-input.model\";\nimport {AuthService} from \"src/app/_services/auth.service\";\nimport {AbstractControl, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {TokenStorageService} from \"src/app/_services/token-storage.service\";\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport RegisterForm2Component from \"./register-form2/register-form2.component\";\n//import * as mStoryInput from \"../../../stories/inputs/story-input.stories\";\nimport {ReplacePassForm2Component} from \"./replace-pass-form2/replace-pass-form2.component\";\nimport VerificationForm2Component from \"./verification-form2/verification-form2.component\";\nimport {UserService} from \"../../_services/user.service\";\nimport { workingModeConfiguration } from \"src/app/app.config\"\nimport {EventData} from \"../../_shared/event.class\";\nimport { EventBusService } from 'src/app/_shared/event-bus.service';\nimport {Subscription} from \"rxjs\";\nimport ForgotPassForm2Component from \"./forgot-pass-form2/forgot-pass-form2.component\";\n\n\nexport interface DialogData {\n  username: string;\n  password: string;\n}\n\n\n\n@Component({\n  selector: 'login-main',\n  templateUrl: './login-main.component.html',\n  styleUrls: ['./login-main.component.scss']\n})\nexport class LoginMainComponent implements OnInit {\n\n  public isLoggedIn = false;\n  isLoginFailed = false;\n  loginErrorMessage = '';\n  roles: string[] = [];\n  public isLoading = false;\n  eventBusSub?: Subscription;\n\n\n\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  storyInputsInOrder: StoryInput[]  = [\n    { /*...mStoryInput.Default.args?.['storyInput'],*/ id: '2', title: 'username', state: 'USER NAME', icon: './assets/images/User2ldpi.png', type: 'text', placeholder: 'Ex.Saul Ramirez' , hide: false },\n    { /*...mStoryInput.Default.args?.['storyInput'],*/ id: '3', title: 'password', state: 'PASSWORD', icon: './assets/images/LockIcon2ldpi.png', type: 'password', placeholder: 'your_password', hide: false   },\n  ];\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = true;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  background?: string;\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Login2Component';\n\n\n  loginForm: FormGroup;\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-page2--primary' : 'storybook-page2--secondary';\n\n    return ['storybook-page2', mode];\n  }\n\n  @ViewChild('formHeader', { static: false }) mainHeader?: ElementRef;\n\n\n  constructor(private renderer: Renderer2,\n              public forgotPassFormDialog: MatDialog,\n              public registerFormDialog: MatDialog,\n              public replacePassFormDialog: MatDialog,\n              public verificationFormDialog: MatDialog,\n              private eventBusService: EventBusService,\n              public authService: AuthService,\n              public userService: UserService,\n              private tokenStorage: TokenStorageService,\n              private router: Router,\n              private activatedRoute:ActivatedRoute) {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', Validators.minLength(2)),\n      password: new FormControl('', Validators.minLength(2)),\n    });\n\n  }\n\n\n  openForgotPassForm() {\n    const forgotPassFormDialogRef = this.forgotPassFormDialog.open(ForgotPassForm2Component, {\n      data: {username: this.getUsernameCurrentFieldValue, email: \"not@inuse.com\"},\n    });\n\n    forgotPassFormDialogRef.afterClosed().subscribe(result => {\n      console.log('The forget password form dialog was closed');\n      if (result.message === 'Successful verification') {\n        //this.setUsernameCurrentFieldValue(result.data.username);\n        //this.setPasswordCurrentFieldValue(result.data.password.toString());\n      }\n    });\n\n    return forgotPassFormDialogRef.afterClosed().toPromise();\n  }\n\n  openRegisterForm() {\n    const registerFormDialogRef = this.registerFormDialog.open(RegisterForm2Component, {\n      data: {username: this.getUsernameCurrentFieldValue , password: this.getPasswordCurrentFieldValue},\n    });\n\n    registerFormDialogRef.afterClosed().subscribe(result => {\n      console.log('The register form dialog was closed');\n      if (result.message === 'Registration Complete') {\n        //this.setUsernameCurrentFieldValue(result.username);\n        //this.setEmailCurrentFieldValue(result.email);\n      }\n      this.onSubmit();\n    });\n\n    return registerFormDialogRef.afterClosed().toPromise();\n  }\n\n  openReplacePassForm() {\n    const replacePassFormDialogRef = this.replacePassFormDialog.open(ReplacePassForm2Component, {\n      data: {username: this.getUsernameCurrentFieldValue , password: this.getPasswordCurrentFieldValue},\n    });\n\n    replacePassFormDialogRef.beforeClosed().subscribe(result => {\n      console.log('The replace password form dialog before closed');\n    },\n      err => {\n        console.log(err.error.message);\n      });\n\n\n    replacePassFormDialogRef.afterClosed().subscribe(result => {\n      console.log('The replace password form dialog after closed');\n      if (result.message === 'Replace Password Complete') {\n        this.setUsernameCurrentFieldValue(result.data.username);\n        this.setPasswordCurrentFieldValue(result.data.password.toString());\n      }\n    });\n\n    return replacePassFormDialogRef.afterClosed().toPromise();\n  }\n\n  openVerificationForm() {\n    const verificationFormDialogRef = this.verificationFormDialog.open(VerificationForm2Component, {\n      data: {username: this.getUsernameCurrentFieldValue, email: \"not@inuse.com\"},\n    });\n\n    verificationFormDialogRef.afterClosed().subscribe(result => {\n      console.log('The register form dialog was closed');\n      this.eventBusService.emit(new EventData('submitReplacePassForm', null));\n    });\n\n    return verificationFormDialogRef.afterClosed().toPromise();\n  }\n\n\n  ngOnInit(): void {\n    this.eventBusService.emit(new EventData('is2SVRequired', null));\n\n    this.eventBusSub = this.eventBusService.on('openVerification', () => {\n      this.openVerificationForm();\n    });\n  };\n\n\n\n  get getUsernameCurrentFieldValue(): AbstractControl {\n    return this.loginForm.get('username')?.value;\n  }\n\n  private setUsernameCurrentFieldValue(name: string) {\n    this.loginForm.get('username')?.setValue(name);\n  }\n\n  get getPasswordCurrentFieldValue(): AbstractControl {\n    return this.loginForm.get('password')?.value;\n  }\n\n  private setPasswordCurrentFieldValue(pass: string) {\n    this.loginForm.get('password')?.setValue(pass);\n  }\n\n\n  onSubmit(): void {\n    console.warn('Login Request from login-main!');\n    const { username, password } = this.loginForm.value;\n\n    this.isLoading = true;\n    this.authService.login(username, password).subscribe(\n      data => {\n        this.tokenStorage.saveToken(data.accessToken);\n        this.tokenStorage.saveRefreshToken(data.refreshToken);\n        this.tokenStorage.saveUser(data);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getUser().roles;\n        this.profile2();\n      },\n      err => {\n        switch (err.error.message) {\n          case \"Error: A registry process should be made!\":\n            //this.openRegisterForm().then(() => {this.openReplacePassword()});\n            //toPromise((data) => {this.openReplacePassword()});\n            this.openRegisterForm().then(\n              (val) => {\n                console.log(val);\n                switch (val) {\n                  case \"xbutton\":\n                    break;\n                  case \"Registration Complete\":\n                    this.onSubmit();\n                    break;\n                  case undefined:\n                    //this.openReplacePassword();\n                    break;\n                  default:\n                }\n                return 'done2';\n              },\n              (err) => console.error(err));\n            break;\n          case \"User credentials have expired\":\n            this.openReplacePassForm().then(\n              (val) => {\n                console.log(val);\n                switch (val.message) {\n                  case \"xbutton\":\n                    break;\n                  case \"Replace Password Complete\":\n                    this.onSubmit();\n                    break;\n                  case undefined:\n                    //Handle unknown response\n                    break;\n                  default:\n                }\n                return 'done2';\n              },\n              (err) => console.error(err));\n            break;\n          default:\n            this.loginErrorMessage = err.error.message;\n        }\n\n        this.isLoginFailed = true;\n        this.isLoading = false;\n      },\n      () => { this.isLoading = false; })\n  }\n\n\n  reloadPage(): void {\n    this.router.navigate(['/login-main']).then(() => {window.location.reload()});\n  }\n\n  profile2(): void {\n  this.router.navigate(['../profile2'], {relativeTo: this.activatedRoute});\n  }\n\n  configuratin(): void {\n    this.router.navigate(['../profile2/admin2'], {relativeTo: this.activatedRoute});\n  }\n\n  home2(): void {\n  this.router.navigate(['/home']);\n  }\n\n\n\n\n}\n\n/*\n@Component({\n  selector: 'dialog-overview-example-dialog',\n  templateUrl: 'dialog-overview-example-dialog.html',\n})\nexport class DialogOverviewExampleDialog {\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n*/\n\n/*\n@Component({\n  selector: 'password-dialog',\n  templateUrl: './password-dialog.html',\n})\nexport class ExtentionDialog {\n  constructor(\n    public dialogRef: MatDialogRef<ExtentionDialog>,\n    @Inject(MAT_DIALOG_DATA) public extensionData: {name: string, password: string;},\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n*/\n","\n<html>\n<head>\n  <style>\n\n  </style>\n  <title></title>\n</head>\n<body>\n\n<!--article><div class=\"Frame-1 relative\">\n<section class=\"relative \" Style=\"{ 'background': backgroundColor }\"-->\n\n<!--storybook-button-globe></storybook-button-globe-->\n\n<storybook-background1></storybook-background1>\n\n<!--button mat-raised-button (click)=\"openReplacePassForm()\">ReplacePassForm</button>\n<button mat-raised-button (click)=\"openRegisterForm()\">RegisterForm</button>\n<button mat-raised-button (click)=\"openVerificationForm()\">VerificationForm</button>\n<button mat-raised-button (click)=\"openForgotPassForm()\">forgotPassForm</button>\n<button mat-raised-button (click)=\"profile2()\">profile2</button>\n<button mat-raised-button (click)=\"configuratin()\">configuratin</button>\n<button mat-raised-button (click)=\"home2()\">home2</button-->\n\n\n<storybook-login-form\n  [isLoggedIn]=\"false\"\n  [isLoading]=\"isLoading\"\n  [isLoginFailed]=\"isLoginFailed\"\n  [loginErrorMessage]=\"loginErrorMessage\"\n  [mForm]=\"loginForm\"\n  [storyInputs]=\"storyInputsInOrder\"\n  (sendLoginReq)=\"onSubmit()\"\n  (openForgetPassForm)=\"openForgotPassForm()\"\n></storybook-login-form>\n\n\n<!--/section></div>\n</article-->\n\n</body>\n</html>\n\n\n","import {Component, ElementRef, EventEmitter, Inject, OnInit, Output, Renderer2, ViewChild} from '@angular/core';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport {StoryInput} from \"src/stories/inputs/input/story-input.model\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {DialogData} from \"../login-main.component\";\r\nimport {PasswordValidators} from \"../replace-pass-form2/replace-pass-form2.component\";\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'register-form2',\r\n  templateUrl: './register-form2.component.html',\r\n  styleUrls: ['./register-form2.component.css']\r\n})\r\nexport default class RegisterForm2Component implements OnInit {\r\n  registerForm: FormGroup;\r\n  isRegSuccess = false;\r\n  isRegFailed = false;\r\n  submitted = false;\r\n  regErrorMessage: any;\r\n  empList: Array<String> = [];\r\n  apiResponse = { message: '', error: false };\r\n  @ViewChild('form', { static: false }) form?: ElementRef;\r\n  errorFieldSubmitted: any = {};\r\n  closeResult = '';\r\n  public isLoading = false;\r\n\r\n\r\n  @Output() validateMail: EventEmitter<String> = new EventEmitter();\r\n\r\n  storyInputsInOrder: StoryInput[]  = [\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '2', title: 'username', state: 'USER NAME', icon: './assets/images/User2ldpi.png', type: 'text', placeholder: 'Ex.Saul Ramirez', hide: false  },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '3', title: 'password', state: 'PASSWORD', icon: './assets/images/LockIcon2ldpi.png', type: 'password', placeholder: 'your_password' , hide: true },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '5', title: 'phone', state: 'PHONE NUMBER FOR AUTHENTICATION', icon: './assets/images/Phone3ldpi.png', type: 'tel', placeholder: 'Ex: +972547762084', hide: false  },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '4', title: 'email', state: 'EMAIL', icon: './assets/images/AtSign3ldpi.png', type: 'email', placeholder: 'Ex: abc@example.com', hide: false   },\r\n\r\n  ];\r\n\r\n  constructor(private authService: AuthService,\r\n              private renderer: Renderer2,\r\n              public dialogRef: MatDialogRef<RegisterForm2Component>,\r\n              @Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n    this.registerForm = new FormGroup({\r\n      username: new FormControl(data.username.toString(), Validators.minLength(2)),\r\n      password: new FormControl(data.password.toString(), Validators.minLength(2)),\r\n      email: new FormControl('', Validators.email),\r\n      phone: new FormControl('', PasswordValidators.patternValidator(new RegExp(\"(?=.*[0-9 ]{8})\"), {requiresPhoneChars: true}))\r\n    });/*Validators.pattern(new RegExp(\"[0-9 ]{12}\")*/\r\n    this.empList.push(\"admin\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.isRegSuccess) {\r\n      this.dialogRef.close({message: 'Registration Complete', username: this.username.value, email: this.email.value});\r\n    }\r\n    else {\r\n      this.submitted = true;\r\n      const { username, password, email, phone } = this.registerForm.getRawValue();\r\n      this.isLoading = true;\r\n      this.authService.registerForm(username, email, password, phone).subscribe(\r\n        data => {\r\n          console.log(data);\r\n          this.isRegSuccess = true;\r\n          this.isRegFailed = false;\r\n          this.errorFieldSubmitted = {} ;\r\n          this.apiResponse.error = false;\r\n          this.apiResponse.message = 'Successful registration';\r\n        },\r\n        error => {\r\n          const errorResponse = JSON.parse(error.error);\r\n          this.apiResponse.error = true;\r\n          this.apiResponse.message = 'Registration error';\r\n          this.regErrorMessage = errorResponse;\r\n          this.isRegFailed = true;\r\n          if (errorResponse.error && errorResponse.message === 'VALIDATION_FAILED') {\r\n            this.errorFieldSubmitted = errorResponse.data;\r\n          }\r\n          this.isLoading = false;\r\n        },\r\n        () => {\r\n          this.isLoading = false;\r\n          console.log(\"Registration Complete\");}\r\n      );\r\n    }\r\n  }\r\n\r\n  get username(): AbstractControl {\r\n    return this.registerForm.get('username')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.registerForm.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.registerForm.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.registerForm.get('phone')!;\r\n  }\r\n}\r\n","\r\n<storybook-registry-form #form\r\n                  [isRegSuccess]=\"isRegSuccess\"\r\n                  [isRegFailed]=\"isRegFailed\"\r\n                  [regErrorMessage]=\"regErrorMessage\"\r\n                  [isLoading]=\"isLoading\"\r\n                  [storyInputs]=\"storyInputsInOrder\"\r\n                  [mForm]=\"registerForm\"\r\n                  (sendRegReq)=\"onSubmit()\"\r\n                  (clickXButton)=\"this.dialogRef.close('xbutton')\">\r\n</storybook-registry-form>\r\n","import {Component, Inject, Renderer2} from '@angular/core';\r\nimport { MdbModalRef } from 'mdb-angular-ui-kit/modal';\r\nimport {AuthService} from \"src/app/_services/auth.service\";\r\nimport {AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators} from \"@angular/forms\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {DialogData} from \"../login-main.component\";\r\nimport RegisterForm2Component from \"../register-form2/register-form2.component\";\r\nimport {StoryInput} from \"../../../../stories/inputs/input/story-input.model\";\r\nimport {EventData} from \"../../../_shared/event.class\";\r\nimport {workingModeConfiguration} from \"../../../app.config\";\r\nimport {EventBusService} from \"../../../_shared/event-bus.service\";\r\nimport {TokenStorageService} from \"../../../_services/token-storage.service\";\r\nimport {Subscription} from \"rxjs\";\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: './replace-pass-form2.component.html',\r\n  styleUrls: ['./replace-pass-form2.component.css']\r\n})\r\nexport class ReplacePassForm2Component  {\r\n  replacePassForm: FormGroup;\r\n  status = {\r\n    isRepSuccess: false,\r\n    isRepFailed: false,\r\n    submitted: false,\r\n    repErrorMessage: {},\r\n    apiResponse: { message: '', error: false },\r\n    errorFieldSubmitted: {},\r\n    closeResult: '',\r\n  };\r\n\r\n  eventBusSub?: Subscription;\r\n\r\n  public isLoading = false;\r\n\r\n  empList: Array<String> = [];\r\n\r\n  closeResult = '';\r\n\r\n  storyInputsInOrder: StoryInput[]  = [\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '1', title: 'oldPassword', state: 'INITIAL PASSWORD', icon: './assets/images/LockIcon2ldpi.png', type: 'password', placeholder: 'your_password' , hide: false },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '2', title: 'password', state: 'NEW PASSWORD', icon: './assets/images/LockIcon2ldpi.png', type: 'password', placeholder: 'your_password' , hide: false },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '3', title: 'confirmPassword', state: 'RE-ENTER NEW PASSWORD', icon: './assets/images/LockIcon2ldpi.png', type: 'password', placeholder: 'your_password' , hide: false },\r\n  ];\r\n\r\n\r\n\r\n\r\n  constructor(private authService: AuthService,\r\n              private renderer: Renderer2,\r\n              private eventBusService: EventBusService,\r\n              private tokenStorageService: TokenStorageService,\r\n              public dialogRef: MatDialogRef<ReplacePassForm2Component>,\r\n              @Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n    this.replacePassForm = new FormGroup({\r\n      userName: new FormControl(data.username, Validators.required),\r\n      oldPassword: new FormControl(data.password, Validators.minLength(1)),\r\n      password: new FormControl('', Validators.compose([\r\n        Validators.minLength(8),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.*[0-9])\"), {requiresDigit: true}),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.*[A-Z])\"), {requiresUppercase: true}),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.*[a-z])\"), {requiresLowercase: true} ),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.*[$@^!%*?&#><{}()+~])\"), {requiresSpecialChars: true})\r\n      ])),\r\n      confirmPassword: new FormControl('', [\r\n        Validators.minLength(8),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.*[0-9])\"), {requiresDigit: true}),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.*[A-Z])\"), {requiresUppercase: true}),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.*[a-z])\"), {requiresLowercase: true}),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.*[$@^!%*?&#><{}()+~])\"), {requiresSpecialChars: true})\r\n      ])\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.eventBusSub = this.eventBusService.on('submitReplacePassForm', () => {\r\n      this.onSubmit();\r\n    });\r\n  };\r\n\r\n\r\n  onSubmit(): void {\r\n    if (this.status.isRepSuccess) {\r\n      this.dialogRef.close({message: 'Replace Password Complete', data: this.data});\r\n    }\r\n    //else if (workingModeConfiguration.runMode.TSV && this.tokenStorageService.getPinCodeToken() == null) {\r\n    //  this.eventBusService.emit(new EventData('openVerification', null));\r\n    //}\r\n    else {\r\n      this.status.submitted = true;\r\n      this.isLoading = true;\r\n      this.changePassword().subscribe(\r\n        data => {\r\n          console.log(data);\r\n          this.status.isRepSuccess = true;\r\n          this.status.isRepFailed = false;\r\n          this.status.errorFieldSubmitted = {};\r\n          this.status.apiResponse.error = false;\r\n          this.status.apiResponse.message = 'Successful registration';\r\n          this.data.password = this.password.value.toString();\r\n        },\r\n        error => {\r\n          switch (error.error.message) {\r\n            case \"Error: Invalidate Pin-Code! User Not Approved\":\r\n              this.eventBusService.emit(new EventData('openVerification', null));\r\n              break;\r\n            default:\r\n              const errorResponse = JSON.parse(error.error);\r\n              this.status.apiResponse.error = true;\r\n              this.status.apiResponse.message = 'Replace password error';\r\n              this.status.repErrorMessage = errorResponse;\r\n              this.status.isRepFailed = true;\r\n              if (errorResponse.error && errorResponse.message === 'VALIDATION_FAILED') {\r\n                this.status.errorFieldSubmitted = errorResponse.data;\r\n              }\r\n          }\r\n\r\n          this.isLoading = false;\r\n\r\n          //Error: Invalidate Pin-Code! User Not Approved\r\n        },\r\n        () => {\r\n          this.isLoading = false;\r\n          console.log('Replace Password closed');}\r\n      );\r\n    }\r\n  }\r\n\r\n  private changePassword() {\r\n    const { userName, oldPassword, password, confirmPassword } = this.replacePassForm.value;\r\n    let pinCodeToken = this.tokenStorageService.getPinCodeToken();\r\n\r\n    if (pinCodeToken == null) {\r\n      pinCodeToken = 'dismiss';\r\n    }\r\n    return this.authService.TSV_ReplacePassForm(userName, oldPassword, password, confirmPassword, pinCodeToken);\r\n  }\r\n\r\n\r\n  get userName(): AbstractControl {\r\n    return this.replacePassForm.get('username')!;\r\n  }\r\n\r\n  get oldPassword(): AbstractControl {\r\n    return this.replacePassForm.get('oldPassword')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.replacePassForm.get('password')!;\r\n  }\r\n\r\n  get confirmPassword(): AbstractControl {\r\n    return this.replacePassForm.get('confirmPassword')!;\r\n  }\r\n\r\n}\r\n\r\nexport class PasswordValidators {\r\n  constructor() {\r\n  }\r\n\r\n  static patternValidator(regex: RegExp, error: ValidationErrors): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } | null => {\r\n      if (!control.value) {\r\n        // if the control value is empty return no error.\r\n        return null;\r\n      }\r\n\r\n      // test the value of the control against the regexp supplied.\r\n      const valid = regex.test(control.value);\r\n\r\n      // if true, return no error, otherwise return the error object passed in the second parameter.\r\n      return valid ? null : error;\r\n    };\r\n  }\r\n}\r\n","<storybook-replace-pass-form #form\r\n                         [status]=\"status\"\r\n                         [isLoading]=\"isLoading\"\r\n                         [storyInputs]=\"storyInputsInOrder\"\r\n                         [mForm]=\"replacePassForm\"\r\n                         [isRepSuccess]=\"status.isRepSuccess\"\r\n                         (sendRegReq)=\"onSubmit()\"\r\n                         (clickXButton)=\"this.dialogRef.close({message: 'xbutton'})\"\r\n></storybook-replace-pass-form>\r\n","import {Component, ElementRef, Inject, OnInit, Renderer2, ViewChild} from '@angular/core';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport {StoryInput} from \"src/stories/inputs/input/story-input.model\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {TokenStorageService} from \"../../../_services/token-storage.service\";\r\nexport interface TSVData {\r\n  username: string;\r\n  email: string;\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'reset-pass-form2',\r\n  templateUrl: './reset-pass-form2.component.html',\r\n  styleUrls: ['./reset-pass-form2.component.css']\r\n})\r\nexport default class ResetPassForm2Component implements OnInit {\r\n  forgotPassForm: FormGroup;\r\n  status = {\r\n    isVerSuccess: false,\r\n    isRecSuccess: false,\r\n    isVerFailed: false,\r\n    verErrorMessage: {},\r\n  }\r\n\r\n  public isLoading = false;\r\n  submitted = false;\r\n  empList: Array<String> = [];\r\n  apiResponse = { message: '', error: false };\r\n  errorFieldSubmitted: any = {};\r\n  closeResult = '';\r\n\r\n  storyInputsInOrder: StoryInput[]  = [\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '2', title: 'username', state: 'USER NAME', icon: './assets/images/User2ldpi.png', type: 'text', placeholder: 'Ex.Saul Ramirez', hide: false  },\r\n  ];\r\n\r\n\r\n  constructor(private authService: AuthService,\r\n              private renderer: Renderer2,\r\n              private tokenStorage: TokenStorageService,\r\n              public dialogRef: MatDialogRef<ResetPassForm2Component>,\r\n              @Inject(MAT_DIALOG_DATA) public data: TSVData) {\r\n    this.forgotPassForm = new FormGroup({\r\n      username: new FormControl(data.username.toString(), Validators.minLength(2)),\r\n    });/*Validators.pattern(new RegExp(\"[0-9 ]{12}\")*/\r\n    this.empList.push(\"admin\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //this.generateNewCodeFor2SV();\r\n  }\r\n\r\n  onSubmit(code: string): void {\r\n    if (this.status.isVerSuccess) {\r\n      this.dialogRef.close({message: 'Successful verification', data: this.data});\r\n    }\r\n    this.submitted = true;\r\n    const { username } = this.forgotPassForm.getRawValue();\r\n    this.data.username = username;\r\n\r\n    this.isLoading = true;\r\n    this.authService.TSV_ValidateCodeByName(username, this.data.email, code).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.tokenStorage.savePinCodeToken(data.pinCodeToken);\r\n        this.status.isVerSuccess = true;\r\n        this.status.isVerFailed = false;\r\n        this.errorFieldSubmitted = {} ;\r\n        this.apiResponse.error = false;\r\n        this.apiResponse.message = 'Successful verification';\r\n      },\r\n      error => {\r\n        const errorResponse = error.error;\r\n        this.apiResponse.error = true;\r\n        this.apiResponse.message = 'Verification error';\r\n        this.status.verErrorMessage = error.error.message;\r\n        this.status.isVerFailed = true;\r\n        this.errorFieldSubmitted = errorResponse.message;\r\n        console.log(errorResponse);\r\n        this.isLoading = false;\r\n      },\r\n      () => {\r\n        this.isLoading = false;\r\n        console.log(\"Validate Code Request Finished\");}\r\n    );\r\n  }\r\n\r\n  generateNewCodeFor2SV() {\r\n    const { username } = this.forgotPassForm.getRawValue();\r\n    this.isLoading = true;\r\n    this.authService.ResetPassByMail(username, this.data.email).subscribe(\r\n      data => {\r\n          if (data.message == \"Password successfully sent to email!\") {\r\n            this.status.isRecSuccess = true;\r\n            this.status.isVerSuccess = true;\r\n          }\r\n        console.log(\"Generating Temporary Password Succeeded\", data);\r\n      },\r\n      error => {\r\n        this.isLoading = false;\r\n        console.log(\"Error: Can't generate temporary password for user \");\r\n      },\r\n      () => {\r\n        this.isLoading = false;\r\n        console.log(\"Sending generation temporary password request complete\");\r\n      });\r\n  }\r\n\r\n  get username(): AbstractControl {\r\n    return this.forgotPassForm.get('username')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.forgotPassForm.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.forgotPassForm.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.forgotPassForm.get('phone')!;\r\n  }\r\n}\r\n","\r\n<storybook-forgot-pass-form\r\n  [status]=\"status\"\r\n  [isLoading]=\"isLoading\"\r\n  [isVerSuccess]=\"status.isVerSuccess\"\r\n  [isRecSuccess]=\"status.isRecSuccess\"\r\n  [storyInputs]=\"storyInputsInOrder\"\r\n  [mForm]=\"forgotPassForm\"\r\n  (sendVerificationReq)=\"onSubmit($event)\"\r\n  (generateNewCodeFor2SV)=\"generateNewCodeFor2SV()\"\r\n  (clickXButton)=\"this.dialogRef.close({message: 'xbutton'})\">\r\n</storybook-forgot-pass-form>\r\n","import {Component, ElementRef, Inject, OnInit, Renderer2, ViewChild} from '@angular/core';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport {StoryInput} from \"src/stories/inputs/input/story-input.model\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {TokenStorageService} from \"../../../_services/token-storage.service\";\r\nexport interface TSVData {\r\n  username: string;\r\n  email: string;\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'verification-form2',\r\n  templateUrl: './verification-form2.component.html',\r\n  styleUrls: ['./verification-form2.component.css']\r\n})\r\nexport default class VerificationForm2Component implements OnInit {\r\n  verificationForm: FormGroup;\r\n  status = {\r\n    isVerSuccess: false,\r\n    isVerFailed: false,\r\n    verErrorMessage: {},\r\n  }\r\n\r\n  public isLoading = false;\r\n  submitted = false;\r\n  empList: Array<String> = [];\r\n  apiResponse = { message: '', error: false };\r\n  @ViewChild('form', { static: false }) form?: ElementRef;\r\n  errorFieldSubmitted: any = {};\r\n  closeResult = '';\r\n\r\n  storyInputsInOrder: StoryInput[]  = [\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '2', title: 'username', state: 'USER NAME', icon: './assets/images/User2ldpi.png', type: 'text', placeholder: 'Ex.Saul Ramirez', hide: false  },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '3', title: 'password', state: 'PASSWORD', icon: './assets/images/LockIcon2ldpi.png', type: 'password', placeholder: 'your_password' , hide: true },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '5', title: 'phone', state: 'PHONE NUMBER FOR AUTHENTICATION', icon: './assets/images/Phone3ldpi.png', type: 'tel', placeholder: 'Ex: +972547762084', hide: false  },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '4', title: 'email', state: 'EMAIL', icon: './assets/images/AtSign3ldpi.png', type: 'email', placeholder: 'Ex: abc@example.com', hide: false   },\r\n\r\n  ];\r\n\r\n  constructor(private authService: AuthService,\r\n              private renderer: Renderer2,\r\n              private tokenStorage: TokenStorageService,\r\n              public dialogRef: MatDialogRef<VerificationForm2Component>,\r\n              @Inject(MAT_DIALOG_DATA) public data: TSVData) {\r\n    this.verificationForm = new FormGroup({\r\n      username: new FormControl(data.username.toString(), Validators.minLength(2)),\r\n      email: new FormControl(data.email.toString(), Validators.email),\r\n    });/*Validators.pattern(new RegExp(\"[0-9 ]{12}\")*/\r\n    this.empList.push(\"admin\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.generateNewCodeFor2SV();\r\n  }\r\n\r\n  onSubmit(code: string): void {\r\n    this.submitted = true;\r\n\r\n    this.isLoading = true;\r\n    this.authService.TSV_ValidateCodeByName(this.data.username, this.data.email, code).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.tokenStorage.savePinCodeToken(data.pinCodeToken);\r\n        this.status.isVerSuccess = true;\r\n        this.status.isVerFailed = false;\r\n        this.errorFieldSubmitted = {} ;\r\n        this.apiResponse.error = false;\r\n        this.apiResponse.message = 'Successful verification';\r\n        this.dialogRef.close('User Validate');\r\n      },\r\n      error => {\r\n        const errorResponse = error.error;\r\n        this.apiResponse.error = true;\r\n        this.apiResponse.message = 'Verification error';\r\n        this.status.verErrorMessage = error.error.message;\r\n        this.status.isVerFailed = true;\r\n        this.errorFieldSubmitted = errorResponse.message;\r\n        console.log(errorResponse);\r\n        this.isLoading = false;\r\n      },\r\n      () => {\r\n        this.isLoading = false;\r\n        console.log(\"Validate Code Request Finished\");}\r\n    );\r\n  }\r\n\r\n  generateNewCodeFor2SV() {\r\n    this.isLoading = true;\r\n    this.authService.TSV_GenerateCodeByName(this.data.username, this.data.email).subscribe(\r\n      data => {\r\n        console.log(\"Generating Code Succeeded\", data);\r\n      },\r\n      error => {\r\n        this.isLoading = false;\r\n        console.log(\"Error: Can't generate code for user \");\r\n      },\r\n      () => {\r\n        this.isLoading = false;\r\n        console.log(\"Sending Generation Code Request Complete\");\r\n      });\r\n  }\r\n\r\n  get username(): AbstractControl {\r\n    return this.verificationForm.get('username')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.verificationForm.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.verificationForm.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.verificationForm.get('phone')!;\r\n  }\r\n}\r\n","\r\n<storybook-verification-form\r\n  [status]=\"status\"\r\n  [isLoading]=\"isLoading\"\r\n  (sendVerificationReq)=\"onSubmit($event)\"\r\n  (generateNewCodeFor2SV)=\"generateNewCodeFor2SV()\"\r\n  (clickXButton)=\"this.dialogRef.close({message: 'xbutton'})\">\r\n</storybook-verification-form>\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport RegisterForm2Component from \"./login-main/register-form2/register-form2.component\";\nimport {LoginMainComponent} from \"./login-main/login-main.component\";\nimport {AppRoutingGuard} from \"../app-routing.guard\";\n\n\n\n\n\n\nconst routes: Routes = [\n  { path: 'login-main', component: LoginMainComponent },\n  { path: 'register-form2', component: RegisterForm2Component },\n  {\n    path: 'profile2',\n    loadChildren: () => import('./profile2/profile2.module').then(m => m.Profile2Module),\n    canActivate: [AppRoutingGuard]\n  },\n  { path: '', redirectTo: 'login-main', pathMatch: 'full' },/**/\n  { path: '**', redirectTo: 'login-main', },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class Login2RoutingModule { }\n","import { NgModule } from '@angular/core';\n\nimport { Login2RoutingModule } from './login2-routing.module';\nimport RegisterForm2Component  from './login-main/register-form2/register-form2.component';\nimport {LoginMainComponent} from './login-main/login-main.component';\nimport {StorybookModule} from \"../storybook/storybook.module\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {ReplacePassForm2Component} from \"./login-main/replace-pass-form2/replace-pass-form2.component\";\nimport VerificationForm2Component from \"./login-main/verification-form2/verification-form2.component\";\nimport {Profile2Module} from \"./profile2/profile2.module\";\n\n\n\n\n@NgModule({\n  declarations: [\n    ReplacePassForm2Component,\n    RegisterForm2Component,\n    VerificationForm2Component,\n    LoginMainComponent,\n  ],\n  imports: [\n    Login2RoutingModule,\n    StorybookModule,\n    MatDialogModule,\n    MatButtonModule,\n    Profile2Module\n  ],\n  exports: [\n    ReplacePassForm2Component,\n    RegisterForm2Component\n  ],\n  providers: [ReplacePassForm2Component],\n  bootstrap: []\n})\nexport class Login2Module { }\n","import {Component, ElementRef, EventEmitter,Inject, OnInit, Output, Renderer2, ViewChild} from '@angular/core';\r\nimport { UserService } from 'src/app/_services/user.service';\r\nimport {AuthService} from \"src/app/_services/auth.service\";\r\nimport {AbstractControl, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {ConfigurationInput} from \"../../../../stories/inputs/configuration-input/configuration-input.model\";\r\nimport {EventBusService} from \"../../../_shared/event-bus.service\";\r\nimport {TokenStorageService} from \"../../../_services/token-storage.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport MyAccountFormComponent from \"../../../../stories/forms/my-account-form/my-account-form.component\";\r\nimport * as mStoryInput from \"../../../../stories/inputs/configuration-input/configuration-input.stories\";\r\nimport {PasswordValidators} from \"../../login-main/replace-pass-form2/replace-pass-form2.component\";\r\nimport {throwError} from \"rxjs\";\r\nimport {EventData} from \"../../../_shared/event.class\";\r\nimport {MyAccountData} from \"../my-account-form2/my-account-form2.component\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {PinCodeLength} from \"../../../../stories/inputs/configuration-input/configuration-input.stories\";\r\n\r\n\r\n\r\nexport class Prop {\r\n  propName: string= '';\r\n  propValue: string= '';\r\n\r\n  Prop(propName: string , propValue: string) {\r\n    this.propName = propName;\r\n    this.propValue = propValue;\r\n  }\r\n\r\n  getPropName(): string {\r\n  return this.propName;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-board-admin2',\r\n  templateUrl: './board-admin2.component.html',\r\n  styleUrls: ['./board-admin2.component.css']\r\n})\r\nexport class BoardAdmin2Component implements OnInit {\r\n  configurationForm: FormGroup;\r\n  isConfigSuccess = false;\r\n  isConfigFailed = false;\r\n  submitted = false;\r\n  configErrorMessage: any;\r\n  empList: Array<String> = [];\r\n  apiResponse = { message: '', error: false };\r\n  @ViewChild('form', { static: false }) form?: ElementRef;\r\n  @ViewChild('username', { static: false }) userField?: ElementRef;\r\n  configurationData: any;\r\n  closeResult = '';\r\n\r\n  properties: Array<Prop>= [];\r\n\r\n\r\n\r\n\r\n\r\n  @Output() validateMail: EventEmitter<String> = new EventEmitter();\r\n\r\n  storyInputsInOrder: ConfigurationInput[]  = [\r\n    {...mStoryInput.PassExpDays.args?.['storyInput'], id: '1'  },\r\n    {...mStoryInput.PreviousAlertPassExpDays.args?.['storyInput'], id: '2'  },\r\n    {...mStoryInput.TSV.args?.['storyInput'], id: '3'  },\r\n    {...mStoryInput.PinCodeLength.args?.['storyInput'], id: '4'  },\r\n    {...mStoryInput.PinCodeValDura.args?.['storyInput'], id: '5'  },\r\n  ];\r\n\r\n  constructor(private eventBusService: EventBusService,\r\n              private token: TokenStorageService,\r\n              private authService: AuthService,\r\n              private router: Router,\r\n              private activatedRoute:ActivatedRoute,\r\n              /*public dialogRef: MatDialogRef<MyAccountFormComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: MyAccountData*/) {\r\n    this.configurationForm = new FormGroup({\r\n      tadiran_gate_passExpDays: new FormControl(22),\r\n      tadiran_gate_PreviousAlertPassExpDays: new FormControl(15),\r\n      tadiran_gate_TSV: new FormControl(false),/**/\r\n      tadiran_gate_pinCodeLength: new FormControl(4),\r\n      tadiran_gate_pinCodeValDura: new FormControl(15),\r\n    });\r\n    this.empList.push(\"admin\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getConfigurationData();\r\n    /*this.userService.getAccountDetails().subscribe(\r\n      data => { this.accountDetails = data; },\r\n      err => { this.accountDetails = JSON.parse(err.error).message; }\r\n    );*/\r\n  }\r\n\r\n\r\n  // Change name of property Ex. \"tadiran.gate.pass-exp-days\" => \"tadiran_gate_passExpDays\"\r\n  changeNameToField(propName: string) {\r\n    return propName.replace(/\\./gi,'_')\r\n      .split(\"-\").map(function(input){return (!!input) ? input.charAt(0).toUpperCase() + input.substr(1).toLowerCase() : ''}).join(\"\");\r\n  }\r\n\r\n  getConfigurationData(): void {\r\n    //let prop: any;\r\n    const token = this.token.getToken();\r\n    if (token)\r\n      this.authService.getConfigurationData().subscribe(configurationData => {\r\n        this.configurationData=configurationData;\r\n\r\n        this.properties = (this.configurationData.prop as Array<Prop>);\r\n        this.properties.forEach((p ) => {\r\n          //console.log(\"propName: \"+p.propName+\"     propValue: \"+p.propValue);\r\n          let configInput = this.storyInputsInOrder.find(configInput => configInput.type.match(p.propName.valueOf().toString()));\r\n          if (configInput != null) {\r\n            let pn = p.propName.replace(/\\./gi,'_');\r\n            this.configurationForm.get(configInput.name)?.setValue(p.propValue);\r\n            console.log(\"propValue:   \"+p.propValue);\r\n          }\r\n          //let prop: new Prop\r\n        });\r\n\r\n        console.log('Properties Configurations is received from server.');\r\n      }, (err) => {\r\n        console.log('Can not get user account details');\r\n        return throwError(err);\r\n      });\r\n\r\n  }\r\n\r\n  doLogout(): void {\r\n    console.log(\"logging out\");\r\n    this.eventBusService.emit(new EventData('logout', null));\r\n  }\r\n\r\n  openChangePassword() {\r\n    this.eventBusService.emit(new EventData('openChangePassword', null));\r\n  }\r\n\r\n  returnPortal() {\r\n    //todo: display warn message to user - changes will not be saved!\r\n    console.log(\"openPortal\");\r\n    this.router.navigate(['../'], {relativeTo: this.activatedRoute});\r\n    //this.eventBusService.emit(new EventData('openPortal', null));\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.isConfigSuccess) {\r\n      //todo: Display confirmation message - changes have been applied!\r\n    }\r\n    else {\r\n      this.submitted = true;\r\n      let changedProperties: Array<Prop>=[] ;\r\n\r\n      this.properties.forEach((p ) => {\r\n        //console.log(\"propName: \"+p.propName+\"     propValue: \"+p.propValue);\r\n        let configInput = this.storyInputsInOrder.find(configInput => configInput.type.match(p.propName.valueOf().toString()));\r\n        if (configInput != null) {\r\n          p.propValue = this.configurationForm.get(configInput.name)?.value;\r\n          console.log(\"propValue:   \"+p.propValue);\r\n          changedProperties.push(p);\r\n        }\r\n      });\r\n\r\n\r\n      this.authService.setConfigurationData(JSON.stringify(changedProperties)).subscribe(\r\n        data => {\r\n          console.log(data);\r\n          this.isConfigSuccess = true;\r\n          this.isConfigFailed = false;\r\n          this.apiResponse.error = false;\r\n          this.apiResponse.message = 'Successful configuration';\r\n        },\r\n        error => {\r\n          const errorResponse = JSON.parse(error.error);\r\n          this.apiResponse.error = true;\r\n          this.apiResponse.message = 'Configuration error';\r\n          this.configErrorMessage = errorResponse;\r\n          this.isConfigFailed = true;\r\n        },\r\n        () => {\r\n          console.log(\"Configuration Saved\");}\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n","<storybook-background1></storybook-background1>\r\n\r\n<storybook-configuration-form  #form\r\n                               [isRegSuccess]=\"isConfigSuccess\"\r\n                               [isRegFailed]=\"isConfigFailed\"\r\n                               [regErrorMessage]=\"configErrorMessage\"\r\n                               [storyInputs]=\"storyInputsInOrder\"\r\n                               [mForm]=\"configurationForm\"\r\n                               (saveChanges)=\"onSubmit()\"\r\n                               (clickXButton)=\"returnPortal()\"\r\n                               (onLogout)=\"doLogout()\"\r\n                               (changePassword)=\"openChangePassword()\">\r\n</storybook-configuration-form>\r\n\r\n\r\n","<storybook-background1></storybook-background1>\r\n\r\n<storybook-configuration-form>\r\n\r\n</storybook-configuration-form>\r\n\r\n<div class=\"container\">\r\n\r\n  <header class=\"jumbotron\">\r\n    <p>{{ content }}</p>\r\n  </header>\r\n\r\n\r\n  <!--storybook-card-rugged  ></storybook-card-rugged-->\r\n    <div class=\"col-md-12\">\r\n\r\n      <!--div class=\"card\"-->\r\n\r\n\r\n      <form\r\n        *ngIf=\"!isSuccessful\"\r\n        name=\"form\"\r\n        (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n        #f=\"ngForm\"\r\n        novalidate\r\n        style=\"bottom: 2px;\"\r\n      >\r\n        <div class=\"form-group input-box\">\r\n          <label for=\"userName\" class=\"input-label\">Time for password to be expired </label>\r\n\r\n          <input type=\"number\" style=\"width: 70px;\" class=\"form-control input-field\" name=\"userName\" [(ngModel)]=\"form.userName\"\r\n                 required minlength=\"3\" maxlength=\"20\" #userName=\"ngModel\"/>\r\n          <div class=\"alert-danger\" *ngIf=\"userName.errors && f.submitted\">\r\n            <div *ngIf=\"userName.errors.required\">Username is required</div>\r\n            <div *ngIf=\"userName.errors.minlength\">\r\n              Username must be at least 3 characters\r\n            </div>\r\n            <div *ngIf=\"userName.errors.maxlength\">\r\n              Username must be at most 20 characters\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group input-box\">\r\n          <label for=\"email\" class=\"input-label\">Alert duration before for pass expired</label>\r\n          <input type=\"number\" class=\"form-control input-field\" name=\"email\" [(ngModel)]=\"form.email\"\r\n                 required email #email=\"ngModel\"/>\r\n          <div class=\"alert-danger\" *ngIf=\"email.errors && f.submitted\">\r\n            <div *ngIf=\"email.errors.required\">Email is required</div>\r\n            <div *ngIf=\"email.errors.email\">\r\n              Email must be a valid email address\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group input-box\">\r\n          <label for=\"password\" class=\"input-label\">Password</label>\r\n          <input type=\"password\" class=\"form-control input-field\" name=\"password\" [(ngModel)]=\"form.password\"\r\n                 required minlength=\"6\" #password=\"ngModel\"/>\r\n          <div class=\"alert-danger\" *ngIf=\"password.errors && f.submitted\">\r\n            <div *ngIf=\"password.errors.required\">Password is required</div>\r\n            <div *ngIf=\"password.errors.minlength\">\r\n              Password must be at least 6 characters\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group input-box\">\r\n          <label for=\"privilege\" class=\"input-label\">Privilege Level</label>\r\n          <select type=\"privilege\" class=\"form-control  input-field\" name=\"privilege\" id=\"pet-select\"\r\n                  [(ngModel)]=\"form.roles\" required #roles=\"ngModel\">\r\n            <option value=\"\">--Please choose an option--</option>\r\n            <option value=\"admin\">Admin</option>\r\n            <option value=\"mod\">Moderator</option>\r\n            <option value=\"user\">User</option>\r\n          </select>\r\n        </div>\r\n        <br>\r\n        <div class=\"form-group\" style=\"position: static; display: flex; justify-content: center;\">\r\n          <button class=\"btn btn-primary btn-block save-changes-button \">Save Changes</button>\r\n        </div>\r\n\r\n        <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\r\n          Signup failed!<br />{{ errorMessage }}\r\n        </div>\r\n      </form>\r\n\r\n      <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\r\n        Your registration is successful!\r\n      </div>\r\n\r\n    </div>\r\n  <!--/div-->\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/_services/user.service';\r\nimport {AuthService} from \"src/app/_services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-board-admin',\r\n  templateUrl: './board-admin.component.html',\r\n  styleUrls: ['./board-admin.component.css']\r\n})\r\nexport class BoardAdminComponent implements OnInit {\r\n  content?: string;\r\n  form: any = {\r\n    username: null,\r\n    email: null/*new FormControl('', Validators.email)*/,\r\n    password: null,\r\n    roles: null,\r\n  };\r\n  isSuccessful = false;\r\n  isSignUpFailed = false;\r\n  errorMessage = '';\r\n  rolesList: Array<String> = [];\r\n\r\n  constructor(private userService: UserService, private authService: AuthService) {\r\n\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getAdminBoard().subscribe(\r\n      data => {\r\n        this.content = data;\r\n      },\r\n      err => {\r\n        this.content = JSON.parse(err.error).message;\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const { username, email, password, roles } = this.form;\r\n    this.rolesList.push(roles);\r\n\r\n    this.authService.register(username, email, password, this.rolesList).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.isSuccessful = true;\r\n        this.isSignUpFailed = false;\r\n      },\r\n      err => {\r\n        this.errorMessage = err.error.message;\r\n        this.isSignUpFailed = true;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-board-moderator',\r\n  templateUrl: './board-moderator.component.html',\r\n  styleUrls: ['./board-moderator.component.css']\r\n})\r\nexport class BoardModeratorComponent implements OnInit {\r\n  content?: string;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getModeratorBoard().subscribe(\r\n      data => {\r\n        this.content = data;\r\n      },\r\n      err => {\r\n        this.content = JSON.parse(err.error).message;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <header class=\"jumbotron\">\r\n    <p>{{ content }}</p>\r\n  </header>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/_services/user.service';\r\nimport { EventBusService } from 'src/app/_shared/event-bus.service';\r\nimport { EventData } from 'src/app/_shared/event.class';\r\n\r\n@Component({\r\n  selector: 'app-board-user',\r\n  templateUrl: './board-user.component.html',\r\n  styleUrls: ['./board-user.component.css']\r\n})\r\nexport class BoardUserComponent implements OnInit {\r\n  content?: string;\r\n\r\n  constructor(private userService: UserService, private eventBusService: EventBusService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getUserBoard().subscribe(\r\n      data => {\r\n        this.content = data;\r\n      },\r\n      err => {\r\n        this.content = err.error.message || err.error || err.message;\r\n        if (err.status === 403)\r\n          this.eventBusService.emit(new EventData('logout', null));\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <br>\r\n  <header class=\"background jumbotron  \">\r\n    <h1 class=\"font_0\">\r\n      <span class=\"\" style=\"font-size:44px;\">\r\n        <span>{{ content }}</span>\r\n      </span>\r\n    </h1>\r\n  </header>\r\n\r\n  <embed type=\"text/html\" src=\"https://www.tadirantele.com/\" height=\"300px\" width=\"100%\" >\r\n\r\n  <h2>Iframe - Target for a Link</h2>\r\n.\r\n  <iframe src=\"https://localhost:8445/accRealTime\" sandbox=\"allow-top-navigation-by-user-activation allow-same-origin allow-scripts allow-popups allow-forms\"  name=\"iframe_a\" height=\"300px\" width=\"100%\" title=\"Iframe Example\">\r\n  </iframe>\r\n\r\n\r\n\r\n\r\n  <p><a href=\"https://172.28.8.245:8443/aeonix/mainForm.jsf\" target=\"iframe_a\">aeonix</a></p>\r\n  <p><a href=\"https://en.wikipedia.org/wiki/Avocado\" id=\"testid\" target=\"iframe_a\">wikipedia</a></p>\r\n  <p><a href=\"https://172.28.1.130:8445/accRealTime\" target=\"iframe_a\">accRealTime</a></p>\r\n  <p>When the target attribute of a link matches the name of an iframe, the link will open in the iframe.</p>\r\n\r\n    <!--iframe src=\"https://172.28.1.130:8445/accRealTime\" name=\"iframe_a\" height=\"300px\" width=\"100%\" title=\"Iframe Example\">\r\n  </iframe-->\r\n</div>\r\n","import {Component, ElementRef, EventEmitter, Inject, OnInit, Output, Renderer2, ViewChild} from '@angular/core';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {PasswordValidators} from \"../../login-main/replace-pass-form2/replace-pass-form2.component\";\r\nimport MyAccountFormComponent from \"src/stories/forms/my-account-form/my-account-form.component\";\r\nimport {AccountInput} from \"src/stories/inputs/account-input/account-input.model\";\r\nimport * as mAccountInput from \"src/stories/inputs/account-input/account-input.stories\";\r\nimport {EventData} from \"src/app/_shared/event.class\";\r\nimport {EventBusService} from \"src/app/_shared/event-bus.service\";\r\nimport {throwError} from \"rxjs\";\r\nimport {TokenStorageService} from \"src/app/_services/token-storage.service\";\r\nimport {UserService} from \"src/app/_services/user.service\";\r\nimport {Prop} from \"../board-admin2/board-admin2.component\";\r\nimport {toArray} from \"rxjs/operators\";\r\n\r\n\r\n\r\n\r\nexport class Detail {\r\n  constructor(detailName: any, detailValue: any) {\r\n  this.detailName = detailName;\r\n  this.detailValue = detailValue;\r\n  }\r\n\r\n  detailName: string= '';\r\n  detailValue: string= '';\r\n\r\n  Detail(detailName: string , detailValue: string) {\r\n    this.detailName = detailName;\r\n    this.detailValue = detailValue;\r\n  }\r\n\r\n  getDetailName(): string {\r\n    return this.detailName;\r\n  }\r\n\r\n}\r\n\r\nexport interface MyAccountData {\r\n  currentUser: any;\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'my-account-form2',\r\n  templateUrl: './my-account-form2.component.html',\r\n  styleUrls: ['./my-account-form2.component.css']\r\n})\r\nexport default class MyAccountForm2Component implements OnInit {\r\n  myAccountForm: FormGroup;\r\n  isSaveDetailSuccess = false;\r\n  isSaveDetailFailed = false;\r\n  isLoading = false;\r\n  saveDetailErrorMessage: any;\r\n  empList: Array<String> = [];\r\n  apiResponse = { message: '', error: false };\r\n  @ViewChild('form', { static: false }) form?: ElementRef;\r\n  @ViewChild('username', { static: false }) userField?: ElementRef;\r\n  errorFieldSubmitted: any = {};\r\n  accountDetails: any;\r\n  closeResult = '';\r\n\r\n\r\n  details: Array<Detail>= [];\r\n\r\n\r\n  @Output() validateMail: EventEmitter<String> = new EventEmitter();\r\n\r\n  storyInputsInOrder: AccountInput[]  = [\r\n    {...mAccountInput.Username.args?.['storyInput'], id: '1', title: this.data.currentUser.username  },\r\n    {...mAccountInput.Phone.args?.['storyInput'], id: '2'},\r\n    {...mAccountInput.Email.args?.['storyInput'], id: '3'   },\r\n    {...mAccountInput.Password.args?.['storyInput'], id: '4' },\r\n  ];\r\n\r\n  constructor(private eventBusService: EventBusService,\r\n              private token: TokenStorageService,\r\n              private authService: AuthService,\r\n              private tokenStorageService: TokenStorageService,\r\n              private renderer: Renderer2,\r\n              public dialogRef: MatDialogRef<MyAccountFormComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: MyAccountData) {\r\n    this.myAccountForm = new FormGroup({\r\n      username: new FormControl(''),\r\n      phone: new FormControl('', PasswordValidators.patternValidator(new RegExp(\"(?=.*[0-9 ]{8})\"), {requiresPhoneChars: true})),\r\n      email: new FormControl('', Validators.email),\r\n    });/*Validators.pattern(new RegExp(\"[0-9 ]{12}\")*/\r\n    this.empList.push(\"admin\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAccountDetails();\r\n  }\r\n\r\n  getAccountDetails(): void {\r\n\r\n    const username = this.token.getUser().username;\r\n    if (username)\r\n      this.isLoading = true;\r\n      this.authService.getAccountDetails(username).subscribe(accountDetails => {\r\n        this.accountDetails=(accountDetails);\r\n        this.details.push(new  Detail('username', accountDetails.username)); //setUsername(accountDetails.username);\r\n        this.details.push(new  Detail('email', accountDetails.email)); //this.setEmail(accountDetails.email);\r\n        this.details.push(new  Detail('phone', accountDetails.phone)); //this.setPhone(accountDetails.phone);\r\n\r\n\r\n        this.details.forEach(d => {console.log(\"detail: \" + d.detailName);});\r\n        this.details.forEach((d ) => {\r\n\r\n          let accountInput = this.storyInputsInOrder.find(accountInput => accountInput.type.match(d.detailName.valueOf().toString()));\r\n          if (accountInput != null) {\r\n            let dn = d.detailName.replace(/\\./gi,'_');\r\n            this.myAccountForm.get(accountInput.name)?.setValue(d.detailValue);\r\n            console.log(\"detailValue:   \"+d.detailValue);\r\n          }\r\n          //let prop: new Prop\r\n        });\r\n        console.log('Account Details is received from server.');\r\n        this.isLoading = false;\r\n      }, (err) => {\r\n        console.log('Can not get user account details');\r\n        this.isLoading = false;\r\n        return throwError(err);\r\n      }, () => {this.isLoading = false;});\r\n\r\n  }\r\n\r\n  doLogout(): void {\r\n    console.log(\"logging out\")\r\n    this.eventBusService.emit(new EventData('logout', null));\r\n  }\r\n\r\n  openChangePassword() {\r\n    this.eventBusService.emit(new EventData('openChangePassword', null));\r\n  }\r\n\r\n  openUser() {\r\n    this.eventBusService.emit(new EventData('openConfiguration', null));\r\n    this.dialogRef.close('Open Configuration Tools');\r\n  }\r\n\r\n  displayConfigButton(): boolean {\r\n    return this.tokenStorageService.isSupervisorAdmin();\r\n  }\r\n\r\n  saveDetail(accountInputName: string): void {\r\n    if (this.isLoading) {\r\n      //todo: Display confirmation message - wait for previous changing for being save!\r\n    } else {\r\n      this.isLoading = true;\r\n      let changedDetails: Array<Detail> = [];\r\n\r\n      let detailInput = this.storyInputsInOrder.find(detailInput => detailInput.name.match(accountInputName));\r\n      if (detailInput != null) {\r\n        changedDetails.push(new Detail(accountInputName,this.myAccountForm.get(accountInputName)?.value));\r\n      }\r\n\r\n      this.authService.setAccountDetails(JSON.stringify(changedDetails)).subscribe(\r\n        data => {\r\n          console.log(data);\r\n          this.isSaveDetailSuccess = true;\r\n          this.isSaveDetailFailed = false;\r\n          this.apiResponse.error = false;\r\n          this.saveDetailErrorMessage = JSON.parse(data.message.toString().replace(/\\[/gi,'').replace(/]/gi,''));\r\n          this.apiResponse.message = 'Successful Detail Saving';\r\n        },\r\n        error => {\r\n          const errorResponse = JSON.parse(error.error);\r\n          this.apiResponse.error = true;\r\n          this.apiResponse.message = 'Detail Saving error';\r\n          this.saveDetailErrorMessage = errorResponse;\r\n          this.isSaveDetailFailed = true;\r\n          this.isLoading = false;\r\n        },\r\n        () => {\r\n          this.isLoading = false;\r\n          console.log(\"Detail Saved\");\r\n        }\r\n      );\r\n\r\n\r\n    }\r\n  }\r\n\r\n  get username(): AbstractControl {\r\n    return this.myAccountForm.get('username')!;\r\n  }\r\n\r\n\r\n  setUsername(name: string): void {\r\n    this.myAccountForm.get('username')?.setValue(name)!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.myAccountForm.get('email')!;\r\n  }\r\n\r\n  setEmail(email: string): void {\r\n    return this.myAccountForm.get('email')?.setValue(email);\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.myAccountForm.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.myAccountForm.get('phone')!;\r\n  }\r\n\r\n  setPhone(phone: string): void {\r\n    return this.myAccountForm.get('phone')?.setValue(phone);\r\n  }\r\n\r\n}\r\n","\r\n<storybook-my-account-form #form\r\n  [isRegSuccess]=\"isSaveDetailSuccess\"\r\n  [isRegFailed]=\"isSaveDetailFailed\"\r\n  [regErrorMessage]=\"saveDetailErrorMessage\"\r\n  [storyInputs]=\"storyInputsInOrder\"\r\n  [displayToolButton]=\"displayConfigButton()\"\r\n  [mForm]=\"myAccountForm\"\r\n  [isLoading]=\"isLoading\"\r\n  (onSaveChanges)=\"saveDetail($event)\"\r\n  (clickXButton)=\"this.dialogRef.close('xbutton')\"\r\n  (onLogout)=\"doLogout()\"\r\n  (changePassword)=\"openChangePassword()\"\r\n  (openUser)=\"openUser()\"\r\n></storybook-my-account-form>\r\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"src/app/_services/auth.service\";\nimport {TokenStorageService} from \"src/app/_services/token-storage.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {AppConfig, workingModeConfiguration} from \"src/app/app.config\";\nimport {BehaviorSubject, Subscription, throwError} from \"rxjs\";\nimport {UserService} from \"src/app/_services/user.service\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {ReplacePassForm2Component} from  \"src/app/login2/login-main/replace-pass-form2/replace-pass-form2.component\";\nimport {EventBusService} from \"src/app/_shared/event-bus.service\";\nimport MyAccountForm2Component from \"../my-account-form2/my-account-form2.component\";\nimport VerificationForm2Component from \"../../login-main/verification-form2/verification-form2.component\";\nimport {EventData} from \"src/app/_shared/event.class\";\n\n\n\n\nexport interface DialogData {\n  username: string;\n  password: string;\n}\n\n\n\n@Component({\n  selector: 'profile2',\n  templateUrl: './portal.component.html',\n  styleUrls: ['./portal.component.scss']\n})\nexport default class PortalComponent implements OnInit {\n\n  currentUser: any;\n  accessToken: any;\n  refreshToken: any;\n  windowObjectReference: any;\n  refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n  public isLoading = false;\n  public appConfig: any;\n  private TOKEN_KEY: string;\n  eventBusSub?: Subscription;\n  permittedWebAppList = {\n    realtime: false,\n    scriptDesigner: false,\n    agent: false,\n    aeonixAdmin: false,\n    admin: false\n  };\n\n\n  isNotify(): boolean {\n   return (this.passExp < this.previousAlertPassExp);\n  }\n\n\n  constructor(private authService: AuthService,\n              private userService: UserService,\n              private token: TokenStorageService,\n              private eventBusService: EventBusService,\n              private router: Router,\n              private activatedRoute:ActivatedRoute,\n              public myAccountFormDialog: MatDialog,\n              public replacePassFormDialog: MatDialog,\n              public verificationFormDialog: MatDialog) {\n    this.TOKEN_KEY = AppConfig.endpoints.TOKEN_KEY;\n  }\n\n\n  openMyAccountForm() {\n    const myAccountFormDialogRef = this.myAccountFormDialog.open(MyAccountForm2Component, {\n      data: {currentUser: this.currentUser},\n    });\n\n    myAccountFormDialogRef.afterClosed().subscribe(result => {\n      console.log('The register form dialog was closed');\n    });\n\n    return myAccountFormDialogRef.afterClosed().toPromise();\n  }\n\n  openReplacePassForm() {\n    const replacePassFormDialogRef = this.replacePassFormDialog.open(ReplacePassForm2Component, {\n      data: {username: this.currentUser.username , password: ''},\n    });\n\n    replacePassFormDialogRef.beforeClosed().subscribe(result => {\n        console.log('The replace password form dialog before closed');\n      },\n      err => {\n        console.log(err.error.message);\n      });\n\n\n    replacePassFormDialogRef.afterClosed().subscribe(result => {\n      console.log('The replace password form dialog after closed');\n      if (result.message === 'Replace Password Complete') {\n        console.log('Replace Password Complete');\n        this.setPassExpAlertData();\n      }\n    });\n\n    return replacePassFormDialogRef.afterClosed().toPromise();\n  }\n\n  openVerificationForm() {\n    const verificationFormDialogRef = this.verificationFormDialog.open(VerificationForm2Component, {\n      data: {username: this.currentUser.username , email: this.currentUser.email},\n    });\n\n    verificationFormDialogRef.afterClosed().subscribe(result => {\n      console.log('The register form dialog was closed');\n    });\n\n    return verificationFormDialogRef.afterClosed().toPromise();\n  }\n\n\n\n  public passExp: number = 0; // By Days\n  public previousAlertPassExp: number = 0; // By Days\n\n\n  ngOnInit(): void {\n    this.currentUser = this.token.getUser();\n    this.accessToken = this.currentUser.accessToken;\n    this.refreshToken = this.currentUser.refreshToken;\n    this.setPassExpAlertData();\n    this.setPermittedWebAppList();\n    this.is2SVRequired();\n\n    this.eventBusSub = this.eventBusService.on('openChangePassword', () => {\n      this.openReplacePassForm();\n    });\n\n    this.eventBusSub = this.eventBusService.on('openVerification', () => {\n      this.openVerificationForm();\n    });\n\n    this.eventBusSub = this.eventBusService.on('openConfiguration', () => {\n      this.configuratin();\n    });\n\n    this.eventBusSub = this.eventBusService.on('openPortal', () => {\n      this.portal();\n    });\n\n  }\n\n  is2SVRequired() {\n    this.eventBusService.emit(new EventData('is2SVRequired', null));\n  }\n\n  setPassExpAlertData(): void {\n\n    const token = this.token.getToken();\n    if (token)\n      this.authService.getPassExpireDate(token).subscribe(data => {\n        this.passExp = data.passExp;\n        this.previousAlertPassExp = data.previousAlertPassExp;\n        console.log('Password Expire Date: '+this.passExp);\n        console.log('previous Alert To Password Expire Date: '+this.previousAlertPassExp);\n      }, (err) => {\n        console.log('Password Expire Date: update failed');\n        return throwError(err);\n      });\n\n  }\n\n  setPermittedWebAppList(): void {\n    const token = this.token.getToken();\n    if (token)\n      this.authService.getPermittedWebAppList(token).subscribe(permittedWebAppList => {\n        this.permittedWebAppList=(permittedWebAppList);\n        console.log('Permitted web apps list is received from server.');\n      }, (err) => {\n        console.log('Can not get server data defining permitted web apps for user');\n        return throwError(err);\n      });\n  }\n\n  openapp(): void {\n    console.log('window.location.origin.toString():  '+window.location.origin.toString());\n\n    this.router.navigate([]).then(result => { this.windowObjectReference = window.open(AppConfig.accServer.ACCWEBServers+'/accGCCS/'/*window.location.origin.toString()+\"/profile\"*/); });\n    console.log('window.location.origin.toString():  '+ this.windowObjectReference.window.document.getElementById(\"profile_title\").innerHTML);\n    var promise = new Promise((resolve, reject) => {this.windowObjectReference.window.document.getElementById(\"profile_title\").innerHTML = \"new title\";});\n\n    console.log('window.location.origin.toString():  '+ this.windowObjectReference.window.document.getElementById(\"profile_title\").innerHTML);\n\n  }\n\n  public forseRefreshToken(): void {\n\n    if (!this.isLoading) {\n      this.isLoading = true;\n      const token = this.token.getRefreshToken();\n      if (token)\n        this.authService.refreshToken(token).subscribe(\n          data => {\n            this.isLoading = false;\n            this.token.saveToken(data.accessToken);\n            this.token.saveRefreshToken(data.refreshToken);\n            this.refreshTokenSubject.next(data.accessToken);\n            this.currentUser = this.token.getUser();\n            this.accessToken = this.token.getToken();\n            this.refreshToken = this.token.getRefreshToken();\n          },\n          (err) => {\n            this.isLoading = false;\n\n            this.token.signOut();\n            return throwError(err);\n          }\n        );\n    }\n  }\n\n  public async openNewTabForApp(appRequest: string[]) {\n    const [webapp, webappURLPrefix] = appRequest.values();\n    var newAccessToken = \"\";\n    var newRefreshToken = \"\";\n    var newCurrentUser = \"\";\n\n\n    if (!this.isLoading) {\n      const token = this.token.getRefreshToken();\n      if (token) {\n\n        //const timeout = new Promise((res) => setTimeout(() => res(\"openNewTabForApp - timeout!\"), 5000));\n        const timeout = (prom: Promise<any>, time: number, exception: Symbol) => {\n          let timer: any;\n          return Promise.race([\n            prom,\n            new Promise((_r, rej) => timer = setTimeout(rej, time, exception))\n          ]).finally(() => clearTimeout(timer));\n        }\n\n\n        const promise = async () => {\n          new Promise<any>((resolve, reject) => {\n            console.log('Spinner Start.');\n            this.isLoading = true;\n            return this.authService.webapptab(token, webapp).toPromise()\n              .then((val: any) => {\n                console.log('Request approved by the server.');\n                newAccessToken = (val.accessToken);\n                newRefreshToken = (val.refreshToken);\n                newCurrentUser = (val);\n              })\n              .then((result) => {\n                  this.router.navigate([])\n                    .then(result => {\n                      this.windowObjectReference = window.open(AppConfig.accServer.ACCWEBServers + webappURLPrefix);\n                    })\n                    .then((result) => {\n                        console.log('Plant the secret ingredient.');\n                        this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.TOKEN_KEY, newAccessToken);\n                        this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.REFRESHTOKEN_KEY, newRefreshToken);\n                        this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.USER_KEY, JSON.stringify(newCurrentUser));\n                      },\n                      (err) => {\n                        console.log('failed loading the app webpage.');\n                        reject(throwError(err));\n                      })\n                },\n                (err) => {\n                  console.log('cant get a server request appropriate response for opening this webpage ')\n                  reject(throwError(err));\n                })\n              .then(() => {\n                  console.log('Spinner Stop.');\n                  this.isLoading = false;\n                  resolve(\"Success\");\n                },\n                (err) => {reject(throwError(err))});\n\n          });\n        }\n\n        const timeoutError = Symbol();\n        try {\n\n          await timeout(promise(), 5000, timeoutError)\n            .then(() => {\n              this.isLoading = false;\n              console.log('openNewTabForApp: open tab app successfully finished');\n            });\n        }catch (e) {\n          if (e === timeoutError) {\n            // handle timeout\n            console.log('timeoutError: '+e.error);\n          }else {\n            // other error\n            console.log('Error: '+e.error);\n            throw e;\n          }\n        }\n\n      }\n    }\n  }\n\n  public async openNewWinForApp(appRequest: string[]) {\n    const [webapp, webappURLPrefix] = appRequest.values();\n    var newAccessToken = \"\";\n    var newRefreshToken = \"\";\n    var newCurrentUser = \"\";\n\n\n    if (!this.isLoading) {\n      const token = this.token.getRefreshToken();\n      if (token) {\n\n\n        const timeout = (prom: Promise<any>, time: number, exception: Symbol) => {\n          let timer: any;\n          return Promise.race([\n            prom,\n            new Promise((_r, rej) => timer = setTimeout(rej, time, exception))\n          ]).finally(() => clearTimeout(timer));\n        }\n\n\n        const promise = async () => {\n          new Promise<any>((resolve, reject) => {\n            console.log('Spinner Start.');\n            this.isLoading = true;\n            return this.authService.webapptab(token, webapp).toPromise()\n              .then((val: any) => {\n                console.log('Request approved by the server.');\n                newAccessToken = (val.accessToken);\n                newRefreshToken = (val.refreshToken);\n                newCurrentUser = (val);\n              })\n              .then((result) => {\n                  console.log('Opening new tab/win for the requested page.');\n                  this.router.navigate([])\n                    .then(result => {\n                      console.log('Insert url and loading the page.');\n                      this.windowObjectReference = window.open(AppConfig.accServer.ACCWEBServers+webappURLPrefix+'start.html',\n                        'C-Sharpcorner', 'scrollbars=no');\n                    })\n                    .then((result) => {\n                        console.log('Plant the secret ingredient.');\n                        this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.TOKEN_KEY, newAccessToken);\n                        this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.REFRESHTOKEN_KEY, newRefreshToken);\n                        this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.USER_KEY, JSON.stringify(newCurrentUser));\n                      },\n                      (err) => {\n                        console.log('failed loading the app webpage.');\n                        reject(throwError(err));\n                      })\n                },\n                (err) => {\n                  console.log('cant get a server request appropriate response for opening this webpage ')\n                  reject(throwError(err));\n                })\n              .then(() => {\n                  console.log('Spinner Stop.');\n                  this.isLoading = false;\n                  resolve(\"Success\");\n                },\n                (err) => {reject(throwError(err))});\n          });\n        }\n\n\n        const timeoutError = Symbol();\n        try {\n          await timeout(promise(), 5000, timeoutError)\n        }catch (e) {\n          if (e === timeoutError) {\n            // handle timeout\n            console.log('timeoutError: ' + e.error);\n          } else {\n            // other error\n            console.log('Error: ' + e.error);\n            throw e;\n          }\n        }finally {\n          console.log('openNewTabForApp: open tab app successfully finished');\n        }\n\n\n\n      }\n    }\n  }\n\n  /*public openNewWinForApp(appRequest: string[]): void {\n    //webapp: string, webappURLPrefix: string\n    const [ webapp, webappURLPrefix ] = appRequest.values();\n    var newAccessToken = \"\";\n    var newRefreshToken = \"\";\n    var newCurrentUser = \"\";\n\n    if (!this.isLoading) {\n      this.isLoading = true;\n      const token = this.token.getRefreshToken();\n      if (token)\n        this.authService.webapptab(token, webapp)\n          .subscribe(\n            data => {\n              let promise = new Promise<void>((resolve, reject) => {\n                newAccessToken = (data.accessToken);\n                newRefreshToken = (data.refreshToken);\n                newCurrentUser = (data);\n                setTimeout(() => {\n                  console.log(\"Failed open new window\");\n                  resolve();//() => {resolve();}\n                }, 5000);\n              })\n              promise.then(result => { this.windowObjectReference = window.open(AppConfig.accServer.ACCWEBServers+webappURLPrefix+'start.html',\n                  'C-Sharpcorner', 'scrollbars=no');})\n                .then(result => { this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.TOKEN_KEY, newAccessToken);\n                    this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.REFRESHTOKEN_KEY, newRefreshToken);\n                    this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.USER_KEY, JSON.stringify(newCurrentUser));},\n            (err) => { this.isLoading = false;\n              return throwError(err);})\n    },\n    (error) => {\n              this.isLoading = false;\n              return throwError(error.error);\n            }, () => {this.isLoading = false;})\n    }\n  }*/\n\n  configuratin(): void {\n    this.router.navigate(['../admin2'], {relativeTo: this.activatedRoute});\n  }\n\n  portal(): void {\n    console.log(this.activatedRoute.toString())\n    this.router.navigate(['../'], {relativeTo: this.activatedRoute});\n  }\n\n\n}\n\n","<html>\r\n<head>\r\n  <style>\r\n\r\n  </style>\r\n  <title></title>\r\n</head>\r\n<body>\r\n<storybook-background1></storybook-background1>\r\n\r\n<!--button mat-raised-button (click)=\"openVerificationForm()\">VerificationForm</button>\r\n<button mat-raised-button (click)=\"forseRefreshToken()\">forseRefreshToken</button>\r\n<button mat-raised-button (click)=\"is2SVRequired()\">is2SVRequired</button-->\r\n<!--button mat-raised-button (click)=\"setPassExpAlertData()\">setPassExpAlertData</button-->\r\n\r\n\r\n\r\n<storybook-avatar\r\n  id=\"avatar\"\r\n  [label]=\"this.currentUser.username\"\r\n  [isNotify]=\"this.isNotify()\"\r\n  header=\"{{'Your password will expire in ' + this.passExp +' Days.'}}\"\r\n  (actionButton)=\"openReplacePassForm()\"\r\n  (click)=\"this.openMyAccountForm()\">\r\n</storybook-avatar>\r\n\r\n<!--this.setPassExpAlertData() -->\r\n\r\n\r\n<storybook-app-menu\r\n  [profileApps]=\"permittedWebAppList\"\r\n  [isLoading]=\"isLoading\"\r\n  (openNewWinForApp)=\"openNewWinForApp($event)\"\r\n  (openNewTabForApp)=\"openNewTabForApp($event)\">\r\n</storybook-app-menu>\r\n\r\n</body>\r\n</html>\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport PortalComponent from \"./portal/portal.component\";\nimport {AppRoutingGuard} from \"../../app-routing.guard\";\nimport {BoardUserComponent} from \"./board-user/board-user.component\";\nimport {BoardModeratorComponent} from \"./board-moderator/board-moderator.component\";\nimport {BoardAdminComponent} from \"./board-admin/board-admin.component\";\nimport {BoardAdmin2Component} from \"./board-admin2/board-admin2.component\";\n\n\n\n\n\n\n\nconst routes: Routes = [\n  { path: 'user', component: BoardUserComponent },\n  { path: 'mod', component: BoardModeratorComponent },\n  { path: 'admin', component: BoardAdminComponent },\n  { path: 'admin2', component: BoardAdmin2Component },\n  { path: 'profile2', component: PortalComponent, canActivate: [AppRoutingGuard] },\n  { path: '', redirectTo: 'profile2', pathMatch: 'full' },/**/\n  { path: '**', redirectTo: 'profile2', },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class Profile2RoutingModule { }\n","import { NgModule } from '@angular/core';\n\nimport { Profile2RoutingModule } from './profile2-routing.module';\nimport PortalComponent from './portal/portal.component';\nimport {StorybookModule} from \"src/app/storybook/storybook.module\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport MyAccountForm2Component from \"./my-account-form2/my-account-form2.component\";\nimport { BoardUserComponent } from './board-user/board-user.component';\nimport { BoardAdminComponent } from './board-admin/board-admin.component';\nimport { BoardAdmin2Component } from './board-admin2/board-admin2.component';\nimport { BoardModeratorComponent } from './board-moderator/board-moderator.component';\n\n\n\n@NgModule({\n  declarations: [\n    PortalComponent,\n    MyAccountForm2Component,\n    BoardUserComponent, BoardAdminComponent, BoardModeratorComponent, BoardAdmin2Component\n  ],\n  imports: [\n    Profile2RoutingModule,\n    StorybookModule,\n    MatDialogModule,\n    MatButtonModule,\n  ],\n  exports: [\n    PortalComponent,\n    MyAccountForm2Component\n  ],\n  bootstrap: []\n})\nexport class Profile2Module { }\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'apiErrorMessage'\r\n})\r\nexport class ApiErrorMessagePipe implements PipeTransform {\r\n\r\n  transform(message: string, ...args: unknown[]): unknown {\r\n    const dataToArray = message.split(',').map(item => item.trim());\r\n    // convert array to string replacing comma with new line\r\n    return dataToArray.join('\\n');\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'loginErrorMessage'\r\n})\r\nexport class LoginErrorMessagePipe implements PipeTransform {\r\n\r\n  transform(message: string, ...args: unknown[]): unknown {\r\n    const dataToArray = message.split(',').map(item => item.trim());\r\n    // convert array to string replacing comma with new line\r\n    return dataToArray.join('\\n');\r\n  }\r\n\r\n}\r\n","import {Injectable, Pipe, PipeTransform} from '@angular/core';\r\nimport {ApiErrorMessageService} from \"./api-error-message.service\";\r\n\r\n@Pipe({\r\n  name: 'apiErrorMessage',\r\n  pure: false,\r\n})\r\nexport class ApiErrorMessagePipe implements PipeTransform {\r\n    constructor(private apiErrorMessageService: ApiErrorMessageService) {}\r\n\r\n    transform(value: any, args?: any): any {\r\n      this.apiErrorMessageService.language = args.language;\r\n      return this.apiErrorMessageService.apiErrorMessage(value)    }\r\n\r\n/*    transform(message: string, ...args: unknown[]): unknown {\r\n      const dataToArray = message.split(',').map(item => {item.trim();\r\n        console.log('ApiErrorMessagePipe: '+item.toString() +'   '+ item.trim().toString());\r\n      });\r\n\r\n      // convert array to string replacing comma with new line\r\n      return dataToArray.join('\\n');\r\n    }\r\n*/\r\n}\r\n\r\n\r\n\r\n","import {Injectable} from \"@angular/core\";\r\nimport {first} from \"rxjs/operators\";\r\n\r\n\r\n@Injectable()\r\nexport class ApiErrorMessageService {\r\n  public languages = ['login-main', 'eng']\r\n\r\n  public language  = 'login-main'\r\n\r\n  private dictionary: { [key: string]: TranslationSet } = {\r\n    'login-main': {\r\n      languange: 'login-main',\r\n      values: {\r\n        \"example\": \"Beispiel\",\r\n        \"must be a well-formed email address\": \"must be a well-formed email address\",\r\n        \"Error: A registry process should be made!\": \"Error: A registry process should be made!\",\r\n        \"Error: A registry process un valid!\": \"Incorrect user name\",\r\n        \"VALIDATION_FAILED\": \"A registry process un valid!\",\r\n        \"Bad credentials\": \"Incorrect user name or password\",\r\n        \"Password matches one of %1$s previous passwords.\": \"Try again with a password you haven’t used before\",\r\n        \"Passwords do not match!\": \"Passwords do not match!\",\r\n        \"Error: Email is already in use!\": \"Email is already in use!\",\r\n        \"Error: Invalidate Pin-Code! User Not Approved\": \"The Verification Code does not match\",\r\n        \"Error: Unable to save your changes\": \"Unable to save your changes\",\r\n        \"User account is locked\": \"Your account has been locked\",\r\n        \"Details Saved\": \"Your account has been locked\",\r\n      },\r\n    },\r\n    eng: {\r\n      languange: 'eng',\r\n      values: {\r\n        \"example\": \"Example\",\r\n      },\r\n    },\r\n\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  apiErrorMessage(key: string): any {\r\n    if (this.dictionary[this.language ] != null) {\r\n      return this.dictionary[this.language ].values[key];\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport class TranslationSet {\r\n  public languange?: any;\r\n  public values: { [key: string]: any } = {}\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n//import { BrowserModule } from '@angular/platform-browser';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n\nimport {ButtonLanguageComponent} from \"../../stories/buttons/button-language/button-language.component\";\nimport {ButtonFortestComponent} from '../../stories/buttons/button-fortest/button-fortest.component';\nimport {ButtonGlobeComponent} from \"../../stories/buttons/button-globe/button-globe.component\";\nimport Background1Component from \"../../stories/pages/background1/background1Component\";\nimport {ButtonTadiranComponent} from \"../../stories/buttons/button-tadiran/button-tadiran.component\";\nimport CardComponent from \"../../stories/cards/card/card.component\";\nimport CardRuggedComponent from \"../../stories/cards/card-rugged/card-rugged.component\";\nimport LoginFormComponent from \"../../stories/forms/login-form/login-form.component\";\nimport RegistryFormComponent from \"../../stories/forms/registry-form/registry-form.component\";\nimport {ButtonContinueComponent} from \"../../stories/buttons/button-continue/button-continue.component\";\nimport {ButtonExComponent} from \"../../stories/buttons/button-ex/button-ex.component\";\nimport {ButtonAppsComponent} from \"../../stories/buttons/button-apps/button-apps.component\";\nimport {ButtonSuccessfullyComponent} from \"../../stories/buttons/button-successfully/button-successfully.component\";\nimport Button from \"../../stories/buttons/button-example/button.component\";\nimport {AppMenuComponent} from \"../../stories/app-menu/app-menu.component\";\nimport {StoryInputComponent} from \"../../stories/inputs/input/story-input.component\";\nimport {HighlightDirective} from \"src/stories/buttons/button-fortest/custom-directive/Highlight.directive\";\nimport ReplacePassFormComponent from \"../../stories/forms/replace-pass-form/replace-pass-form.component\";\nimport PassStrengthComponent from \"../../stories/pass-strength/pass-strength.component\";\nimport {ApiErrorMessagePipe} from \"./pipes/api-error-message.pipe\";\nimport {AvatarComponent} from \"../../stories/avatars/avatar.component\";\nimport {AppComponent} from \"../app.component\";\nimport { DynamicCompDirective } from '../../stories/directive/dynamic-comp.directive';\nimport {PopoverDirective} from \"../../stories/directive/bubble-avatar/popover.directive\";\nimport { BubbleAvatarComponent } from '../../stories/directive/bubble-avatar/bubble-avatar.component';\nimport { ActionAvatarComponent } from '../../stories/actions/action-avatar/action-avatar.component';\nimport {PopoverInputDirective} from \"../../stories/directive/bubble-input/popover-input.directive\";\nimport { BubbleInputComponent } from '../../stories/directive/bubble-input/bubble-input.component';\nimport { ActionInputComponent } from '../../stories/actions/action-input/action-input.component';\nimport {MdbPopoverModule} from \"mdb-angular-ui-kit/popover\";\n\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {ButtonExclamationMarkComponent} from \"../../stories/buttons/button-exclamation-mark/button-exclamation-mark.component\"\nimport {ApiErrorMessageService} from \"./pipes/api-error-message.service\";\nimport {Spinner1Component} from \"../../stories/spinners/spinner1/spinner1.component\";\nimport VerificationFormComponent from \"../../stories/forms/verification-form/verification-form.component\";\nimport {DigitcodeInputComponent} from \"../../stories/inputs/digitcode-input/digitcode-input.component\";\nimport {CodeInputComponent} from \"../../stories/inputs/code-input/code-input.component\";\nimport MyAccountFormComponent from \"../../stories/forms/my-account-form/my-account-form.component\";\nimport {AccountInputComponent} from \"../../stories/inputs/account-input/account-input.component\";\nimport ForgotPassFormComponent from \"../../stories/forms/forgot-pass-form/forgot-pass-form.component\";\nimport ResetPassFormComponent from \"../../stories/forms/reset-pass-form/reset-pass-form.component\";\nimport {ButtonConfigurationComponent} from \"../../stories/buttons/button-configuration/button-configuration.component\";\nimport ConfigurationFormComponent from \"../../stories/forms/configuration-form/configuration-form.component\";\nimport {ConfigurationInputComponent} from \"../../stories/inputs/configuration-input/configuration-input.component\";\nimport {ButtonEditSaveComponent} from \"../../stories/buttons/button-edit-save/button-edit-save.component\";\n\n\n\n\n\n\n\n@NgModule({\n    declarations: [\n        ButtonGlobeComponent, Background1Component, ButtonTadiranComponent, ButtonLanguageComponent,\n        ButtonFortestComponent,\n        CardComponent, CardRuggedComponent,\n        LoginFormComponent, LoginFormComponent, RegistryFormComponent, VerificationFormComponent,\n        MyAccountFormComponent, ForgotPassFormComponent, ResetPassFormComponent, ConfigurationFormComponent,\n        ButtonContinueComponent, ButtonExComponent, ButtonAppsComponent, ButtonSuccessfullyComponent, Button,\n        ButtonConfigurationComponent, ButtonEditSaveComponent,\n        AppMenuComponent,\n        StoryInputComponent, DigitcodeInputComponent, CodeInputComponent, AccountInputComponent, ConfigurationInputComponent,\n        HighlightDirective,\n        ReplacePassFormComponent,\n        PassStrengthComponent,\n        ApiErrorMessagePipe,\n        AvatarComponent,\n        DynamicCompDirective,\n        ActionAvatarComponent, PopoverDirective, BubbleAvatarComponent,\n        ActionInputComponent, PopoverInputDirective, BubbleInputComponent,\n        ButtonExclamationMarkComponent,\n        Spinner1Component,\n\n\n    ],\n  imports: [\n    CommonModule,\n    FormsModule, ReactiveFormsModule, MdbPopoverModule, MatButtonModule,\n  ],\n  providers: [ ApiErrorMessageService],\n  exports: [\n    ButtonGlobeComponent, Background1Component, ButtonTadiranComponent, ButtonLanguageComponent,\n    ButtonFortestComponent,\n    CardComponent, CardRuggedComponent,\n    LoginFormComponent, LoginFormComponent, RegistryFormComponent, VerificationFormComponent,\n    MyAccountFormComponent, ForgotPassFormComponent,  ResetPassFormComponent, ConfigurationFormComponent,\n    ButtonContinueComponent, ButtonExComponent, ButtonAppsComponent, ButtonSuccessfullyComponent, Button,\n    ButtonConfigurationComponent, ButtonEditSaveComponent,\n    AppMenuComponent,\n    StoryInputComponent, DigitcodeInputComponent, CodeInputComponent, AccountInputComponent, ConfigurationInputComponent,\n    CommonModule,\n    FormsModule, ReactiveFormsModule,\n    HighlightDirective,\n    ReplacePassFormComponent,\n    PassStrengthComponent,\n    AvatarComponent,\n    DynamicCompDirective,\n    ActionAvatarComponent   , PopoverDirective, BubbleAvatarComponent,\n    ActionInputComponent, PopoverInputDirective, BubbleInputComponent,\n    ButtonExclamationMarkComponent,\n    Spinner1Component,\n\n\n\n  ],\n  bootstrap: [AvatarComponent, ]\n})\nexport class StorybookModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {ActionInput} from \"../action-input/action-input.interface\";\r\n\r\n@Component({\r\n  selector: 'action-avatar',\r\n  templateUrl: './action-avatar.component.html',\r\n  styleUrls: ['./action-avatar.component.css']\r\n})\r\nexport class ActionAvatarComponent implements OnInit {\r\n\r\n  bubbleOn?: boolean;\r\n  actionHeader?: string = \"Your password will expire in 3 Days.\";\r\n\r\n  @Output() actionButton = new EventEmitter<any>();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public setHeader(actionHeader: string) {\r\n    this.actionHeader = actionHeader;\r\n  }\r\n\r\n  public setBubbleOn(bubbleOn: boolean) {\r\n    this.bubbleOn = bubbleOn;\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"password-alert-text\">\r\n<p>\r\n  {{this.actionHeader}}\r\n</p>\r\n<a [highlight]=\"'red'\" [colorName]=\"'red'\" (click)=\"this.actionButton.emit()\" class=\"action-text\" >Change it now ></a>\r\n</div>\r\n","<div class=\"password-alert-text\" Style=\"text-indent: 27px; padding-bottom: 15px\">\r\n<tr><strong>{{this.actionHeader}}</strong></tr>\r\n</div>\r\n<div >\r\n\r\n  <table >\r\n\r\n    <!--thead>\r\n\r\n    </thead-->\r\n    <tbody>\r\n      <tr *ngFor=\"let actionInput of actionInputs\">\r\n        <td  *ngIf=\"actionInput.isFulfilled\" Style=\"color: green\">✔</td>\r\n        <td  *ngIf=\"!actionInput.isFulfilled\" Style=\"color: red\">X</td>\r\n        <td Style=\"text-indent: 7px\">{{ actionInput.presentingMessage }}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ActionInput} from \"./action-input.interface\";\r\n\r\n\r\ninterface USERS {\r\n  conditionName: String;\r\n  presentingMessage: String;\r\n  isFulfilled: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'action-input',\r\n  templateUrl: './action-input.component.html',\r\n  styleUrls: ['./action-input.component.css']\r\n})\r\nexport class ActionInputComponent implements OnInit {\r\n\r\n  actionInputs?: ActionInput[];\r\n  actionHeader?: string = \"The password must contain:\";\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public setConditions(actionInputs: ActionInput[]) {\r\n    this.actionInputs = actionInputs;\r\n  }\r\n\r\n  public setHeader(actionHeader: string) {\r\n    this.actionHeader = actionHeader;\r\n  }\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { StoryInput } from \"../inputs/input/story-input.model\";\r\nimport { AuthService } from '../../app/_services/auth.service';\r\nimport {MdbModalRef} from \"mdb-angular-ui-kit/modal\";\r\n//import {Profile2Expose} from \"src/app/profile2/profile2.interface\";\r\n\r\nexport interface Profile2Expose {\r\n  agent: boolean;\r\n  realtime: boolean;\r\n  scriptDesigner: boolean;\r\n  admin: boolean;\r\n  aeonixAdmin: boolean;\r\n}\r\n\r\nexport interface AeonixAppCenterForm {\r\n  username: null, //new FormControl('ea2', Validators.min(2)),\r\n  password: null  //new FormControl('zaqwsx', Validators.min(2))\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-app-menu',\r\n  templateUrl: './app-menu.component.html',\r\n  styleUrls: ['./app-menu.css'],\r\n})\r\nexport class AppMenuComponent implements OnInit {\r\n\r\n  /*form: AeonixAppCenterForm = {\r\n    username: null,     //new FormControl('ea2', Validators.min(2)),\r\n    password: null      //new FormControl('zaqwsx', Validators.min(2))\r\n  };*/\r\n\r\n\r\n\r\n  @Input() formService!: AuthService;\r\n\r\n  credentials: any = {\r\n    username: null,\r\n    password: null\r\n  };\r\n\r\n  isLoginFailed = false;\r\n  loginErrorMessage = '';\r\n\r\n  openReplacePassword() {\r\n    //this.replacePassFormService.open(ReplacePassForm2Component);\r\n  }\r\n\r\n  constructor() {\r\n    this.validationForm = new FormGroup({\r\n      username: new FormControl('Telecom2', Validators.minLength(2)),\r\n      //email: new FormControl(null, Validators.email),\r\n      password: new FormControl('T@diran2022', Validators.minLength(2)),\r\n      //phone: new FormControl(null, Validators.pattern(new RegExp(\"[0-9 ]{12}\")))\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * Component property to define ordering of tasks\r\n   */\r\n  storyInputsInOrder: StoryInput[] = [];\r\n\r\n  validationForm: FormGroup;\r\n\r\n  @Input() isLoggedIn = false;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onPinInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onArchiveInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() openNewWinForApp = new EventEmitter<any>();\r\n\r\n  @Output() openNewTabForApp = new EventEmitter<any>();\r\n\r\n  @Input() profileApps?: any;\r\n\r\n  @Input() isLoading: boolean = false;\r\n\r\n\r\n  @Input()\r\n  set storyInputs(arr: StoryInput[]) {\r\n    const initialTasks = [\r\n      ...arr.filter(t => t.state === 'USER NAME'),\r\n      ...arr.filter(t => t.state !== 'USER NAME'),\r\n    ];\r\n    const filteredTasks = initialTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME'\r\n    );\r\n    this.storyInputsInOrder = filteredTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME'\r\n    );\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.warn('Login Request!');\r\n    this.credentials.username=this.validationForm.get('username')?.value;\r\n    this.credentials.password=this.validationForm.get('password')?.value;\r\n\r\n    this.openNewWinForApp.emit(this.credentials);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  get userName(): AbstractControl {\r\n    return this.validationForm.get('username')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.validationForm.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.validationForm.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.validationForm.get('phone')!;\r\n  }\r\n\r\n\r\n}\r\n\r\n","\r\n\r\n\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <storybook-card class=\"card-container\" ></storybook-card>\r\n  <div  class=\"h-100 d-flex align-items-center justify-content-center\">\r\n    <div class=\"Aeonix-App-Center\">\r\n      <a>Aeonix App Center</a>\r\n    </div>\r\n    <div><storybook-spinner1  *ngIf=\"isLoading\"></storybook-spinner1></div>\r\n\r\n    <div class=\"grid-container\">\r\n      <div class=\"item1\"><storybook-button-apps application=\"Agent\" label=\"Continue\" type=\"button\" [isDisabled]=\"!profileApps?.agent\"\r\n        id=\"openNewAgentTab\" (click)='this.openNewWinForApp.emit([\"AGENT\",\"/accAgent/\"])'  ></storybook-button-apps></div>\r\n      <div class=\"item2\"><storybook-button-apps application=\"WebRT\" label=\"Continue\" type=\"button\" [isDisabled]=\"!profileApps?.realtime\"\r\n        id=\"openNewWebRTTab\" (click)='this.openNewTabForApp.emit([\"ACCREALTIME\",\"/accRealTime/\"])' ></storybook-button-apps></div>\r\n      <div class=\"item3\"><storybook-button-apps application=\"Script-Designer\" label=\"Continue\" type=\"button\" [isDisabled]=\"!profileApps?.scriptDesigner\"\r\n        id=\"openNewGccsTab\" (click)='this.openNewTabForApp.emit([\"GCCS\",\"/accGCCS/\"])' ></storybook-button-apps></div>\r\n      <div class=\"item4\"><storybook-button-apps application=\"Admin\" label=\"Continue\" type=\"button\" [isDisabled]=\"!profileApps?.admin\"\r\n        ></storybook-button-apps></div>\r\n      <div class=\"item5\"><storybook-button-apps application=\"Aeonix-Admin\" label=\"Continue\" type=\"button\" [isDisabled]=\"!profileApps?.aeonixAdmin\"\r\n        id=\"openNewGccsTab2\" (click)='this.openNewTabForApp.emit([\"GCCS\",\"/accGCCS/\"])' ></storybook-button-apps></div>\r\n    </div>\r\n\r\n\r\n\r\n  </div>\r\n</div>\r\n\r\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n} from '@angular/core';\nimport {PopoverOptions} from \"../directive/popover.interface\";\nimport {ActionAvatarComponent} from \"../actions/action-avatar/action-avatar.component\";\n/**/\n@Component({\n  selector: 'storybook-avatar',\n  templateUrl: './avatar.component.html',\n  styleUrls: ['./avatar.scss'],\n})\nexport  class AvatarComponent {\n  popover: PopoverOptions = {\n    content: ActionAvatarComponent\n  };\n\n\n  @Output() actionButton: EventEmitter<any> = new EventEmitter<any> ();\n\n  /**\n   * Header contents\n   *\n   * @required\n   */\n  @Input()\n  header? = 'header';\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  isNotify: boolean = false;\n\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-avatar--primary' : 'storybook-avatar--secondary';\n\n    return ['storybook-avatar', `storybook-avatar--${this.size}`, mode];\n  }\n\n  ngOnInit(): void {\n  }\n}\n","\r\n<div [twPopover] = \"this.popover\" header=\"{{this.header}}\" [bubbleOn]=\"this.isNotify\" (actionButton)=\"this.actionButton.emit($event)\">\r\n<!-- a (mouseover)=\"popover.show()\" (mouseleave)=\"popover.hide()\"\r\n   class=\"form-check-label white-text\"   mdbPopoverTitle=\"Account recovery\" #popover=\"mdbPopover\"\r\n   mdbPopover=\"To help keep your account safe, we will make sure that it’s really you trying to sign in\">\r\n</a\r\n  Forgot password?-->\r\n\r\n\r\n<button class=\"main\" highlight=\"blue\" colorName=\"blue\"\r\n        type=\"button\"\r\n        (click)=\"onClick.emit($event)\"\r\n        [ngClass]=\"classes\"\r\n        [ngStyle]=\"{ 'background-color': backgroundColor }\">\r\n\r\n  <div class=\"circle\">\r\n\r\n    <img src=\"./assets/images/ProfileIcon-70.svg\" srcset=\"./assets/images/ProfileIcon-70@2x.png, ./assets/images/ProfileIcon-70@3x.png\"\r\n         class=\"Avatar-Icon\"  alt=\"profile-image\">\r\n\r\n  </div>\r\n  <storybook-button-exclamation-mark  *ngIf=\"this.isNotify\" class=\"exclamation-mark\" size=\"small\" ></storybook-button-exclamation-mark>\r\n  <div class=\"Avatar-Label\"><a class=\"font\">{{ label }}</a></div>\r\n</button>\r\n\r\n</div>\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-apps',\n  templateUrl: './button-apps.component.html',\n  styleUrls: ['./button-apps.component.scss']\n})\nexport class ButtonAppsComponent {\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  isDisabled: boolean = false;\n\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * What application should the button linked to?\n   */\n  @Input()\n  application: 'Agent' | 'WebRT' | 'Script-Designer' | 'Admin' | 'Aeonix-Admin' = 'Admin';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-apps--primary' : 'storybook-button-apps--secondary';\n\n    return ['storybook-button-apps', `storybook-button-apps--${this.application}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<button id=\"button-apps\" class=\"container\"  [disabled]=\"isDisabled\"  >\n<div id=\"circle\" class=\"circle\"   >\n\n<img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n   src=\"./assets/images/{{application?.toString()}}.png\" class=\"Apps-Button-Icon center\"  alt=\"apps-button-icon\"/>\n</div>\n\n<div class=\"Button-App-Label \">\n  <div class=\"center mfont\">\n\n    {{ application.toString() }}\n\n  </div>\n</div>\n\n</button>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-configuration',\n  templateUrl: './button-configuration.component.html',\n  styleUrls: ['./button-configuration.component.css']\n})\nexport class ButtonConfigurationComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-form--primary' : 'storybook-button-form--secondary';\n\n    return ['storybook-button-form', `storybook-language-icon--${this.size}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<button class=\"Vector\" (click)=\"onClick.emit($event)\" >\n  <label class=\"EnableProfilePicture\">Tools</label>\n<img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n   src=\"./assets/images/AacConfiguration.png\"\n       srcset=\"./assets/images/language-desktop-icon@2x.png 2x,\n             /assets/images/language-desktop-icon@3x.png 3x\"\n       class=\"Language-Desktop-Icon\"  alt=\"form-desktop-icon\"/>\n\n</button>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-continue',\n  templateUrl: './button-continue.component.html',\n  /*template: `<div class=\"storybook-button-continue\">\n    <img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n         src=\"./assets/images/img_2.png\" class=\"Language-Desktop-Icon\"  alt=\"form-desktop-icon\"/>\n  </div>`,*/\n  styleUrls: ['./button-continue.component.scss'],\n})\nexport class ButtonContinueComponent {\n\n  /**\n   * Is this gallery attribute are set?\n   */\n  @Input()\n  gallery = false;\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Continue';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-continue--primary' : 'storybook-button-continue--secondary';\n    const galleryMode = this.gallery ? 'storybook-button-continue--set-in' : 'storybook-button-continue--set-out';\n\n    return ['storybook-button-continue', `storybook-button-continue--${this.size}`, mode, galleryMode];\n  }\n\n\n}\n","<button id=\"login-button\" class=\"login-button\" (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\" >\n{{label}}\n</button>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-edit-save',\n  templateUrl: './button-edit-save.component.html',\n  styleUrls: ['./button-edit-save.component.scss']\n})\nexport class ButtonEditSaveComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onStateChange: EventEmitter<string> = new EventEmitter<string>();\n\n  @Input()\n  state: string = 'edit';\n\n  changeStae() {\n    this.state = (this.state == 'edit' ? 'save' : 'edit')\n    this.onStateChange.emit(this.state);\n  }\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-edit-save--primary' : 'storybook-button-edit-save--secondary';\n\n    return ['storybook-button-edit-save', `storybook-button-edit-save--${this.state}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<button class=\"Vector\" (click)=\"onClick.emit($event)\" >\n\n    <image  [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n           class=\"Edit-Save-Icon\" (click)=\"this.changeStae()\"></image>\n\n</button>\n\n","// also exported from '@storybook/angular' if you can deal with breaking changes in 6.1\nimport { Story, Meta } from '@storybook/angular/types-6-0';\nimport { ButtonEditSaveComponent } from './button-edit-save.component';\nimport {componentWrapperDecorator, moduleMetadata} from \"@storybook/angular\";\nimport {CommonModule} from \"@angular/common\";\nimport {action} from \"@storybook/addon-actions\";\n\n// More on default export: https://storybook.js.org/docs/angular/writing-stories/introduction#default-export\nexport default {\n  title: 'Design System/Atoms/Buttons/EditSaveButton',\n  component: ButtonEditSaveComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [],\n      imports: [CommonModule],\n    }),\n    componentWrapperDecorator(story => `<div style=\"position: absolute; width: 3em; top: 3em; left: 3em\">${story}</div>`),\n  ],\n  excludeStories: /.*Data$/,\n  // More on argTypes: https://storybook.js.org/docs/angular/api/argtypes\n} as Meta;\n\nexport const actionsData = {\n  onStateChange: action('onStateChange'),\n  onClick: action('onClick'),\n};\n\n// More on component templates: https://storybook.js.org/docs/angular/writing-stories/introduction#using-args\nconst Template: Story<ButtonEditSaveComponent> = (args: ButtonEditSaveComponent) => ({\n  props: {\n    args,\n  }\n});\n\nexport const Primary = Template.bind({});\n// More on args: https://storybook.js.org/docs/angular/writing-stories/args\nPrimary.args = {\n  primary: true,\n  state: 'edit'\n};\nPrimary.parameters = {\n  backgrounds: {\n    values: [\n      { name: 'white', value: '#fff' },\n      { name: 'green', value: '#0f0' },\n      { name: 'blue', value: '#00f' },\n    ],\n  },\n};\n\n\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-ex',\n  templateUrl: './button-ex.component.html',\n  styleUrls: ['./button-ex.component.css']\n})\nexport class ButtonExComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-ex--primary' : 'storybook-button-ex--secondary';\n\n    return ['storybook-button-ex', `storybook-button-ex--${this.size}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<button class=\"Vector\" (click)=\"onClick.emit($event)\" >\n\n    <img  [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n       src=\"./assets/images/x_close.png\"\n           class=\"Ex-Icon\"  alt=\"Ex-Icon\"/>\n\n</button>\n\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-exclamation-mark',\n  templateUrl: './button-exclamation-mark.component.html',\n  styleUrls: ['./button-exclamation-mark.component.scss']\n})\nexport class ButtonExclamationMarkComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-exclamation-mark--primary' : 'storybook-button-exclamation-mark--secondary';\n\n    return ['storybook-button-exclamation-mark', `storybook-button-exclamation-mark--${this.size}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"button-exclamation-mark\" class=\"container\">\n<div id=\"button-exclamation-mark-circle\" class=\"circle\" (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\">\n\n<img\n     src=\"./assets/images/Exclamation.png\" class=\"Exclamation-Mark-Icon center\" alt=\"exclamation-mark-button-icon\"/>\n</div>\n\n\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-fortest',\n  template: ` <p >Highlight Directive</p>\n    <button highlight=\"blue\" colorName=\"blue\"\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button-fortest.css'],\n})\nexport  class ButtonFortestComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[highlight]',\r\n})\r\nexport class HighlightDirective {\r\n  constructor(private eleRef: ElementRef) {}\r\n\r\n  @Input() highlight: any;\r\n  @Input() colorName: any;\r\n\r\n\r\n  @HostListener('mouseover') onMouseOver() {\r\n    this.eleRef.nativeElement.style.color = this.colorName;\r\n  }\r\n  @HostListener('mouseleave') onMouseLeave() {\r\n    this.eleRef.nativeElement.style.color = 'black';\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-globe',\n  templateUrl: './button-globe.component.html',\n  styleUrls: ['./button-globe.component.css']\n})\nexport class ButtonGlobeComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-tadiran--primary' : 'storybook-button-tadiran--secondary';\n\n    return ['storybook-button-tadiran', `storybook-tadiran-icon--${this.size}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"Vector\">\n<img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n   src=\"./assets/images/GlobeIcon.png\" class=\"Language-Desktop-Icon\"  alt=\"form-desktop-icon\"/>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-language',\n  templateUrl: './button-language.component.html',\n  styleUrls: ['./button-language.component.css']\n})\nexport class ButtonLanguageComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-form--primary' : 'storybook-button-form--secondary';\n\n    return ['storybook-button-form', `storybook-language-icon--${this.size}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"Vector\">\n<img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n   src=\"./assets/images/language-desktop-icon.png\"\n       srcset=\"./assets/images/language-desktop-icon@2x.png 2x,\n             /assets/images/language-desktop-icon@3x.png 3x\"\n       class=\"Language-Desktop-Icon\"  alt=\"form-desktop-icon\"/>\n\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-successfully',\n  templateUrl: './button-successfully.component.html',\n  styleUrls: ['./button-successfully.component.css']\n})\nexport class ButtonSuccessfullyComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-successfully--primary' : 'storybook-button-successfully--secondary';\n\n    return ['storybook-button-successfully', `storybook-button-successfully--${this.size}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"button-successfully\" class=\"container\">\n<div class=\"circle\">\n\n<img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n     src=\"./assets/images/Vee.png\" class=\"Vee-Icon center\" alt=\"successfully-button-icon\"/>\n</div>\n\n\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-tadiran',\n  /*templateUrl: './button-continue.component.html',*/\n  template: `<div class=\"storybook-button-tadiran\">\n    <img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n         src=\"./assets/images/img_2.png\" class=\"Language-Desktop-Icon\"  alt=\"language-desktop-icon\"/>\n  </div>`,\n  styleUrls: ['./button-tadiran.component.scss'],\n})\nexport class ButtonTadiranComponent {\n\n  /**\n   * Is this gallery attribute are set?\n   */\n  @Input()\n  gallery = false;\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-tadiran--primary' : 'storybook-button-tadiran--secondary';\n    const galleryMode = this.gallery ? 'storybook-button-tadiran--set-in' : 'storybook-button-tadiran--set-out';\n\n    return ['storybook-button-tadiran', `storybook-button-tadiran--${this.size}`, mode, galleryMode];\n  }\n\n\n}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-card-rugged',\r\n  templateUrl: './card-rugged.component.html',\r\n  styleUrls: ['./card-rugged.css']\r\n})\r\nexport default class CardRuggedComponent {\r\n\r\n\r\n\r\n  /**\r\n   * Is this the principal call to action on the login-main?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large'  = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-card--primary' : 'storybook-card--secondary';\r\n\r\n    return ['storybook-card', `storybook-card--${this.size}`, mode];\r\n  }\r\n\r\n\r\n\r\n}\r\n","\r\n  <div class=\"card\">\r\n\r\n\r\n  </div>\r\n\r\n\r\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.css']\r\n})\r\nexport default class CardComponent  {\r\n\r\n\r\n\r\n  /**\r\n   * Is this the principal call to action on the login-main?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large'  = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-card--primary' : 'storybook-card--secondary';\r\n\r\n    return ['storybook-card', `storybook-card--${this.size}`, mode];\r\n  }\r\n\r\n\r\n\r\n}\r\n","\r\n  <div class=\"card\">\r\n\r\n  </div>\r\n\r\n\r\n","import {\r\n  Component,\r\n  Input,\r\n  ViewChild,\r\n  OnInit,\r\n  AfterViewInit,\r\n  ComponentFactoryResolver,\r\n  ChangeDetectionStrategy,\r\n  ApplicationRef,\r\n  Output,\r\n  EventEmitter,\r\n  Type, ComponentRef\r\n} from '@angular/core';\r\nimport { DynamicCompDirective } from '../dynamic-comp.directive';\r\nimport { PopoverOptions } from '../popover.interface'\r\nimport {ActionAvatarComponent} from \"src/stories/actions/action-avatar/action-avatar.component\";\r\n\r\n\r\n@Component({\r\n  selector: 'bubble-avatar',\r\n    templateUrl: './bubble-avatar.component.html',\r\n  styleUrls: ['./bubble-avatar.component.scss']\r\n})\r\nexport class BubbleAvatarComponent implements OnInit, AfterViewInit{\r\n  @Input() display: any;\r\n  @Input() popover: any;\r\n  @Input() bubbleOn?: boolean;\r\n  @Input() header?: string;\r\n  @Input()  options?: PopoverOptions;\r\n  show: boolean = false;\r\n  isDynamic: boolean = false;\r\n  @ViewChild(DynamicCompDirective, {static: true}) content!: DynamicCompDirective;\r\n  @Output() triggerDetectionChange: EventEmitter<void> = new EventEmitter<void> ();\r\n  @Output() actionButton: EventEmitter<any> = new EventEmitter<any> ();\r\n  actionAvatarComponentRef?: ComponentRef<any>;\r\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    if (this.options && typeof this.options.content !== \"string\") {\r\n      this.isDynamic = true;\r\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(<Type<any>>this.options.content);\r\n      const viewContainerRef = this.content.viewContainerRef;\r\n      viewContainerRef.clear();\r\n      this.actionAvatarComponentRef = viewContainerRef.createComponent(componentFactory);\r\n      this.actionAvatarComponentRef.instance.setHeader(this.header);\r\n      this.actionAvatarComponentRef.instance.setBubbleOn(this.bubbleOn);\r\n      this.actionAvatarComponentRef.instance.actionButton.subscribe(($event: any) => {\r\n        this.actionButton.emit($event);\r\n        console.log(\"Click: Change it now\");\r\n      });\r\n    }\r\n  }\r\n  ngAfterViewInit(): void {}\r\n\r\n  showPopup() {\r\n    if (this.bubbleOn) {\r\n      this.show = true;\r\n      this.triggerDetectionChange.emit();\r\n    }\r\n  }\r\n\r\n  hidePopup() {\r\n    this.show = false;\r\n    this.triggerDetectionChange.emit();\r\n  }\r\n\r\n  setHeader(header: string) {\r\n    this.header = header;\r\n    this.actionAvatarComponentRef?.instance.setHeader(this.header);\r\n  }\r\n\r\n  setBubbleOn(bubbleOn: boolean) {\r\n    this.bubbleOn = bubbleOn;\r\n  }\r\n\r\n  loadCarComponent(){\r\n    const _viewContainerRef = this.content.viewContainerRef;\r\n\r\n    //removes all views in that container\r\n    _viewContainerRef.clear();\r\n\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(<Type<any>>this.options?.content);\r\n\r\n    //Create an instance of the component\r\n    const carComponentRef = _viewContainerRef.createComponent<ActionAvatarComponent>(componentFactory);\r\n/*\r\n    //Pass data to the component\r\n    carComponentRef.instance.image = 'https://images.unsplash.com/photo-1494976388531-d1058494cdd8?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80';\r\n*/\r\n  }\r\n}\r\n","<div class=\"tooltip\" [ngClass]=\"{'tooltip-display' : show}\">\r\n  <!--button (click)=\"loadCarComponent()\">Load Car Component</button-->\r\n  <span *ngIf=\"!isDynamic\">{{popover}}</span>\r\n  <ng-template    appDynamicComp>\r\n  </ng-template>\r\n\r\n</div>\r\n\r\n","import {\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Directive,\r\n  ElementRef, EventEmitter,\r\n  HostListener,\r\n  Input, Output,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { PopoverOptions } from '../popover.interface';\r\nimport {BubbleAvatarComponent} from \"./bubble-avatar.component\";\r\n\r\n@Directive({\r\n  selector: '[twPopover]',\r\n})\r\nexport class PopoverDirective {\r\n  @Input(\"twPopover\") popover?: PopoverOptions;\r\n\r\n  popoverComponentRef?: ComponentRef<BubbleAvatarComponent>;\r\n  @HostListener('mouseover', ['$event']) onMouseOver($event: any){\r\n    this.popoverComponentRef?.instance.setHeader(this.header);\r\n    this.popoverComponentRef?.instance.setBubbleOn(this.bubbleOn);\r\n    this.popoverComponentRef?.instance.showPopup();\r\n    //this.eleRef.nativeElement.style.color = 'blue';\r\n  }\r\n\r\n  @HostListener('mouseleave', ['$event']) onLeave($event: any){\r\n    this.popoverComponentRef?.instance.hidePopup();\r\n  }\r\n\r\n  @HostListener('click', ['$event']) onClick($event: any){\r\n    this.popoverComponentRef?.instance.setHeader(this.header);\r\n    this.popoverComponentRef?.instance.setBubbleOn(this.bubbleOn);\r\n    this.popoverComponentRef?.instance.showPopup();\r\n  }\r\n\r\n\r\n\r\n\r\n  constructor(private eleRef: ElementRef,\r\n              private el: ElementRef,\r\n              private viewContainer: ViewContainerRef,\r\n              private componentFactoryResolver: ComponentFactoryResolver) {}\r\n\r\n  @Input() highlight: any;\r\n  @Input() header: string = '';\r\n  @Input() bubbleOn: boolean = false;\r\n  @Output() actionButton: EventEmitter<any> = new EventEmitter<any> ();\r\n  @Output() avatarButton: EventEmitter<any> = new EventEmitter<any> ();\r\n\r\n\r\n/*\r\n  @HostListener('mouseover') onMouseOver() {\r\n    this.popoverComponentRef?.instance.showPopup();\r\n    this.eleRef.nativeElement.style.color = this.colorName;\r\n  }*/\r\n\r\n\r\n  ngOnInit(): void {\r\n    const factory =  this.componentFactoryResolver.resolveComponentFactory(BubbleAvatarComponent);\r\n\r\n    const comp = factory.create(this.viewContainer.injector);\r\n    comp.instance.display = \"I test some content\";\r\n    comp.instance.popover = this.popover?.content;\r\n    comp.instance.options = this.popover;\r\n    comp.instance.header = this.header;\r\n    comp.instance.bubbleOn = this.bubbleOn;\r\n\r\n    this.popoverComponentRef = comp;\r\n    this.el.nativeElement.classList.add(\"wrapper\");\r\n    this.el.nativeElement.appendChild(comp.location.nativeElement);\r\n\r\n    comp.hostView.detectChanges();\r\n\r\n    comp.instance.triggerDetectionChange.subscribe(() =>  {\r\n      comp.hostView.detectChanges();\r\n    });\r\n\r\n    comp.instance.actionButton.subscribe(($event: any) => {\r\n      this.actionButton.emit($event);\r\n    });\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ViewChild,\r\n  OnInit,\r\n  AfterViewInit,\r\n  ComponentFactoryResolver,\r\n  ChangeDetectionStrategy,\r\n  ApplicationRef,\r\n  Output,\r\n  EventEmitter,\r\n  Type, ComponentRef\r\n} from '@angular/core';\r\nimport { DynamicCompDirective } from '../dynamic-comp.directive';\r\nimport { PopoverOptions } from '../popover.interface'\r\nimport {ActionInputComponent} from \"src/stories/actions/action-input/action-input.component\";\r\nimport {ActionInput} from \"../../actions/action-input/action-input.interface\";\r\n\r\n\r\n@Component({\r\n  selector: 'bubble-input',\r\n    templateUrl: './bubble-input.component.html',\r\n  styleUrls: ['./bubble-input.component.scss']\r\n})\r\nexport class BubbleInputComponent implements OnInit, AfterViewInit{\r\n  @Input() display: any;\r\n  @Input() popover: any;\r\n  @Input() data?: ActionInput[];\r\n  @Input() header?: string;\r\n  @Input()  options?: PopoverOptions;\r\n  show: boolean = false;\r\n  isDynamic: boolean = false;\r\n  @ViewChild(DynamicCompDirective, {static: true}) content!: DynamicCompDirective;\r\n  @Output() triggerDetectionChange: EventEmitter<void> = new EventEmitter<void> ();\r\n  actionInputComponentRef?: ComponentRef<any>;\r\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    if (this.options && typeof this.options.content !== \"string\") {\r\n      this.isDynamic = true;\r\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(<Type<any>>this.options.content);\r\n      const viewContainerRef = this.content.viewContainerRef;\r\n      viewContainerRef.clear();\r\n      this.actionInputComponentRef = viewContainerRef.createComponent(componentFactory);\r\n      this.actionInputComponentRef.instance.setConditions(this.data);\r\n      this.actionInputComponentRef.instance.setHeader(this.header);\r\n    }\r\n\r\n  }\r\n  ngAfterViewInit(): void {}\r\n\r\n  showPopup() {\r\n    if (this.data != undefined && this.data?.length > 0) {\r\n      this.show = true;\r\n      this.triggerDetectionChange.emit();\r\n    }\r\n  }\r\n\r\n  hidePopup() {\r\n    this.show = false;\r\n    this.triggerDetectionChange.emit();\r\n  }\r\n\r\n  setData(data: ActionInput[]) {\r\n    this.data = data;\r\n    this.actionInputComponentRef?.instance.setConditions(this.data);\r\n  }\r\n\r\n  setHeader(header: string) {\r\n    this.header = header;\r\n    this.actionInputComponentRef?.instance.setHeader(this.header);\r\n  }\r\n\r\n  /*   loadCarComponent(){\r\n     const _viewContainerRef = this.content.viewContainerRef;\r\n\r\n     //removes all views in that container\r\n     _viewContainerRef.clear();\r\n\r\n     const componentFactory = this.componentFactoryResolver.resolveComponentFactory(<Type<any>>this.options?.content);\r\n\r\n     //Create an instance of the compo\r\n     /*    const carComponentRef = _viewContainerRef.createComponent<ActionInputComponent>(componentFactory);\r\n\r\n         //Pass data to the component\r\n         carComponentRef.instance.image = 'https://images.unsplash.com/photo-1494976388531-d1058494cdd8?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80';\r\n\r\n   }*/\r\n}\r\n","<div class=\"tooltip\" [ngClass]=\"{'tooltip-display' : show}\">\r\n  <!--button (click)=\"loadCarComponent()\">Load Car Component</button-->\r\n  <span *ngIf=\"!isDynamic\">{{popover}}</span>\r\n  <ng-template appDynamicComp>\r\n  </ng-template>\r\n\r\n</div>\r\n\r\n","import {\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Directive,\r\n  ElementRef,\r\n  HostListener,\r\n  Input,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { PopoverOptions } from '../popover.interface';\r\nimport {BubbleInputComponent} from \"./bubble-input.component\";\r\nimport {ActionInput} from \"../../actions/action-input/action-input.interface\";\r\n\r\n@Directive({\r\n  selector: '[inputPopover]',\r\n})\r\nexport class PopoverInputDirective {\r\n  @Input(\"inputPopover\") popover?: PopoverOptions;\r\n\r\n  popoverComponentRef?: ComponentRef<BubbleInputComponent>;\r\n  @HostListener('mouseover', ['$event']) onMouseOver($event: any){\r\n    this.popoverComponentRef?.instance.setData(this.data!);\r\n    this.popoverComponentRef?.instance.showPopup();\r\n    //this.eleRef.nativeElement.style.color = 'blue';\r\n  }\r\n\r\n  @HostListener('mouseleave', ['$event']) onLeave($event: any){\r\n    this.popoverComponentRef?.instance.hidePopup();\r\n  }\r\n\r\n  @HostListener('click', ['$event']) onClick($event: any){\r\n    this.popoverComponentRef?.instance.setData(this.data!);\r\n    this.popoverComponentRef?.instance.showPopup();\r\n  }\r\n\r\n  @HostListener('keyup', ['$event']) onDataChange($event: any) {\r\n    this.popoverComponentRef?.instance.setData(this.data!);\r\n    this.popoverComponentRef?.instance.showPopup();\r\n  }\r\n\r\n\r\n  constructor(private eleRef: ElementRef,\r\n              private el: ElementRef,\r\n              private viewContainer: ViewContainerRef,\r\n              private componentFactoryResolver: ComponentFactoryResolver) {}\r\n\r\n  @Input() highlight: any;\r\n  @Input() data?: ActionInput[] | undefined;\r\n  @Input() header?: string = '';\r\n\r\n/*\r\n  @HostListener('mouseover') onMouseOver() {\r\n    this.popoverComponentRef?.instance.showPopup();\r\n    this.eleRef.nativeElement.style.color = this.colorName;\r\n  }*/\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    const factory =  this.componentFactoryResolver.resolveComponentFactory(BubbleInputComponent);\r\n\r\n    const comp = factory.create(this.viewContainer.injector);\r\n    comp.instance.display = \"I test some content\";\r\n    comp.instance.popover = this.popover?.content;\r\n    comp.instance.options = this.popover;\r\n    comp.instance.data = this.data;\r\n    comp.instance.header = this.header;\r\n\r\n    this.popoverComponentRef = comp;\r\n    this.el.nativeElement.classList.add(\"wrapper\");\r\n    this.el.nativeElement.appendChild(comp.location.nativeElement);\r\n\r\n    comp.hostView.detectChanges();\r\n\r\n    comp.instance.triggerDetectionChange.subscribe(() =>  {\r\n      comp.hostView.detectChanges();\r\n    });\r\n  }\r\n\r\n}\r\n","import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appDynamicComp]'\r\n})\r\nexport class DynamicCompDirective {\r\n\r\n  constructor(public viewContainerRef: ViewContainerRef) {}\r\n\r\n}\r\n","import {\r\n  AfterViewChecked,\r\n  Component, Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input, OnChanges,\r\n  OnInit,\r\n  Output,\r\n  QueryList,\r\n  Renderer2, SimpleChanges, Type, ViewChild,\r\n  ViewChildren\r\n} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport {ApiErrorMessageService} from \"../../../app/storybook/pipes/api-error-message.service\";\r\nimport {ConfigurationInput} from \"../../inputs/configuration-input/configuration-input.model\";\r\nimport {typeofExpr} from \"@angular/compiler/src/output/output_ast\";\r\n//import {BehaviorSubject} from \"rxjs\";\r\n//import {AccountInputComponent} from \"../inputs/input/story-input.component\";\r\n\r\n/*\r\n@Directive({selector: 'storybook-input'})\r\nexport class AccountInput {\r\n  @Input() storyInput!: AccountInput;\r\n}\r\n*/\r\n@Component({\r\n  selector: 'storybook-configuration-form',\r\n  templateUrl: './configuration-form.component.html',\r\n  styleUrls: ['./configuration-form.css'],\r\n})\r\nexport default class ConfigurationFormComponent implements OnInit, AfterViewChecked, OnChanges {\r\n\r\n  @Output() onLogout = new EventEmitter<Event>();\r\n\r\n  @Output() openUser = new EventEmitter<Event>();\r\n\r\n  doLogout(event: Event) {\r\n    this.onLogout.emit(event);\r\n    this.clickXButton.emit();\r\n  }\r\n\r\n  @Input() formService!: AuthService;\r\n\r\n  credentials: any = {\r\n    username: null,\r\n    password: null\r\n  };\r\n\r\n  @Input() isRegFailed = false;\r\n  @Input() regErrorMessage: any = {};\r\n\r\n\r\n  openReplacePassword() {\r\n    //this.replacePassFormService.open(ReplacePassForm2Component);\r\n  }\r\n\r\n  @ViewChild('formHeader', { static: false }) mainHeader?: ElementRef;\r\n  @ViewChild('storybook-input', { static: false }) storybookInput?: ElementRef;\r\n\r\n\r\n  param = {language: 'login-main'};\r\n\r\n  constructor(private renderer: Renderer2) {\r\n  }\r\n\r\n  storyInputsInOrder: ConfigurationInput[] = [];\r\n\r\n  @Input() mForm: FormGroup  = new FormGroup({});\r\n  /*username: new FormControl('', Validators.minLength(2)),\r\n  password: new FormControl('T@diran2022', Validators.minLength(2)),\r\n  email: new FormControl('', Validators.email),\r\n  phone: new FormControl(null, Validators.pattern(new RegExp(\"[0-9 ]{12}\")))*/\r\n\r\n  changeLog: string[] = [];\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.isRegSuccess) {\r\n      if (!changes.isRegSuccess.previousValue &&  changes.isRegSuccess.currentValue) {\r\n        console.warn('Register Request Succeeded!');\r\n        this.loadSuccessfullyLoggedIn();\r\n      }\r\n    }\r\n    /*if (changes.isConfigFailed || changes.configErrorMessage) {\r\n      console.log('isConfigFailed' + this.configErrorMessage['message'])\r\n    }*/\r\n  }\r\n\r\n\r\n\r\n  @Input() isRegSuccess = false;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onPinInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onArchiveInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() saveChanges: EventEmitter<void> = new EventEmitter();\r\n\r\n  @Output() clickXButton: EventEmitter<void> = new EventEmitter();\r\n\r\n  @Output() changePassword: EventEmitter<void> = new EventEmitter();\r\n\r\n\r\n\r\n  @Input()\r\n  set storyInputs(arr: ConfigurationInput[]) {\r\n    const initialTasks = [\r\n      ...arr.filter(t => t.state === 'USER NAME'),\r\n      ...arr.filter(t => t.state !== 'USER NAME'),\r\n    ];\r\n    const filteredTasks = initialTasks.filter(\r\n      t =>  t.state == t.state || t.state === 'USER NAME1' || t.state === 'EMAIL' || t.state === 'PHONE NUMBER FOR AUTHENTICATION'\r\n    );\r\n    this.storyInputsInOrder = filteredTasks.filter(\r\n      t =>  t.state == t.state || t.state === 'PASSWORD' || t.state === 'USER NAME' || t.state === 'EMAIL' || t.state === 'PHONE NUMBER FOR AUTHENTICATION');\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.warn('Registry Request Sent!');\r\n    this.saveChanges.emit();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n  get userName(): AbstractControl {\r\n    return this.mForm?.get('username')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.mForm?.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.mForm?.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.mForm?.get('phone')!;\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    //console.log(this.childComp?.length)\r\n  }\r\n\r\n  loadSuccessfullyLoggedIn(){\r\n    this.renderer.setProperty(this.mainHeader?.nativeElement ,'innerHTML','You have successfully complete your registeration!');\r\n\r\n\r\n  }\r\n\r\n}\r\n\r\n","\r\n\r\n\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <storybook-card-rugged class=\"\"></storybook-card-rugged>\r\n  <div  class=\"h-100 d-flex align-items-center justify-content-center\">\r\n    <storybook-button-ex id=\"button-ex\" (click)=\"this.clickXButton.emit()\" ></storybook-button-ex>\r\n    <button id=\"button-log-out\" (click)=\"this.doLogout($event)\" >Reset</button>\r\n    <div class=\"form-header\">\r\n      <img\r\n        id=\"profile-img\"\r\n        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n        class=\"profile-img-card\"\r\n      />\r\n      <a class=\"main-form-header\" #formHeader>Board-Admin</a>\r\n\r\n\r\n      <br>\r\n\r\n    <br>\r\n    <!--form name=\"form\"  (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate --> <!-- *ngIf=\"!isConfigSuccess\"-->\r\n      <form name=\"currentForm\"   [formGroup]=\"mForm\">\r\n      <div class=\"Vector\">\r\n\r\n        <div class=\"login-button\">\r\n        <div *ngIf=\"isRegSuccess\" id=\"button-successfully\" style=\"\">\r\n          <storybook-button-successfully   ></storybook-button-successfully>\r\n        </div>\r\n\r\n\r\n            <div *ngIf=\"!isRegSuccess\">\r\n              <storybook-configuration-input\r\n                [storyInput]=\"storyInputsInOrder[0]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\">\r\n              </storybook-configuration-input>\r\n              <div class=\"thematic-break\"></div>\r\n              <storybook-configuration-input\r\n                [storyInput]=\"storyInputsInOrder[1]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\">\r\n              </storybook-configuration-input>\r\n              <div class=\"thematic-break\"></div>\r\n              <storybook-configuration-input\r\n                [storyInput]=\"storyInputsInOrder[2]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\">\r\n              </storybook-configuration-input>\r\n              <div class=\"thematic-break\"></div>\r\n              <storybook-configuration-input\r\n                [storyInput]=\"storyInputsInOrder[3]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (changePassword)=\"changePassword.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\">\r\n              </storybook-configuration-input>\r\n              <div class=\"thematic-break\"></div>\r\n              <storybook-configuration-input\r\n                [storyInput]=\"storyInputsInOrder[4]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (changePassword)=\"changePassword.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\">\r\n              </storybook-configuration-input>\r\n              <div class=\"thematic-break\"></div>\r\n\r\n            </div>\r\n\r\n            <div class=\"login-failed-message\" role=\"alert\" >\r\n              <p *ngIf=\"isRegFailed\">*  {{ this.regErrorMessage['message'] | apiErrorMessage: param }}</p>\r\n            </div>\r\n\r\n\r\n            <storybook-button-continue [label]=\"'Save Changes'\" size=\"small\" style=\"position: relative; align-items: end; display: flex; flex-direction: row-reverse;\"\r\n                                       label=\"Continue\" type=\"button\" (click)=\"onSubmit()\" >\r\n            </storybook-button-continue>\r\n\r\n      </div>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n","import {\r\n  Component, ComponentFactoryResolver, ComponentRef,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n  SimpleChanges, Type,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { StoryInput } from \"src/stories/inputs/input/story-input.model\";\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport {CodeInputComponent} from \"../../inputs/code-input/code-input.component\";\r\nimport {DynamicCompDirective} from \"../../directive/dynamic-comp.directive\";\r\nimport {PopoverOptions} from \"../../directive/popover.interface\";\r\n\r\n\r\nexport interface AdComponent {\r\n  content: any;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-forgot-pass-form',\r\n  templateUrl: './forgot-pass-form.component.html',\r\n  styleUrls: ['./forgot-pass-form.component.scss'],\r\n})\r\nexport default class ForgotPassFormComponent implements OnInit {\r\n\r\n  codeLength: number = 4;\r\n  code: string = '';\r\n  param = {language: 'login-main'};\r\n  formButtonLabel: string = 'Send me a Verification Code';\r\n  formButtonClick: string = 'generateNewCodeFor2SV.emit()';\r\n\r\n  @Input() status?: any;\r\n\r\n  @Input() isLoading: boolean = false;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onPinInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onArchiveInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() sendVerificationReq: EventEmitter<string> = new EventEmitter();\r\n\r\n  @Output() generateNewCodeFor2SV: EventEmitter<void> = new EventEmitter();\r\n\r\n  @ViewChild(DynamicCompDirective, {static: true}) appDynamicComp!: DynamicCompDirective;\r\n  //@ViewChild('codeInput') codeInput!: CodeInputComponent;\r\n\r\n  @Output() clickXButton: EventEmitter<void> = new EventEmitter();\r\n\r\n  @ViewChild('secondHeader', { static: false }) secondHeader?: ElementRef;\r\n\r\n  @ViewChild('formHeader', { static: false }) formHeader?: ElementRef;\r\n\r\n  @ViewChild('formFields', { static: false }) formFields?: ElementRef;\r\n\r\n  @ViewChild('formButton', { static: false }) formButton?: ElementRef;\r\n\r\n  @Input() isVerSuccess = false;\r\n\r\n  @Input() isRecSuccess = false;\r\n\r\n  constructor(private renderer: Renderer2,\r\n              private componentFactoryResolver: ComponentFactoryResolver) {}\r\n\r\n  changeLog: string[] = [];\r\n\r\n\r\n  @Input()\r\n  set storyInputs(arr: StoryInput[]) {\r\n    const initialTasks = [\r\n      ...arr.filter(t => t.state === 'USER NAME'),\r\n      ...arr.filter(t => t.state !== 'USER NAME'),\r\n    ];\r\n    const filteredTasks = initialTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME'\r\n    );\r\n    this.storyInputsInOrder = filteredTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME'\r\n    );\r\n  }\r\n\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.isRecSuccess) {\r\n      if (!changes.isRecSuccess.previousValue &&  changes.isRecSuccess.currentValue) {\r\n        console.warn('Identify Request Succeeded!');\r\n        this.movToVerifyState();\r\n      }\r\n    }\r\n\r\n    if (changes.isVerSuccess) {\r\n      if (!changes.isVerSuccess.previousValue &&  changes.isVerSuccess.currentValue) {\r\n        console.warn('Verify Request Succeeded!');\r\n        //this.changeFormToPinCodeState();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  onSubmit(): void {\r\n    if (!this.isRecSuccess) {this.generateNewCodeFor2SV.emit();}\r\n    /*else if (!this.isVerSuccess) {\r\n      console.info('Send Verification Request!');\r\n      this.sendVerificationReq.emit(this.code);\r\n      if (!this.status.isVerSuccess) {this.codeInputComponentRef?.instance.reset();}\r\n    }*/\r\n    else {this.clickXButton.emit();}\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * Component property to define ordering of Inputs\r\n   */\r\n  storyInputsInOrder: StoryInput[] = [];\r\n\r\n  @Input() mForm: FormGroup = new FormGroup({});\r\n\r\n  // this called every time when user changed the code\r\n  onCodeChanged(code: string) {\r\n    this.code = code;\r\n    //console.log('code entered: '+ this.code);\r\n  }\r\n\r\n  // this called only if user entered full code\r\n  onCodeCompleted(code: string) {\r\n    //\r\n  }\r\n\r\n  popoverOptions: AdComponent = {\r\n    content: CodeInputComponent\r\n  };\r\n\r\n  codeInputComponentRef?: ComponentRef<any>;\r\n\r\n  movToVerifyState(){\r\n    this.renderer.setProperty(this.formHeader?.nativeElement ,'innerHTML',\r\n      'Reset Password');\r\n\r\n    this.renderer.setProperty(this.secondHeader?.nativeElement ,'innerHTML',\r\n      'A new temporary password has been sent to<br>your email address'); //+\r\n      //'Once received, use the temporary password to log in<br>' +\r\n      //'You will be required to create a new secure password once logged in<br>'\r\n\r\n    this.formButtonLabel = 'Continue';\r\n\r\n    this.formButtonClick = '\"onSubmit()\"';\r\n\r\n\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(<Type<any>>this.popoverOptions.content);\r\n    const viewContainerRef = this.appDynamicComp.viewContainerRef;\r\n    viewContainerRef.clear();\r\n    this.codeInputComponentRef = viewContainerRef.createComponent(componentFactory);\r\n    this.codeInputComponentRef.instance.codeChanged.subscribe(($event: string) => {\r\n      this.onCodeChanged($event);\r\n      console.log(\"Code Changed\");\r\n    });\r\n\r\n\r\n  }\r\n}\r\n\r\n","\r\n\r\n\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <storybook-card class=\"card-container\"></storybook-card>\r\n  <div  class=\"h-100 d-flex align-items-center justify-content-center\">\r\n    <storybook-button-ex id=\"button-ex\" (click)=\"this.clickXButton.emit()\" ></storybook-button-ex>\r\n    <div  #formHeader class=\"form-header\">\r\n      Forgot Password?\r\n    </div>\r\n\r\n    <br>\r\n    <!--form name=\"form\"  (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate --> <!-- *ngIf=\"!isConfigSuccess\"-->\r\n    <form name=\"currentForm\" [formGroup]=\"mForm\">\r\n      <div  class=\"Vector\">\r\n\r\n\r\n\r\n        <div class=\"second-header\" style=\"top: 5px;\">\r\n          <p class=\"second-header-text\"  #secondHeader href=\"#/login\" style=\"position: relative; top: 5px; text-align: left\">\r\n            {{ 'Please enter your User Name:'}}<br>\r\n          </p>\r\n        </div>\r\n\r\n\r\n        <div #formFields id=\"button-successfully\" style=\"\">\r\n          <storybook-button-successfully  *ngIf=\"status.isRecSuccess\"  style=\"position: relative; top: 15px\"></storybook-button-successfully>\r\n          <ng-template  *ngIf=\"status.isVerSuccess\"  appDynamicComp>\r\n\r\n          </ng-template>\r\n\r\n          <storybook-input  style=\"\" *ngIf=\"!status.isRecSuccess\"\r\n                           [storyInput]=\"storyInputsInOrder[0]\"\r\n                           (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                           (onPinInput)=\"onPinInput.emit($event)\"\r\n                           [currentForm]=\"mForm\">\r\n          </storybook-input>\r\n          <!--code-input *ngIf=\"!status.isVerSuccess\"\r\n                      #codeInput\r\n                      [codeLength]=\"codeLength\"\r\n                      (codeChanged)=\"onCodeChanged($event)\"\r\n                      (codeCompleted)=\"onCodeCompleted($event)\">\r\n          </code-input-->\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        <div class=\"login-button\">\r\n          <div class=\"login-failed-message\" role=\"alert\" style=\"position: relative; top: 15px\">\r\n            <table *ngIf=\"this.status?.isVerFailed\">\r\n              <tr>{{ this.status?.verErrorMessage.toString()  | apiErrorMessage: param }}</tr>\r\n              <tr  *ngFor=\"let message of this.status?.verErrorMessage.data?.confirmPassword.split(', ')\">{{message.trim() | apiErrorMessage: param }}</tr>\r\n            </table>\r\n          </div>\r\n\r\n          <storybook-button-continue #formButton size=\"small\" [label]=\"this.formButtonLabel\" type=\"button\"\r\n                                     (onClick)=\"this.onSubmit()\" style=\"position: relative; top: 15px\"></storybook-button-continue>\r\n\r\n\r\n          <a *ngIf=\"status.isRecSuccess && !status.isVerSuccess\" class=\"resend-verification\"  (click)=\"generateNewCodeFor2SV.emit()\" style=\"position: relative; top: 40px;\">\r\n            {{ 'Send me a reset password once again'  }}\r\n          </a>\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n      </div>\r\n\r\n\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n","import {Component, ElementRef, EventEmitter, Input, OnInit, Output, Renderer2, ViewChild} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { StoryInput } from \"../../inputs/input/story-input.model\";\r\nimport { AuthService } from '../../../app/_services/auth.service';\r\n//import {ApiErrorMessageService} from \"../../../app/storybook/pipes/api-error-message.service\";\r\n//import {ApiErrorMessageService} from \"../../../app/storybook/pipes/api-error-message.service\";\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-login-form',\r\n  templateUrl: './login-form.component.html',\r\n  styleUrls: ['./login-form.css'],\r\n})\r\nexport default class LoginFormComponent implements OnInit {\r\n\r\n\r\n  param = {language: 'login-main'};\r\n\r\n  @Input() formService!: AuthService;\r\n\r\n  @Input() isLoginFailed = false;\r\n\r\n  @Input() loginErrorMessage = '';\r\n\r\n  @Input() isLoading: boolean = false;\r\n\r\n\r\n  openReplacePassword() {\r\n    //this.replacePassFormService.open(ReplacePassForm2Component);\r\n  }\r\n\r\n  constructor(/*private apiErrorMessage: ApiErrorMessageService*/) {\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * @ignore\r\n   * Component property to define ordering of Inputs\r\n   */\r\n  storyInputsInOrder: StoryInput[] = [];\r\n\r\n  @Input() mForm: FormGroup = new FormGroup({});\r\n\r\n  @Input() isLoggedIn = false;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onPinInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onArchiveInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() sendLoginReq = new EventEmitter();\r\n\r\n  @Output() openForgetPassForm = new EventEmitter();\r\n\r\n\r\n  @Input()\r\n  set storyInputs(arr: StoryInput[]) {\r\n    const initialTasks = [\r\n      ...arr.filter(t => t.state === 'USER NAME'),\r\n      ...arr.filter(t => t.state !== 'USER NAME'),\r\n    ];\r\n    const filteredTasks = initialTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME'\r\n    );\r\n    this.storyInputsInOrder = filteredTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME'\r\n    );\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.warn('Login Request!');\r\n\r\n    this.sendLoginReq.emit();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  get userName(): AbstractControl {\r\n    return this.mForm?.get('username')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.mForm?.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.mForm?.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.mForm?.get('phone')!;\r\n  }\r\n\r\n\r\n}\r\n\r\n","\r\n\r\n\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <storybook-card class=\"card-container\"></storybook-card>\r\n  <div  class=\"h-100 d-flex align-items-center justify-content-center\">\r\n    <div class=\"form-header\">\r\n      <a>Aeonix App Center</a>\r\n    </div>\r\n    <div><storybook-spinner1  *ngIf=\"isLoading\"></storybook-spinner1></div>\r\n\r\n    <br>\r\n    <!--form name=\"form\"  (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate --> <!-- *ngIf=\"!isConfigSuccess\"-->\r\n      <form name=\"currentForm\"   [formGroup]=\"mForm\">\r\n      <div  *ngIf=\"!isLoggedIn\" class=\"Vector\">\r\n\r\n        <div class=\"login-button\">\r\n\r\n            <div *ngIf=\"isLoggedIn\">isConfigSuccess</div>\r\n            <div *ngIf=\"!isLoggedIn && storyInputsInOrder.length === 0\">empty</div>\r\n            <storybook-input\r\n              [storyInput]=\"storyInputsInOrder[0]\"\r\n              (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n              (onPinInput)=\"onPinInput.emit($event)\"\r\n              [currentForm]=\"mForm\">\r\n            </storybook-input>\r\n\r\n            <storybook-input\r\n              [storyInput]=\"storyInputsInOrder[1]\"\r\n              (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n              (onPinInput)=\"onPinInput.emit($event)\"\r\n              [currentForm]=\"mForm\">\r\n            </storybook-input>\r\n\r\n\r\n            <br>\r\n            <div class=\"thematic-break\"></div>\r\n            <div class=\"login-failed-message\" role=\"alert\" >\r\n              <p *ngIf=\"isLoginFailed\">*  {{ loginErrorMessage | apiErrorMessage: param }}</p>\r\n            </div>\r\n\r\n\r\n            <a (click)=\"this.openForgetPassForm.emit();\" class=\"forgot-password\"  >\r\n              {{ 'Forgot password?'  }}\r\n            </a>\r\n\r\n            <storybook-button-continue size=\"medium\" label=\"Continue \" type=\"button\" (click)=\"onSubmit()\" ></storybook-button-continue>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n","import {\r\n  AfterViewChecked,\r\n  Component, Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input, OnChanges,\r\n  OnInit,\r\n  Output,\r\n  QueryList,\r\n  Renderer2, SimpleChanges, ViewChild,\r\n  ViewChildren\r\n} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport {ApiErrorMessageService} from \"../../../app/storybook/pipes/api-error-message.service\";\r\nimport {AccountInput} from \"../../inputs/account-input/account-input.model\";\r\n//import {BehaviorSubject} from \"rxjs\";\r\n//import {AccountInputComponent} from \"../inputs/input/story-input.component\";\r\n\r\n/*\r\n@Directive({selector: 'storybook-input'})\r\nexport class AccountInput {\r\n  @Input() storyInput!: AccountInput;\r\n}\r\n*/\r\n@Component({\r\n  selector: 'storybook-my-account-form',\r\n  templateUrl: './my-account-form.component.html',\r\n  styleUrls: ['./my-account-form.css'],\r\n})\r\nexport default class MyAccountFormComponent implements OnInit, AfterViewChecked, OnChanges {\r\n\r\n  @Output() onLogout = new EventEmitter<Event>();\r\n\r\n  @Output() openUser = new EventEmitter<Event>();\r\n\r\n  doLogout(event: Event) {\r\n    this.onLogout.emit(event);\r\n    this.clickXButton.emit();\r\n  }\r\n\r\n  @Input() formService!: AuthService;\r\n\r\n  credentials: any = {\r\n    username: null,\r\n    password: null\r\n  };\r\n\r\n  @Input() isRegFailed = false;\r\n  @Input() regErrorMessage: any = {};\r\n  @Input() displayToolButton: boolean = false;\r\n\r\n\r\n  @ViewChild('storybook-input', { static: false }) storybookInput?: ElementRef;\r\n\r\n\r\n  param = {language: 'login-main'};\r\n\r\n  constructor(private renderer: Renderer2) {\r\n  }\r\n\r\n  storyInputsInOrder: AccountInput[] = [];\r\n\r\n  @Input() mForm: FormGroup  = new FormGroup({});\r\n\r\n  changeLog: string[] = [];\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.isRegSuccess) {\r\n      if (!changes.isRegSuccess.previousValue &&  changes.isRegSuccess.currentValue) {\r\n        console.warn('Change Detail Succeeded!');\r\n      }\r\n    }\r\n  }\r\n\r\n  @Input() isLoading: boolean = false;\r\n\r\n  @Input() isRegSuccess = false;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onPinInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onSaveChanges: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() sendRegReq: EventEmitter<void> = new EventEmitter();\r\n\r\n  @Output() clickXButton: EventEmitter<void> = new EventEmitter();\r\n\r\n  @Output() changePassword: EventEmitter<void> = new EventEmitter();\r\n\r\n  @Output() changedDetailSave: EventEmitter<String> = new EventEmitter();\r\n\r\n\r\n\r\n  @Input()\r\n  set storyInputs(arr: AccountInput[]) {\r\n    const initialTasks = [\r\n      ...arr.filter(t => t.state === 'USER NAME'),\r\n      ...arr.filter(t => t.state !== 'USER NAME'),\r\n    ];\r\n    const filteredTasks = initialTasks.filter(\r\n      t =>  t.state === 'PASSWORD' || t.state === 'USER NAME' || t.state === 'EMAIL' || t.state === 'PHONE NUMBER FOR AUTHENTICATION'\r\n    );\r\n    this.storyInputsInOrder = filteredTasks.filter(\r\n      t => t.state === 'PASSWORD' || t.state === 'USER NAME' || t.state === 'EMAIL' || t.state === 'PHONE NUMBER FOR AUTHENTICATION');\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.warn('Registry Request Sent!');\r\n    this.sendRegReq.emit();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n  get userName(): AbstractControl {\r\n    return this.mForm?.get('username')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.mForm?.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.mForm?.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.mForm?.get('phone')!;\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    //console.log(this.childComp?.length)\r\n  }\r\n\r\n}\r\n\r\n","\r\n\r\n\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <storybook-card class=\"card-container\"></storybook-card>\r\n  <div  class=\"h-100 d-flex align-items-center justify-content-center\">\r\n    <storybook-button-ex id=\"button-ex\" (click)=\"this.clickXButton.emit()\" ></storybook-button-ex>\r\n    <button id=\"button-log-out\" (click)=\"this.doLogout($event)\" >Log out</button>\r\n    <label style=\"top: 1px; display: inline;\">Log out</label>\r\n    <div class=\"form-header\">\r\n\r\n      <a class=\"main-form-header\" >My Account</a>\r\n      <br>\r\n\r\n    <br>\r\n\r\n    <!--form name=\"form\"  (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate --> <!-- *ngIf=\"!isConfigSuccess\"-->\r\n      <form name=\"currentForm\"   [formGroup]=\"mForm\">\r\n\r\n      <div class=\"Vector\">\r\n\r\n        <storybook-spinner1  *ngIf=\"isLoading\"></storybook-spinner1>\r\n        <!--div *ngIf=\"isRegSuccess\" id=\"button-successfully\" style=\"\">\r\n          <storybook-button-successfully   style=\"position: relative; margin-bottom: 50px;\"></storybook-button-successfully>\r\n        </div-->\r\n\r\n        <div class=\"login-button\">\r\n            <div></div>\r\n            <div>\r\n              <storybook-account-input\r\n                [storyInput]=\"storyInputsInOrder[0]\"\r\n                (onSaveChanges)=\"onSaveChanges.emit($event)\"\r\n                [regErrorMessage]=\"regErrorMessage\"\r\n                [currentForm]=\"mForm\">\r\n              </storybook-account-input>\r\n              <div class=\"thematic-break\"></div>\r\n              <storybook-account-input\r\n                [storyInput]=\"storyInputsInOrder[1]\"\r\n                (onSaveChanges)=\"onSaveChanges.emit($event)\"\r\n                [currentForm]=\"mForm\"\r\n                [regErrorMessage]=\"regErrorMessage\"\r\n                [conditionList]=\"['requiresPhone']\">\r\n              </storybook-account-input>\r\n              <div class=\"thematic-break\"></div>\r\n              <storybook-account-input\r\n                [storyInput]=\"storyInputsInOrder[2]\"\r\n                (onSaveChanges)=\"onSaveChanges.emit($event)\"\r\n                [regErrorMessage]=\"regErrorMessage\"\r\n                [currentForm]=\"mForm\"\r\n                [conditionList]=\"['requiresEmail']\">\r\n              </storybook-account-input>\r\n              <div class=\"thematic-break\"></div>\r\n              <storybook-account-input\r\n                [storyInput]=\"storyInputsInOrder[3]\"\r\n                (changePassword)=\"changePassword.emit($event)\"\r\n                [regErrorMessage]=\"regErrorMessage\"\r\n                [currentForm]=\"mForm\">\r\n              </storybook-account-input>\r\n\r\n            </div>\r\n\r\n            <div class=\"login-failed-message\" role=\"alert\" >\r\n              <p *ngIf=\"isRegFailed\">*  {{ this.regErrorMessage | apiErrorMessage: param }}</p>\r\n            </div>\r\n\r\n\r\n            <storybook-button-configuration *ngIf=\"displayToolButton\" class=\"button-configuration\" size=\"large\"\r\n                                            (click)=\"this.openUser.emit()\">\r\n            </storybook-button-configuration>\r\n        </div>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n","import {\r\n  AfterViewChecked,\r\n  Component, Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input, OnChanges,\r\n  OnInit,\r\n  Output,\r\n  QueryList,\r\n  Renderer2, SimpleChanges, ViewChild,\r\n  ViewChildren\r\n} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { StoryInput } from \"src/stories/inputs/input/story-input.model\";\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport {ApiErrorMessageService} from \"../../../app/storybook/pipes/api-error-message.service\";\r\n//import {BehaviorSubject} from \"rxjs\";\r\n//import {AccountInputComponent} from \"../inputs/input/story-input.component\";\r\n\r\n/*\r\n@Directive({selector: 'storybook-input'})\r\nexport class AccountInput {\r\n  @Input() storyInput!: AccountInput;\r\n}\r\n*/\r\n@Component({\r\n  selector: 'storybook-registry-form',\r\n  templateUrl: './registry-form.component.html',\r\n  styleUrls: ['./registry-form.css'],\r\n})\r\nexport default class RegistryFormComponent implements OnInit, AfterViewChecked, OnChanges {\r\n\r\n/*\r\n  @ViewChild('storybook-input')\r\n  set mStoryInput(v: AccountInput) {\r\n    setTimeout(() => {\r\n      this.selectedPane = v.id;\r\n      console.log('this.selectedPane'+this.selectedPane.toString())\r\n    }, 30);\r\n  }\r\n  selectedPane: string = '';\r\n  shouldShow = true;\r\n  toggle() {\r\n    this.shouldShow = !this.shouldShow;\r\n  }\r\n*/\r\n\r\n  @Input() formService!: AuthService;\r\n\r\n  credentials: any = {\r\n    username: null,\r\n    password: null\r\n  };\r\n\r\n  @Input() isRegFailed = false;\r\n\r\n  @Input() regErrorMessage: any = {};\r\n\r\n  @Input() isLoading: boolean = false;\r\n\r\n  openReplacePassword() {\r\n    //this.replacePassFormService.open(ReplacePassForm2Component);\r\n  }\r\n\r\n  @ViewChild('formHeader', { static: false }) mainHeader?: ElementRef;\r\n  @ViewChild('storybook-input', { static: false }) storybookInput?: ElementRef;\r\n\r\n\r\n  param = {language: 'login-main'};\r\n\r\n  constructor(private renderer: Renderer2) {\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * Component property to define ordering of tasks\r\n   */\r\n  storyInputsInOrder: StoryInput[] = [];\r\n\r\n  @Input() mForm: FormGroup  = new FormGroup({});\r\n  /*username: new FormControl('', Validators.minLength(2)),\r\n  password: new FormControl('T@diran2022', Validators.minLength(2)),\r\n  email: new FormControl('', Validators.email),\r\n  phone: new FormControl(null, Validators.pattern(new RegExp(\"[0-9 ]{12}\")))*/\r\n\r\n  changeLog: string[] = [];\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.isRegSuccess) {\r\n      if (!changes.isRegSuccess.previousValue &&  changes.isRegSuccess.currentValue) {\r\n        console.warn('Register Request Succeeded!');\r\n        this.loadSuccessfullyLoggedIn();\r\n      }\r\n    }\r\n    /*if (changes.isConfigFailed || changes.configErrorMessage) {\r\n      console.log('isConfigFailed' + this.configErrorMessage['message'])\r\n    }*/\r\n  }\r\n\r\n\r\n\r\n  @Input() isRegSuccess = false;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onPinInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onArchiveInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() sendRegReq: EventEmitter<void> = new EventEmitter();\r\n\r\n  @Output() clickXButton: EventEmitter<void> = new EventEmitter();\r\n\r\n\r\n\r\n  @Input()\r\n  set storyInputs(arr: StoryInput[]) {\r\n    const initialTasks = [\r\n      ...arr.filter(t => t.state === 'USER NAME'),\r\n      ...arr.filter(t => t.state !== 'USER NAME'),\r\n    ];\r\n    const filteredTasks = initialTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME' || t.state === 'EMAIL' || t.state === 'PHONE NUMBER FOR AUTHENTICATION'\r\n    );\r\n    this.storyInputsInOrder = filteredTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME' || t.state === 'EMAIL' || t.state === 'PHONE NUMBER FOR AUTHENTICATION');\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.warn('Registry Request Sent!');\r\n\r\n    //this.renderer.setAttribute(this.storybookInput?.nativeElement ,'hidden', 'true');\r\n    //this.renderer.setAttribute(this.mainHeader?.nativeElement ,'hidden', 'true');\r\n    //this.renderer.setProperty(this.mainHeader?.nativeElement ,'innerHTML','You have successfully complete your registeration!');\r\n\r\n\r\n    //this.renderer.setAttribute(this.storybookInput?.nativeElement ,'innerHTML','true');\r\n    this.sendRegReq.emit();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n  get userName(): AbstractControl {\r\n    return this.mForm?.get('username')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.mForm?.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.mForm?.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.mForm?.get('phone')!;\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    //console.log(this.childComp?.length)\r\n  }\r\n\r\n  loadSuccessfullyLoggedIn(){\r\n    this.renderer.setProperty(this.mainHeader?.nativeElement ,'innerHTML','You have successfully complete your registeration!');\r\n\r\n\r\n  }\r\n\r\n}\r\n\r\n","\r\n\r\n\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <storybook-card class=\"card-container\"></storybook-card>\r\n  <div  class=\"h-100 d-flex align-items-center justify-content-center\">\r\n    <storybook-button-ex id=\"button-ex\" (click)=\"this.clickXButton.emit()\" ></storybook-button-ex>\r\n    <div class=\"form-header\">\r\n      <a class=\"main-form-header\" #formHeader>Complete Registration</a>\r\n      <br>\r\n      <a *ngIf=\"!isRegSuccess\" class=\"sub-form-header\">complete the registration by filling the missing info:</a>\r\n\r\n    <br>\r\n    <!--form name=\"form\"  (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate --> <!-- *ngIf=\"!isConfigSuccess\"-->\r\n      <form name=\"currentForm\"   [formGroup]=\"mForm\">\r\n      <div class=\"Vector\">\r\n\r\n\r\n        <div *ngIf=\"isRegSuccess\" id=\"button-successfully\" style=\"\">\r\n          <storybook-button-successfully   style=\"position: relative; margin-bottom: 50px;\"></storybook-button-successfully>\r\n        </div>\r\n\r\n        <div class=\"login-button\">\r\n            <div *ngIf=\"!isRegSuccess && storyInputsInOrder.length === 0\">empty</div>\r\n            <div *ngIf=\"!isRegSuccess\">\r\n              <storybook-input\r\n                [storyInput]=\"storyInputsInOrder[0]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\">\r\n              </storybook-input>\r\n              <storybook-input\r\n                [storyInput]=\"storyInputsInOrder[1]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\">\r\n              </storybook-input>\r\n              <storybook-input\r\n                [storyInput]=\"storyInputsInOrder[2]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\"\r\n                [conditionList]=\"['requiresPhone']\">\r\n              </storybook-input>\r\n              <storybook-input\r\n                [storyInput]=\"storyInputsInOrder[3]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\"\r\n                [conditionList]=\"['requiresEmail']\">\r\n              </storybook-input>\r\n              <!--storybook-input\r\n                *ngFor=\"let storyInput of storyInputsInOrder\"\r\n                [storyInput]=\"storyInput\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\">\r\n              </storybook-input-->\r\n            </div>\r\n\r\n            <div *ngIf=\"!isRegSuccess\" class=\"thematic-break\"></div>\r\n            <div class=\"login-failed-message\" role=\"alert\" >\r\n              <p *ngIf=\"isRegFailed\">*  {{ this.regErrorMessage['message'] | apiErrorMessage: param }}</p>\r\n            </div>\r\n\r\n            <storybook-button-continue [label]=\"isRegSuccess ? 'Continue' :'Complete Rgistration'\"  size=\"small\"\r\n                                       label=\"Continue\" type=\"button\" (click)=\"onSubmit()\" >\r\n            </storybook-button-continue>\r\n        </div>\r\n        </div>\r\n\r\n    </form>\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n","import {\r\n  AfterViewChecked,\r\n  Component, Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input, OnChanges,\r\n  OnInit,\r\n  Output,\r\n  QueryList,\r\n  Renderer2, SimpleChanges, ViewChild,\r\n  ViewChildren\r\n} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { StoryInput } from \"src/stories/inputs/input/story-input.model\";\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport {PopoverOptions} from \"../../directive/popover.interface\";\r\nimport {ActionInputComponent} from \"../../actions/action-input/action-input.component\";\r\n//import {BehaviorSubject} from \"rxjs\";\r\n//import {AccountInputComponent} from \"../inputs/input/story-input.component\";\r\n\r\n/*\r\n@Directive({selector: 'storybook-input'})\r\nexport class AccountInput {\r\n  @Input() storyInput!: AccountInput;\r\n}\r\n*/\r\n@Component({\r\n  selector: 'storybook-replace-pass-form',\r\n  templateUrl: './replace-pass-form.component.html',\r\n  styleUrls: ['./replace-pass-form.css'],\r\n})\r\nexport default class ReplacePassFormComponent implements OnInit, AfterViewChecked, OnChanges {\r\n\r\n  popover: PopoverOptions = {\r\n    content: ActionInputComponent\r\n  };\r\n\r\n  param = {language: 'login-main'};\r\n\r\n\r\n\r\n\r\n\r\n  @Input() formService!: AuthService;\r\n\r\n  credentials: any = {\r\n    username: null,\r\n    password: null\r\n  };\r\n\r\n  @Input() isRepFailed = false;\r\n\r\n  @Input() isRepSuccess = false;\r\n\r\n\r\n  @Input() repErrorMessage = '';\r\n\r\n  openReplacePassword() {\r\n    //this.replacePassFormService.open(ReplacePassForm2Component);\r\n  }\r\n\r\n  @ViewChild('formHeader', { static: false }) mainHeader?: ElementRef;\r\n  @ViewChild('storybook-input', { static: false }) storybookInput?: ElementRef;\r\n\r\n\r\n\r\n\r\n  constructor(private renderer: Renderer2) {\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * Component property to define ordering of tasks\r\n   */\r\n  storyInputsInOrder: StoryInput[] = [];\r\n\r\n  @Input() mForm: FormGroup  = new FormGroup({});\r\n\r\n\r\n  changeLog: string[] = [];\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.isRepSuccess) {\r\n      if (!changes.isRepSuccess.previousValue &&  changes.isRepSuccess.currentValue) {\r\n        console.warn('ReplacePassForm Request Succeeded!');\r\n        this.loadSuccessfullyLoggedIn();\r\n      }\r\n    }\r\n  }\r\n\r\n  @Input() status?: any;\r\n\r\n  @Input() isLoading: boolean = false;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onPinInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onArchiveInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() sendRegReq: EventEmitter<void> = new EventEmitter();\r\n\r\n  @Output() clickXButton: EventEmitter<void> = new EventEmitter();\r\n\r\n\r\n  @Input()\r\n  set storyInputs(arr: StoryInput[]) {\r\n    const initialTasks = [\r\n      ...arr.filter(t => t.state === 'USER NAME'),\r\n      ...arr.filter(t => t.state !== 'USER NAME'),\r\n    ];\r\n    const filteredTasks = initialTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME' || t.state === 'EMAIL' || t.state === 'PHONE NUMBER FOR AUTHENTICATION'\r\n    );\r\n    this.storyInputsInOrder = filteredTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME' || t.state === 'EMAIL' || t.state === 'PHONE NUMBER FOR AUTHENTICATION');\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.warn('ReplacePassForm Request Sent!');\r\n\r\n    //this.renderer.setAttribute(this.storybookInput?.nativeElement ,'hidden', 'true');\r\n    //this.renderer.setAttribute(this.mainHeader?.nativeElement ,'hidden', 'true');\r\n    //this.renderer.setProperty(this.mainHeader?.nativeElement ,'innerHTML','You have successfully complete your registeration!');\r\n\r\n\r\n    //this.renderer.setAttribute(this.storybookInput?.nativeElement ,'innerHTML','true');\r\n    this.sendRegReq.emit();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n  get userName(): AbstractControl {\r\n    return this.mForm?.get('username')!;\r\n  }\r\n\r\n  get oldPassword(): AbstractControl {\r\n    return this.mForm?.get('oldPassword')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.mForm?.get('password')!;\r\n  }\r\n\r\n  get confirmPassword(): AbstractControl {\r\n    return this.mForm?.get('confirmPassword')!;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  ngAfterViewChecked(): void {\r\n    //console.log(this.childComp?.length)\r\n  }\r\n\r\n  loadSuccessfullyLoggedIn(){\r\n    this.renderer.setProperty(this.mainHeader?.nativeElement ,'innerHTML','You have successfully changed your password!');\r\n  }\r\n\r\n}\r\n\r\n","\r\n\r\n\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <storybook-card class=\"card-container\"></storybook-card>\r\n  <div  class=\"h-100 d-flex align-items-center justify-content-center\">\r\n    <storybook-button-ex id=\"button-ex\" (click)=\"this.clickXButton.emit()\" ></storybook-button-ex>\r\n    <div class=\"form-header\">\r\n      <a class=\"main-form-header\" #formHeader>Change Password</a>\r\n      <br>\r\n\r\n      <br>\r\n      <form name=\"currentForm\"   [formGroup]=\"mForm\">\r\n        <div class=\"Vector\">\r\n\r\n          <div *ngIf=\"status.isRepSuccess\" id=\"button-successfully\" style=\"\">\r\n            <storybook-button-successfully   style=\"position: relative; margin-bottom: 50px;\"></storybook-button-successfully>\r\n          </div>\r\n\r\n          <div class=\"login-button\">\r\n              <div *ngIf=\"!status.isRepSuccess && storyInputsInOrder.length === 0\">empty</div>\r\n              <div *ngIf=\"!status.isRepSuccess\">\r\n                <storybook-input\r\n                  [storyInput]=\"storyInputsInOrder[0]\"\r\n                  (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                  (onPinInput)=\"onPinInput.emit($event)\"\r\n                  [currentForm]=\"mForm\">\r\n                </storybook-input>\r\n\r\n                <div *ngIf=\"!status.isRepSuccess\" class=\"thematic-break\"></div>\r\n\r\n                <storybook-input\r\n                  [storyInput]=\"storyInputsInOrder[1]\"\r\n                  (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                  (onPinInput)=\"onPinInput.emit($event)\"\r\n                  [currentForm]=\"mForm\"\r\n                  [conditionList]=\"['minLength','requiresUppercase','requiresLowercase','requiresDigit','requiresSpecialChars']\">\r\n                </storybook-input>\r\n\r\n\r\n                <div></div>\r\n                <storybook-input\r\n                  [storyInput]=\"storyInputsInOrder[2]\"\r\n                  (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                  (onPinInput)=\"onPinInput.emit($event)\"\r\n                  [currentForm]=\"mForm\"\r\n                  [conditionList]=\"['minLength','requiresUppercase','requiresLowercase','requiresDigit','requiresSpecialChars']\">\r\n                </storybook-input>\r\n              </div>\r\n\r\n              <br>\r\n                <div class=\"login-failed-message\" role=\"alert\" >\r\n                  <table *ngIf=\"this.status?.isRepFailed\">\r\n                    <tr>{{ this.status?.repErrorMessage['message'] | apiErrorMessage: param }}</tr>\r\n                    <tr  *ngFor=\"let message of this.status?.repErrorMessage.data?.confirmPassword.split(', ')\">{{message.trim() | apiErrorMessage: param }}</tr>\r\n                  </table>\r\n                </div>\r\n              <storybook-button-continue [label]=\"status.isRepSuccess ? 'Continue' :'Change Password'\" size=\"small\"\r\n                                         label=\"Continue\" type=\"button\" (click)=\"onSubmit()\" >\r\n              </storybook-button-continue>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import {\r\n  Component, ComponentFactoryResolver, ComponentRef,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n  SimpleChanges, Type,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { StoryInput } from \"src/stories/inputs/input/story-input.model\";\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport {CodeInputComponent} from \"../../inputs/code-input/code-input.component\";\r\nimport {DynamicCompDirective} from \"../../directive/dynamic-comp.directive\";\r\nimport {PopoverOptions} from \"../../directive/popover.interface\";\r\n\r\n\r\nexport interface AdComponent {\r\n  content: any;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-reset-pass-form',\r\n  templateUrl: './reset-pass-form.component.html',\r\n  styleUrls: ['./reset-pass-form.component.scss'],\r\n})\r\nexport default class ResetPassFormComponent implements OnInit {\r\n\r\n  codeLength: number = 4;\r\n  code: string = '';\r\n  param = {language: 'login-main'};\r\n  formButtonLabel: string = 'Send me a Verification Code';\r\n  formButtonClick: string = 'generateNewCodeFor2SV.emit()';\r\n\r\n  @Input() status?: any;\r\n\r\n  @Input() isLoading: boolean = false;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onPinInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onArchiveInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() sendVerificationReq: EventEmitter<string> = new EventEmitter();\r\n\r\n  @Output() generateNewCodeFor2SV: EventEmitter<void> = new EventEmitter();\r\n\r\n  @ViewChild(DynamicCompDirective, {static: true}) appDynamicComp!: DynamicCompDirective;\r\n  //@ViewChild('codeInput') codeInput!: CodeInputComponent;\r\n\r\n  @Output() clickXButton: EventEmitter<void> = new EventEmitter();\r\n\r\n  @ViewChild('secondHeader', { static: false }) secondHeader?: ElementRef;\r\n\r\n  @ViewChild('formHeader', { static: false }) formHeader?: ElementRef;\r\n\r\n  @ViewChild('formFields', { static: false }) formFields?: ElementRef;\r\n\r\n  @ViewChild('formButton', { static: false }) formButton?: ElementRef;\r\n\r\n  @Input() isVerSuccess = false;\r\n\r\n  @Input() isRecSuccess = false;\r\n\r\n  constructor(private renderer: Renderer2,\r\n              private componentFactoryResolver: ComponentFactoryResolver) {}\r\n\r\n  changeLog: string[] = [];\r\n\r\n\r\n  @Input()\r\n  set storyInputs(arr: StoryInput[]) {\r\n    const initialTasks = [\r\n      ...arr.filter(t => t.state === 'USER NAME'),\r\n      ...arr.filter(t => t.state !== 'USER NAME'),\r\n    ];\r\n    const filteredTasks = initialTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME'\r\n    );\r\n    this.storyInputsInOrder = filteredTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME'\r\n    );\r\n  }\r\n\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.isRecSuccess) {\r\n      if (!changes.isRecSuccess.previousValue &&  changes.isRecSuccess.currentValue) {\r\n        console.warn('Identify Request Succeeded!');\r\n        this.movToVerifyState();\r\n      }\r\n    }\r\n\r\n    if (changes.isVerSuccess) {\r\n      if (!changes.isVerSuccess.previousValue &&  changes.isVerSuccess.currentValue) {\r\n        console.warn('Verify Request Succeeded!');\r\n        //this.changeFormToPinCodeState();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  onSubmit(): void {\r\n    if (!this.isRecSuccess) {this.generateNewCodeFor2SV.emit();}\r\n    else if (!this.isVerSuccess) {\r\n      console.info('Send Verification Request!');\r\n      this.sendVerificationReq.emit(this.code);\r\n      if (!this.status.isVerSuccess) {this.codeInputComponentRef?.instance.reset();/*this.codeInput.reset();*/}\r\n    }\r\n    else {}\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * Component property to define ordering of Inputs\r\n   */\r\n  storyInputsInOrder: StoryInput[] = [];\r\n\r\n  @Input() mForm: FormGroup = new FormGroup({});\r\n\r\n  // this called every time when user changed the code\r\n  onCodeChanged(code: string) {\r\n    this.code = code;\r\n    //console.log('code entered: '+ this.code);\r\n  }\r\n\r\n  // this called only if user entered full code\r\n  onCodeCompleted(code: string) {\r\n    //\r\n  }\r\n\r\n  popoverOptions: AdComponent = {\r\n    content: CodeInputComponent\r\n  };\r\n\r\n  codeInputComponentRef?: ComponentRef<any>;\r\n\r\n  movToVerifyState(){\r\n    this.renderer.setProperty(this.secondHeader?.nativeElement ,'innerHTML',\r\n      'Please enter the Verification Code<br>you received in your mail:');\r\n\r\n    this.renderer.setProperty(this.formHeader?.nativeElement ,'innerHTML',\r\n      'Change Password');\r\n\r\n\r\n    this.formButtonLabel = 'Continue';\r\n\r\n    this.formButtonClick = '\"onSubmit()\"';\r\n\r\n    //this.renderer.setAttribute(this.formButton.  nativeElement, 'onClick', '\"onSubmit()\"' );\r\n\r\n    /*this.renderer.setProperty(this.formFields?.nativeElement ,'innerHTML',\r\n      '<code-input #codeInput [codeLength]=\"codeLength\" (codeChanged)=\"onCodeChanged($event)\" (codeCompleted)=\"onCodeCompleted($event)\"> </code-input>'\r\n    );*/\r\n\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(<Type<any>>this.popoverOptions.content);\r\n    const viewContainerRef = this.appDynamicComp.viewContainerRef;\r\n    viewContainerRef.clear();\r\n    this.codeInputComponentRef = viewContainerRef.createComponent(componentFactory);\r\n    this.codeInputComponentRef.instance.codeChanged.subscribe(($event: string) => {\r\n      this.onCodeChanged($event);\r\n      console.log(\"Code Changed\");\r\n    });\r\n\r\n\r\n    /*\r\n    this.renderer.setAttribute(this.formButton?.nativeElement, 'label', 'Continue' );\r\n\r\n\r\n\r\n    const viewContainerRef = this.appDynamicComp.viewContainerRef;\r\n    viewContainerRef.clear();\r\n\r\n    const componentRef = viewContainerRef.createComponent<CodeInputComponent>(this.popover.content);\r\n    componentRef.instance.reset()\r\n*/\r\n    //this.codeInput = this.formFields?.nativeElement.codeInput.getElement();\r\n  }\r\n}\r\n\r\n","\r\n\r\n\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <storybook-card class=\"card-container\"></storybook-card>\r\n  <div  class=\"h-100 d-flex align-items-center justify-content-center\">\r\n    <storybook-button-ex id=\"button-ex\"  (click)=\"this.clickXButton.emit()\" ></storybook-button-ex>\r\n    <div class=\"form-header\">\r\n      <a #formHeader>Forgot Password?</a>\r\n    </div>\r\n\r\n    <br>\r\n    <!--form name=\"form\"  (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate --> <!-- *ngIf=\"!isConfigSuccess\"-->\r\n    <form name=\"currentForm\" [formGroup]=\"mForm\">\r\n      <div  class=\"Vector\">\r\n\r\n        <br>\r\n        <br>\r\n        <br>\r\n\r\n        <div class=\"second-header\" style=\"top: 82px;\">\r\n          <a class=\"second-header-text\"  #secondHeader href=\"#/login\" style=\"position: relative; top: 10px; text-align: left\">\r\n            {{ 'Please enter your User Name:'}}<br>\r\n          </a>\r\n        </div>\r\n\r\n\r\n        <div #formFields id=\"button-successfully\" style=\"\">\r\n          <storybook-button-successfully  *ngIf=\"status.isVerSuccess\"  style=\"position: relative; top: 15px\"></storybook-button-successfully>\r\n          <ng-template  *ngIf=\"status.isVerSuccess\"  appDynamicComp>\r\n\r\n          </ng-template>\r\n\r\n          <storybook-input *ngIf=\"!status.isRecSuccess\"\r\n                           [storyInput]=\"storyInputsInOrder[0]\"\r\n                           (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                           (onPinInput)=\"onPinInput.emit($event)\"\r\n                           [currentForm]=\"mForm\">\r\n          </storybook-input>\r\n          <!--code-input *ngIf=\"!status.isVerSuccess\"\r\n                      #codeInput\r\n                      [codeLength]=\"codeLength\"\r\n                      (codeChanged)=\"onCodeChanged($event)\"\r\n                      (codeCompleted)=\"onCodeCompleted($event)\">\r\n          </code-input-->\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        <div class=\"login-button\">\r\n          <div class=\"login-failed-message\" role=\"alert\" style=\"position: relative; top: 15px\">\r\n            <table *ngIf=\"this.status?.isVerFailed\">\r\n              <tr>{{ this.status?.verErrorMessage.toString()  | apiErrorMessage: param }}</tr>\r\n              <tr  *ngFor=\"let message of this.status?.verErrorMessage.data?.confirmPassword.split(', ')\">{{message.trim() | apiErrorMessage: param }}</tr>\r\n            </table>\r\n          </div>\r\n\r\n          <storybook-button-continue #formButton size=\"small\" [label]=\"this.formButtonLabel\" type=\"button\"\r\n                                     (onClick)=\"this.onSubmit()\" style=\"position: relative; top: 15px\"></storybook-button-continue>\r\n\r\n\r\n          <a *ngIf=\"status.isRecSuccess && !status.isVerSuccess\" class=\"resend-verification\"  (click)=\"generateNewCodeFor2SV.emit()\" style=\"position: relative; top: 40px;\">\r\n            {{ 'resend the verification code'  }}\r\n          </a>\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n      </div>\r\n\r\n\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n","import {Component, ElementRef, EventEmitter, Input, OnInit, Output, Renderer2, ViewChild} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { StoryInput } from \"src/stories/inputs/input/story-input.model\";\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport {CodeInputComponent} from \"../../inputs/code-input/code-input.component\";\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-verification-form',\r\n  templateUrl: './verification-form.component.html',\r\n  styleUrls: ['./verification-form.component.scss'],\r\n})\r\nexport default class VerificationFormComponent implements OnInit {\r\n\r\n  codeLength: number = 4;\r\n  code: string = '';\r\n  param = {language: 'login-main'};\r\n\r\n  @Input() status?: any;\r\n\r\n  @Input() isLoading: boolean = false;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() sendVerificationReq: EventEmitter<string> = new EventEmitter();\r\n\r\n  @Output() generateNewCodeFor2SV: EventEmitter<void> = new EventEmitter();\r\n\r\n  @ViewChild('codeInput') codeInput !: CodeInputComponent;\r\n\r\n  @Output() clickXButton: EventEmitter<void> = new EventEmitter();\r\n\r\n\r\n  onSubmit(): void {\r\n    console.warn('Send Verification Request!');\r\n\r\n    this.sendVerificationReq.emit(this.code);\r\n    if (!this.status.isVerSuccess) {this.codeInput.reset();}\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n\r\n  // this called every time when user changed the code\r\n  onCodeChanged(code: string) {\r\n    this.code = code;\r\n    //console.log('code entered: '+ this.code);\r\n  }\r\n\r\n  // this called only if user entered full code\r\n  onCodeCompleted(code: string) {\r\n    //\r\n  }\r\n\r\n\r\n}\r\n\r\n","\r\n\r\n\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <storybook-card class=\"card-container\"></storybook-card>\r\n  <div  class=\"h-100 d-flex align-items-center justify-content-center\">\r\n    <storybook-button-ex id=\"button-ex\"  (click)=\"this.clickXButton.emit()\" ></storybook-button-ex>\r\n    <div class=\"form-header\">\r\n      <a >Aeonix App Center</a>\r\n    </div>\r\n\r\n    <br>\r\n    <!--form name=\"form\"  (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate --> <!-- *ngIf=\"!isConfigSuccess\"-->\r\n      <form name=\"currentForm\" >\r\n      <div  class=\"Vector\">\r\n\r\n\r\n\r\n            <!--div *ngIf=\"isLoggedIn\">isConfigSuccess</div>\r\n            <div *ngIf=\"!isLoggedIn && storyInputsInOrder.length === 0\">empty</div>\r\n            <storybook-input\r\n              [storyInput]=\"storyInputsInOrder[0]\"\r\n              (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n              (onPinInput)=\"onPinInput.emit($event)\"\r\n              [currentForm]=\"mForm\">\r\n            </storybook-input>\r\n\r\n            <storybook-input\r\n              [storyInput]=\"storyInputsInOrder[1]\"\r\n              (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n              (onPinInput)=\"onPinInput.emit($event)\"\r\n              [currentForm]=\"mForm\">\r\n            </storybook-input-->\r\n\r\n        <div class=\"second-header\" style=\"top: 5px;\">\r\n          <a class=\"second-header-text\"  href=\"#/login\" style=\"position: relative; top: 5px; text-align: left\">\r\n            {{ 'Please enter the Verification Code'}}<br>\r\n            {{ 'you received in your mail:'  }}\r\n          </a>\r\n      </div>\r\n\r\n\r\n      <div id=\"button-successfully\" style=\"\">\r\n            <storybook-button-successfully  *ngIf=\"status.isVerSuccess\"  style=\"position: relative; top: 15px\"></storybook-button-successfully>\r\n            <code-input *ngIf=\"!status.isVerSuccess\"\r\n                        #codeInput\r\n                        [codeLength]=\"codeLength\"\r\n                        (codeChanged)=\"onCodeChanged($event)\"\r\n                        (codeCompleted)=\"onCodeCompleted($event)\">\r\n            </code-input>\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n      <div class=\"login-button\">\r\n            <div class=\"login-failed-message\" role=\"alert\" style=\"position: relative; top: 15px\">\r\n              <table *ngIf=\"this.status?.isVerFailed\">\r\n                <tr>{{ this.status?.verErrorMessage.toString()  | apiErrorMessage: param }}</tr>\r\n                <tr  *ngFor=\"let message of this.status?.verErrorMessage.data?.confirmPassword.split(', ')\">{{message.trim() | apiErrorMessage: param }}</tr>\r\n              </table>\r\n            </div>\r\n\r\n            <storybook-button-continue size=\"medium\" label=\"Login \" type=\"button\" (click)=\"onSubmit()\" style=\"position: relative; top: 15px\"></storybook-button-continue>\r\n\r\n\r\n            <a *ngIf=\"!status.isVerSuccess\" class=\"resend-verification\"  (click)=\"generateNewCodeFor2SV.emit()\" style=\"position: relative; top: 40px;\">\r\n              {{ 'resend the verification code'  }}\r\n            </a>\r\n\r\n      </div>\r\n\r\n\r\n\r\n\r\n      </div>\r\n\r\n\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostBinding, HostListener,\r\n  Inject,\r\n  Injector,\r\n  Input,\r\n  OnInit,\r\n  Output, Renderer2,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { AccountInput } from './account-input.model'\r\nimport {\r\n  AbstractControl,\r\n  ControlValueAccessor,\r\n  FormControl,\r\n  FormGroup,\r\n  NG_VALIDATORS,\r\n  Validator,\r\n  Validators\r\n} from \"@angular/forms\";\r\nimport {PopoverOptions} from \"src/stories/directive/popover.interface\";\r\nimport {ActionInputComponent} from \"src/stories/actions/action-input/action-input.component\";\r\nimport {ActionInput} from \"src/stories/actions/action-input/action-input.interface\";\r\n\r\n\r\nexport interface GroupForm {\r\n  username:  FormControl,\r\n  password:  FormControl,\r\n}\r\n\r\nexport interface ValidationForm {\r\n  validationForm2: GroupForm,\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-account-input',\r\n  templateUrl: './account-input.component.html',\r\n  styleUrls: ['./account-input.scss']\r\n})\r\nexport class AccountInputComponent implements OnInit{\r\n\r\n  param = {language: 'login-main'};\r\n\r\n  popover: PopoverOptions = {\r\n    content: ActionInputComponent\r\n  };\r\n\r\n  @Input() storyInput!: AccountInput;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onPinInput = new EventEmitter<Event>();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onSaveChanges = new EventEmitter<String>();\r\n\r\n  @Input() isLoading: boolean = false;\r\n\r\n  @Output() changePassword: EventEmitter<void> = new EventEmitter();\r\n\r\n\r\n  @Input()\r\n  hideInput = false;\r\n\r\n  @Input() currentForm!: FormGroup;\r\n\r\n  @Input() regErrorMessage: any;\r\n\r\n  private isStrength: string = (this.storyInput?.state === 'NEW PASSWORD') ? 'storybook-account-input--addStrength' : 'storybook-account-input--clearStrength';\r\n\r\n  public isPasswordTextHide: boolean = false;\r\n\r\n  @Input() conditionList: string[] = [];\r\n\r\n  @ViewChild('mInput', { static: false }) mInput?: ElementRef;\r\n\r\n  state: string = 'edit';\r\n\r\n  constructor(private renderer: Renderer2) {\r\n\r\n  }\r\n\r\n  onStateChange(state: string) {\r\n    if (state == 'edit' || state == 'save') {this.state = state;}\r\n    switch (state) {\r\n      case 'edit':\r\n      this.renderer.setAttribute(this.mInput?.nativeElement ,'readonly', 'true');\r\n      this.renderer.setAttribute(this.mInput?.nativeElement ,'style', 'color: #9a9a9a;');\r\n      this.onClickButtonSave();\r\n      break;\r\n      case 'save':\r\n      this.renderer.removeAttribute(this.mInput?.nativeElement ,'readonly');\r\n      this.renderer.removeAttribute(this.mInput?.nativeElement ,'style');\r\n      break;\r\n    }\r\n  }\r\n\r\n\r\n  get username(): AbstractControl {\r\n    return this.currentForm.get('username')!;\r\n  }\r\n\r\n\r\n  get password(): AbstractControl {\r\n    return this.currentForm.get('password')!;\r\n  }\r\n\r\n  public getErrorHeader(controllerType: string): string {\r\n    let header: string = '';\r\n\r\n    switch (controllerType) {\r\n      case \"phone\":\r\n        header = 'Must contain phone:';\r\n        break;\r\n\r\n      case \"email\":\r\n        header = 'Must contain email:';\r\n        break;\r\n\r\n      case \"oldPassword\":\r\n      case \"confirmPassword\":\r\n      case \"password\":\r\n        header = 'The password must contain:';\r\n        break;\r\n\r\n      default:\r\n        header = controllerType;\r\n    }\r\n\r\n    return header;\r\n  }\r\n\r\n  public getErrorList(conditionList: String[]): ActionInput[] {\r\n\r\n    let passConditions: string[] = [];\r\n\r\n\r\n    var actionInputs: ActionInput[] = [];\r\n\r\n    conditionList.forEach(condition => {\r\n      switch (condition) {\r\n        case \"minLength\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"minLengthValid\",\r\n            \"presentingMessage\": ' A minimum of 8 characters',\r\n            \"isFulfilled\": !(this.minLengthValid || !(this.formControler.value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresUppercase\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresUppercaseValid\",\r\n            \"presentingMessage\": ' At least 1 Uppercase letters',\r\n            \"isFulfilled\": !(this.requiresUppercaseValid || !(this.formControler.value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresLowercase\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresLowercaseValid\",\r\n            \"presentingMessage\": ' At least 1 lowercase letters',\r\n            \"isFulfilled\": !(this.requiresLowercaseValid || !(this.formControler.value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresDigit\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresDigitValid\",\r\n            \"presentingMessage\": ' A number',\r\n            \"isFulfilled\": !(this.requiresDigitValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresSpecialChars\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresSpecialCharsValid\",\r\n            \"presentingMessage\": ' At least 1 special character',\r\n            \"isFulfilled\": !(this.requiresSpecialCharsValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresEmail\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresEmailValid\",\r\n            \"presentingMessage\": ' A well-formed email address',\r\n            \"isFulfilled\": !(this.requiresEmailValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresPhone\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresPhoneValid\",\r\n            \"presentingMessage\": ' A well-formed phone number',\r\n            \"isFulfilled\": !(this.requiresPhoneValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n      }\r\n    });\r\n\r\n\r\n    return actionInputs;\r\n  }\r\n\r\n  get passwordValid() {\r\n    return this.formControler.errors === null;\r\n  }\r\n\r\n  get requiredValid() {\r\n    return this.formControler.hasError(\"required\");\r\n  }\r\n\r\n  get minLengthValid() {\r\n    return this.formControler.hasError(\"minlength\");\r\n  }\r\n\r\n  get requiresDigitValid() {\r\n    return this.formControler.hasError(\"requiresDigit\");\r\n  }\r\n\r\n  get requiresUppercaseValid() {\r\n    return this.formControler.hasError(\"requiresUppercase\");\r\n  }\r\n\r\n  get requiresLowercaseValid() {\r\n    return this.formControler.hasError(\"requiresLowercase\") ;\r\n  }\r\n\r\n  get requiresSpecialCharsValid() {\r\n    return this.formControler.hasError(\"requiresSpecialChars\");\r\n  }\r\n\r\n  get requiresEmailValid() {\r\n    return this.formControler.hasError(\"email\");\r\n  }\r\n\r\n  get requiresPhoneValid() {\r\n    return this.formControler.hasError(\"requiresPhoneChars\");\r\n  }\r\n\r\n  get formControler(): AbstractControl {\r\n    return this.currentForm.get(this.storyInput?.title.toString())!;\r\n  }\r\n\r\n\r\n  /**\r\n   * Component method to trigger the onPin event\r\n   * @param id string\r\n   */\r\n  onPin(id: any) {\r\n    this.onPinInput.emit(id);\r\n  }\r\n  /**\r\n   * Component method to trigger the onArchive event\r\n   * @param id string\r\n   */\r\n  onClickButtonSave() {\r\n    this.onSaveChanges.emit(this.storyInput.name);\r\n  }\r\n\r\n  public get classes(): string[] {\r\n    this.isStrength = (this.storyInput?.state === 'NEW PASSWORD') ? 'storybook-account-input--addStrength' : 'storybook-account-input--clearStrength';\r\n\r\n    return ['storybook-account-input-strength', `inputField--${this.state}`,  this.isStrength];\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.isPasswordTextHide = this.storyInput?.state.includes('PASSWORD');\r\n\r\n  }\r\n\r\n\r\n}\r\n","<div id=\"parent3\"  [hidden]=\"storyInput?.hide\" [ngClass]=\"classes\"  >\r\n  <div id=\"parent1\" >\r\n    <div class=\"main\"  [formGroup]=\"this.currentForm\">\r\n      <div>\r\n        <p class=\"user-name D-Caps-Regular\">{{storyInput?.state}}</p>\r\n\r\n        <br>\r\n        <span [ngSwitch]=\"storyInput?.type\">\r\n          <span *ngSwitchCase=\"'password'\" >\r\n            <storybook-button-continue   size=\"small\" label=\"Change Password\" type=\"button\" (onClick)=\"this.changePassword.emit()\" >\r\n            </storybook-button-continue>\r\n          </span>\r\n          <span *ngSwitchCase=\"'enable-profile-picture'\" >\r\n            <label [attr.aria-label]=\"storyInput?.id + ''\"  for=\"{{ storyInput?.title }}\" class=\"UserNameType\" >{{storyInput?.title}}  </label>\r\n            <div class=\"user-checkbox-header\">\r\n            <input  style=\"position: relative; margin: 0 2px 0 2px;   top: 1px; right: 3px;\"  type=\"checkbox\"\r\n                    (change)=\"onClickButtonSave()\"/>\r\n            <label class=\"EnableProfilePicture\">Enable Profile Picture</label>\r\n\r\n\r\n            </div>\r\n            <p class=\"confirmation-change D-Caps-Regular\">{{ this.regErrorMessage | apiErrorMessage: param }}</p>\r\n              <!--table >\r\n                <tr>{{ this.regErrorMessage['message'] | apiErrorMessage: param }}</tr>\r\n                <tr  *ngFor=\"let message of this.regErrorMessage['message']\">{{message.trim() | apiErrorMessage: param }}</tr>\r\n              </table-->\r\n          </span>\r\n          <span *ngSwitchDefault >\r\n            <label  [attr.aria-label]=\"storyInput?.id + ''\" for=\"{{ storyInput?.title }}\" class=\"Vector2 \">\r\n              <img src=\"{{ storyInput?.icon }}\" class=\"icon-input\" alt=\"icon input userName\"  name=\"{{ storyInput?.title }}\" />\r\n              <div [ngClass]=\"classes\" [inputPopover] = \"this.popover\" [data]=\"this.getErrorList(this.conditionList)\" [header]=\"this.getErrorHeader(this.storyInput.title)\">\r\n                <input #mInput\r\n                  readonly=\"true\"\r\n                  style=\"color: #9a9a9a;\"\r\n                  type=\"{{storyInput?.type}}\"\r\n                  id=\"{{ storyInput?.id }}\"\r\n                  class=\"inputField\"\r\n                  name=\"{{storyInput?.title}}\"\r\n                  formControlName=\"{{storyInput?.title}}\"\r\n                  placeholder=\"{{storyInput?.placeholder}}\"\r\n                  required />\r\n              </div>\r\n\r\n\r\n              <br>\r\n\r\n\r\n            </label>\r\n\r\n            <storybook-button-edit-save (onStateChange)=\"onStateChange($event)\" #addAttribute>\r\n            </storybook-button-edit-save>\r\n\r\n            <p *ngIf=\"(this.regErrorMessage?.detailName == storyInput?.name)\" class=\"confirmation-change D-Caps-Regular\"\r\n            >{{ this.regErrorMessage.detailValue  | apiErrorMessage: param }}</p>\r\n\r\n          </span>\r\n\r\n        </span>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n</div>\r\n","// also exported from '@storybook/angular' if you can deal with breaking changes in 6.1\nimport {Story, Meta, moduleMetadata, componentWrapperDecorator} from '@storybook/angular';\nimport {action} from \"@storybook/addon-actions\";\nimport {AccountInputComponent} from \"./account-input.component\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators} from \"@angular/forms\";\nimport PassStrengthComponent from \"src/stories/pass-strength/pass-strength.component\";\nimport {ButtonEditSaveComponent} from \"../../buttons/button-edit-save/button-edit-save.component\";\nimport * as EditSaveButton from \"src/stories/buttons/button-edit-save/button-edit-save.stories\";\n\n// More on default export: https://storybook.js.org/docs/angular/writing-stories/introduction#default-export\nexport default {\n  title: 'Design System/Atoms/Inputs/AccountInput',\n  component: AccountInputComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [ AccountInputComponent, PassStrengthComponent, ButtonEditSaveComponent  ],\n      imports: [CommonModule, FormsModule, ReactiveFormsModule ],\n    }),\n    componentWrapperDecorator(story => `<div style=\"margin: 0 1em 1em 1em/*; width: 445px*/;\">${story}</div>`),\n  ],\n  /*argTypes: {\n    registerForm: new FormGroup({\n      username: new FormControl('', Validators.minLength(2)),\n      password: new FormControl('zaqwsx', Validators.minLength(2))\n    }),\n  },*/\n  excludeStories: /.*Data$/,\n} as Meta;\n\nexport const actionsData = {\n  onPinInput: action('onPinInput'),\n  onSaveChanges: action('onArchiveInput'),\n};\n\nconst Template: Story = args => ({\n  props: {\n    ...args,\n    onStateChange: EditSaveButton.actionsData.onStateChange,\n    onClick: EditSaveButton.actionsData.onClick,\n  },\n});\n\n\n\nexport const Default = Template.bind({});\nDefault.args = {\n  storyInput: {\n    id: '1',\n    title: 'Ex.Saul Ramirez',\n    state: 'USER NAME',\n    icon: './assets/images/User2ldpi.png',\n    type: 'text',\n    placeholder: 'placeholder',\n    hide: false\n  },\n  /*currentForm: {\n    username: new FormControl('ea6', Validators.minLength(2)),\n    password: new FormControl('', []),\n  },*/\n  hideInput: false,\n\n};\n\nexport const Username = Template.bind({});\nUsername.args = {\n  ...Default.args,\n  storyInput: {\n    id: '2',\n    name: 'username',\n    title: 'Saul Ramirez',\n    state: 'USER NAME',\n    icon: '',\n    type: 'enable-profile-picture',\n    placeholder: '',\n    hide: false\n  },\n  currentForm: {\n    ...Default.args['currentForm'],\n    password: new FormControl('ea6', Validators.minLength(2)),\n  },\n};\n\nexport const Password = Template.bind({});\nPassword.args = {\n  storyInput: {\n    id: '3',\n    name: 'password',\n    title: 'password',\n    state: 'PASSWORD',\n    icon: './assets/images/LockIcon2ldpi.png',\n    type: 'password',\n    placeholder: 'your_password',\n    hide: false\n  },\n};\n\nexport const NewPassword = Template.bind({});\nNewPassword.args = {\n  ...Default.args,\n  storyInput: {\n    id: '6',\n    name: 'newPassword',\n    title: 'password',\n    state: 'NEW PASSWORD',\n    icon: './assets/images/LockIcon2ldpi.png',\n    type: 'password',\n    placeholder: 'your_password',\n    hide: false\n  },\n};\n\nexport const Email = Template.bind({});\nEmail.args = {\n  storyInput: {\n    id: '4',\n    name: 'email',\n    title: 'email',\n    state: 'EMAIL',\n    icon: './assets/images/AtSign3ldpi.png',\n    type: 'email',\n    placeholder: 'Ex: abc@example.com',\n    hide: false\n  },\n};\nexport const Phone = Template.bind({});\nPhone.args = {\n  storyInput: {\n    id: '5',\n    name: 'phone',\n    title: 'phone',\n    state: 'PHONE NUMBER FOR AUTHENTICATION',\n    icon: './assets/images/Phone3ldpi.png',\n    type: 'phone',\n    placeholder: 'Ex: +972547762084',\n    hide: false\n  },\n  hideInput: true,\n};\n\n\n","import {InjectionToken} from '@angular/core';\r\n\r\nexport const CodeInputComponentConfigToken = new InjectionToken<CodeInputComponentConfig>('CodeInputComponentConfig');\r\n\r\nexport interface CodeInputComponentConfig {\r\n  codeLength?: number;\r\n  inputType?: string;\r\n  inputMode?: string;\r\n  initialFocusField?: number;\r\n  isCharsCode?: boolean;\r\n  isCodeHidden?: boolean;\r\n  isPrevFocusableAfterClearing?: boolean;\r\n  isFocusingOnLastByClickIfFilled?: boolean;\r\n  code?: string | number;\r\n  disabled?: boolean;\r\n  autocapitalize?: string;\r\n}\r\n\r\nexport const defaultComponentConfig: CodeInputComponentConfig = {\r\n  codeLength: 4,\r\n  inputType: 'tel',\r\n  inputMode: 'numeric',\r\n  initialFocusField: undefined,\r\n  isCharsCode: false,\r\n  isCodeHidden: false,\r\n  isPrevFocusableAfterClearing: true,\r\n  isFocusingOnLastByClickIfFilled: false,\r\n  code: undefined,\r\n  disabled: false,\r\n  autocapitalize: undefined\r\n};\r\n","import {\n  AfterViewChecked,\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  SimpleChanges,\n  ViewChildren\n} from '@angular/core';\nimport {\n  CodeInputComponentConfig,\n  CodeInputComponentConfigToken,\n  defaultComponentConfig\n} from './code-input.component.config';\nimport { Subscription } from 'rxjs';\nimport {DigitcodeInputComponent} from \"../digitcode-input/digitcode-input.component\";\n\nenum InputState {\n  ready = 0,\n  reset = 1\n}\n\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n\ninterface GenericEvent<T> extends Omit<Event, 'target'> {\n  target: T;\n}\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'code-input',\n  templateUrl: 'code-input.component.html',\n  styleUrls: ['./code-input.component.scss']\n})\nexport class CodeInputComponent implements AfterViewInit, OnInit, OnChanges, OnDestroy, AfterViewChecked, CodeInputComponentConfig {\n\n  @ViewChildren('storyInput') storyInputsList !: QueryList<ElementRef>;\n  @ViewChildren('storyInput') inputsList !: QueryList<DigitcodeInputComponent>;\n  //inputsList !: List<ElementRef>;\n  //= this.storyInputsList.map((e) => { e.nativeElement.input});\n\n\n  @Input() codeLength !: number;\n  @Input() inputType !: string;\n  @Input() inputMode !: string;\n  @Input() initialFocusField?: number;\n  /** @deprecated Use isCharsCode prop instead. */\n  @Input() isNonDigitsCode = false;\n  @Input() isCharsCode !: boolean;\n  @Input() isCodeHidden !: boolean;\n  @Input() isPrevFocusableAfterClearing !: boolean;\n  @Input() isFocusingOnLastByClickIfFilled !: boolean;\n  @Input() code ?: string | number;\n  @Input() disabled !: boolean;\n  @Input() autocapitalize ?: string;\n\n  @Output() readonly codeChanged = new EventEmitter<string>();\n  @Output() readonly codeCompleted = new EventEmitter<string>();\n\n  public placeholders: number[] = [];\n\n  private inputs: HTMLInputElement[] = [];\n  private inputsStates: InputState[] = [];\n  private inputsListSubscription !: Subscription;\n\n  // tslint:disable-next-line:variable-name\n  private _codeLength !: number;\n  private state = {\n    isFocusingAfterAppearingCompleted: false,\n    isInitialFocusFieldEnabled: false\n  };\n\n  constructor(@Optional() @Inject(CodeInputComponentConfigToken) config?: CodeInputComponentConfig) {\n    Object.assign(this, defaultComponentConfig);\n\n    if (!config) {\n      return;\n    }\n\n    // filtering for only valid config props\n    for (const prop in config) {\n      if (!config.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      if (!defaultComponentConfig.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      // @ts-ignore\n      this[prop] = config[prop];\n    }\n  }\n\n  /**\n   * Life cycle\n   */\n\n  ngOnInit(): void {\n    // defining the state\n    this.state.isInitialFocusFieldEnabled = !this.isEmpty(this.initialFocusField);\n    // initiating the code\n    this.onCodeLengthChanges();\n  }\n\n  ngAfterViewInit(): void {\n    // initiation of the inputs\n    this.inputsListSubscription = this.inputsList.changes.subscribe(this.onInputsListChanges.bind(this));\n    this.onInputsListChanges(this.inputsList);\n  }\n\n  ngAfterViewChecked(): void {\n    this.focusOnInputAfterAppearing();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.code) {\n      this.onInputCodeChanges();\n    }\n    if (changes.codeLength) {\n      this.onCodeLengthChanges();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.inputsListSubscription) {\n      this.inputsListSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Methods\n   */\n\n  reset(isChangesEmitting = false): void {\n    // resetting the code to its initial value or to an empty value\n    this.onInputCodeChanges();\n\n    if (this.state.isInitialFocusFieldEnabled) {\n      // tslint:disable-next-line:no-non-null-assertion\n      this.focusOnField(this.initialFocusField!);\n    }\n\n    if (isChangesEmitting) {\n      this.emitChanges();\n    }\n  }\n\n  focusOnField(index: number): void {\n    if (index >= this._codeLength) {\n      throw new Error('The index of the focusing input box should be less than the codeLength.');\n    }\n\n    this.inputs[index].focus();\n  }\n\n  onClick(e: any): void {\n    // handle click events only if the the prop is enabled\n    if (!this.isFocusingOnLastByClickIfFilled) {\n      return;\n    }\n\n    const target = e.target;\n    const last = this.inputs[this._codeLength - 1];\n    // already focused\n    if (target === last) {\n      return;\n    }\n\n    // check filling\n    const isFilled = this.getCurrentFilledCode().length >= this._codeLength;\n    if (!isFilled) {\n      return;\n    }\n\n    // focusing on the last input if is filled\n    setTimeout(() => last.focus());\n  }\n\n\n\n  onInput(e: GenericEvent<HTMLInputElement>, i: number): void {\n    const target = e.target;\n    const value = /*e.data ||*/ target.value;\n\n    if (this.isEmpty(value)) {\n      return;\n    }\n\n    // only digits are allowed if isCharsCode flag is absent/false\n    if (!this.canInputValue(value)) {\n      e.preventDefault();\n      e.stopPropagation();\n      this.setInputValue(target, null);\n      this.setStateForInput(target, InputState.reset);\n      return;\n    }\n\n    const values = value.toString().trim().split('');\n    for (let j = 0; j < values.length; j++) {\n      const index = j + i;\n      if (index > this._codeLength - 1) {\n        break;\n      }\n\n      this.setInputValue(this.inputs[index], values[j]);\n    }\n    this.emitChanges();\n\n    const next = i + values.length;\n    if (next > this._codeLength - 1) {\n      target.blur();\n      return;\n    }\n\n    this.inputs[next].focus();\n  }\n\n  onPaste(e: ClipboardEvent, i: number): void {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const data = e.clipboardData ? e.clipboardData.getData('text').trim() : undefined;\n\n    if (this.isEmpty(data)) {\n      return;\n    }\n\n    // Convert paste text into iterable\n    // tslint:disable-next-line:no-non-null-assertion\n    const values = data!.split('');\n    let valIndex = 0;\n\n    for (let j = i; j < this.inputs.length; j++) {\n      // The values end is reached. Loop exit\n      if (valIndex === values.length) {\n        break;\n      }\n\n      const input = this.inputs[j];\n      const val = values[valIndex];\n\n      // Cancel the loop when a value cannot be used\n      if (!this.canInputValue(val)) {\n        this.setInputValue(input, null);\n        this.setStateForInput(input, InputState.reset);\n        return;\n      }\n\n      this.setInputValue(input, val.toString());\n      valIndex++;\n    }\n\n    this.inputs[i].blur();\n    this.emitChanges();\n  }\n\n  async onKeydown(e: any, i: number): Promise<void> {\n    const target = e.target;\n    const isTargetEmpty = this.isEmpty(target.value);\n    const prev = i - 1;\n\n    // processing only the backspace and delete key events\n    const isBackspaceKey = await this.isBackspaceKey(e);\n    const isDeleteKey = this.isDeleteKey(e);\n    if (!isBackspaceKey && !isDeleteKey) {\n      return;\n    }\n\n    e.preventDefault();\n\n    this.setInputValue(target, null);\n    if (!isTargetEmpty) {\n      this.emitChanges();\n    }\n\n    // preventing to focusing on the previous field if it does not exist or the delete key has been pressed\n    if (prev < 0 || isDeleteKey) {\n      return;\n    }\n\n    if (isTargetEmpty || this.isPrevFocusableAfterClearing) {\n      this.inputs[prev].focus();\n    }\n  }\n\n  private onInputCodeChanges(): void {\n    if (!this.inputs.length) {\n      return;\n    }\n\n    if (this.isEmpty(this.code)) {\n      this.inputs.forEach((input: HTMLInputElement) => {\n        this.setInputValue(input, null);\n      });\n      return;\n    }\n\n    // tslint:disable-next-line:no-non-null-assertion\n    const chars = this.code!.toString().trim().split('');\n    // checking if all the values are correct\n    let isAllCharsAreAllowed = true;\n    for (const char of chars) {\n      if (!this.canInputValue(char)) {\n        isAllCharsAreAllowed = false;\n        break;\n      }\n    }\n\n    this.inputs.forEach((input: HTMLInputElement, index: number) => {\n      const value = isAllCharsAreAllowed ? chars[index] : null;\n      this.setInputValue(input, value);\n    });\n  }\n\n  private onCodeLengthChanges(): void {\n    if (!this.codeLength) {\n      return;\n    }\n\n    this._codeLength = this.codeLength;\n    if (this._codeLength > this.placeholders.length) {\n      const numbers = Array(this._codeLength - this.placeholders.length).fill(1);\n      this.placeholders.splice(this.placeholders.length - 1, 0, ...numbers);\n    }\n    else if (this._codeLength < this.placeholders.length) {\n      this.placeholders.splice(this._codeLength);\n    }\n  }\n\n  private onInputsListChanges(list: QueryList<DigitcodeInputComponent>): void {\n    if (list.length > this.inputs.length) {\n      const inputsToAdd = list.filter((item, index) => index > this.inputs.length - 1);\n      this.inputs.splice(this.inputs.length, 0, ...inputsToAdd.map(item => item.input.nativeElement));\n      const states = Array(inputsToAdd.length).fill(InputState.ready);\n      this.inputsStates.splice(this.inputsStates.length, 0, ...states);\n    }\n    else if (list.length < this.inputs.length) {\n      this.inputs.splice(list.length);\n      this.inputsStates.splice(list.length);\n    }\n\n    // filling the inputs after changing of their count\n    this.onInputCodeChanges();\n  }\n\n  private focusOnInputAfterAppearing(): void {\n    if (!this.state.isInitialFocusFieldEnabled) {\n      return;\n    }\n\n    if (this.state.isFocusingAfterAppearingCompleted) {\n      return;\n    }\n\n    // tslint:disable-next-line:no-non-null-assertion\n    this.focusOnField(this.initialFocusField!);\n    // tslint:disable-next-line:no-non-null-assertion\n    //this.state.isFocusingAfterAppearingCompleted = (document.activeElement === this.inputs[this.initialFocusField!]);\n  }\n\n  private emitChanges(): void {\n    setTimeout(() => this.emitCode(), 50);\n  }\n\n  private emitCode(): void {\n    const code = this.getCurrentFilledCode();\n\n    this.codeChanged.emit(code);\n\n    if (code.length >= this._codeLength) {\n      this.codeCompleted.emit(code);\n    }\n  }\n\n  private getCurrentFilledCode(): string {\n    let code = '';\n\n    for (const input of this.inputs) {\n      if (!this.isEmpty(input.value)) {\n        code += input.value;\n      }\n    }\n\n    return code;\n  }\n\n  private isBackspaceKey(e: any): Promise<boolean> {\n    const isBackspace = (e.key && e.key.toLowerCase() === 'backspace') || (e.keyCode && e.keyCode === 8);\n    if (isBackspace) {\n      return Promise.resolve(true);\n    }\n\n    // process only key with placeholder keycode on android devices\n    if (!e.keyCode || e.keyCode !== 229) {\n      return Promise.resolve(false);\n    }\n\n    return new Promise<boolean>((resolve) => {\n      setTimeout(() => {\n        const input = e.target;\n        const isReset = this.getStateForInput(input) === InputState.reset;\n        if (isReset) {\n          this.setStateForInput(input, InputState.ready);\n        }\n        // if backspace key pressed the caret will have position 0 (for single value field)\n        resolve(input.selectionStart === 0 && !isReset);\n      });\n    });\n  }\n\n  private isDeleteKey(e: any): boolean {\n    return (e.key && e.key.toLowerCase() === 'delete') || (e.keyCode && e.keyCode === 46);\n  }\n\n  private setInputValue(input: HTMLInputElement, value: any): void {\n    const isEmpty = this.isEmpty(value);\n    const valueClassCSS = 'has-value';\n    const emptyClassCSS = 'empty';\n    if (isEmpty) {\n      input.value = '';\n      input.classList.remove(valueClassCSS);\n      // tslint:disable-next-line:no-non-null-assertion\n      input.parentElement!.classList.add(emptyClassCSS);\n    }\n    else {\n      input.value = value;\n      input.classList.add(valueClassCSS);\n      // tslint:disable-next-line:no-non-null-assertion\n      input.parentElement!.classList.remove(emptyClassCSS);\n    }\n  }\n\n  private canInputValue(value: any): boolean {\n    if (this.isEmpty(value)) {\n      return false;\n    }\n\n    const isDigitsValue = /^[0-9]+$/.test(value.toString());\n    return isDigitsValue || (this.isCharsCode || this.isNonDigitsCode);\n  }\n\n  private setStateForInput(input: HTMLInputElement, state: InputState): void {\n    const index = this.inputs.indexOf(input);\n    if (index < 0) {\n      return;\n    }\n\n    this.inputsStates[index] = state;\n  }\n\n  private getStateForInput(input: HTMLInputElement): InputState | undefined {\n    const index = this.inputs.indexOf(input);\n    return this.inputsStates[index];\n  }\n\n  private isEmpty(value: any): boolean {\n    return  value === null || value === undefined || !value.toString().length;\n  }\n}\n","<span *ngFor=\"let holder of placeholders; index as i; let first = first; let last = last;\"\n      [class.code-hidden]=\"isCodeHidden\"  >\n  <storybook-digitcode-input\n    #storyInput\n    (onClick)=\"onClick($event)\"\n    (onPaste)=\"onPaste($event,i)\"\n    (onInput)=\"onInput($event, i)\"\n    (onKeydown)=\"onKeydown($event, i)\"\n    [inputType]=\"inputType\"\n    [disabled]=\"disabled\"\n    [inputMode]=\"inputMode\"\n    [autocapitalize]=\"autocapitalize\"\n    [isFirst]=\"first\"\n    [isLast]=\"last\">\n  </storybook-digitcode-input>\n\n</span>\n","import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Inject,\r\n  Injector,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { ConfigurationInput } from './configuration-input.model'\r\nimport {\r\n  AbstractControl,\r\n  ControlValueAccessor,\r\n  FormControl,\r\n  FormGroup,\r\n  NG_VALIDATORS,\r\n  Validator,\r\n  Validators\r\n} from \"@angular/forms\";\r\nimport {PopoverOptions} from \"src/stories/directive/popover.interface\";\r\nimport {ActionInputComponent} from \"src/stories/actions/action-input/action-input.component\";\r\nimport {ActionInput} from \"src/stories/actions/action-input/action-input.interface\";\r\n\r\n\r\nexport interface GroupForm {\r\n  username:  FormControl,\r\n  password:  FormControl,\r\n}\r\n\r\nexport interface ValidationForm {\r\n  validationForm2: GroupForm,\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-configuration-input',\r\n  templateUrl: './configuration-input.component.html',\r\n  styleUrls: ['./configuration-input.scss']\r\n})\r\nexport class ConfigurationInputComponent implements OnInit{\r\n\r\n\r\n\r\n  popover: PopoverOptions = {\r\n    content: ActionInputComponent\r\n  };\r\n\r\n  @Input() storyInput!: ConfigurationInput;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onPinInput = new EventEmitter<Event>();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onArchiveInput = new EventEmitter<Event>();\r\n\r\n\r\n  @Output() changePassword: EventEmitter<void> = new EventEmitter();\r\n\r\n\r\n  @Input()\r\n  hideInput = false;\r\n\r\n  @Input() currentForm!: FormGroup;\r\n\r\n  private isStrength: string = (this.storyInput?.state === 'NEW PASSWORD') ? 'storybook-input--addStrength' : 'storybook-input--clearStrength';\r\n\r\n  public isPasswordTextHide: boolean = false;\r\n\r\n  @Input() conditionList: string[] = [];\r\n  /*registerForm = new FormGroup({\r\n    username: new FormControl('', Validators.minLength(2)),\r\n    password: new FormControl('zaqwsx', Validators.minLength(2))\r\n  });\r\n\r\n\r\n  get username2(): FormControl  {\r\n    return this.currentForm?.controls.username.get();\r\n  }*/\r\n\r\n  @ViewChild('rangeInput', { static: false }) Input?: ElementRef;\r\n\r\n  @ViewChild('ddlauto') ddlauto!: ElementRef;\r\n  selectedTeam = '';\r\n  onSelectedDdlAuto():void {\r\n    this.selectedTeam = this.ddlauto.nativeElement.value;\r\n  }\r\n\r\n  get username(): AbstractControl {\r\n    return this.currentForm.get('username')!;\r\n  }\r\n\r\n\r\n  get password(): AbstractControl {\r\n    return this.currentForm.get('password')!;\r\n  }\r\n\r\n  public getErrorHeader(controllerType: string): string {\r\n    let header: string = '';\r\n\r\n    switch (controllerType) {\r\n      case \"phone\":\r\n        header = 'Must contain phone:';\r\n        break;\r\n\r\n      case \"email\":\r\n        header = 'Must contain email:';\r\n        break;\r\n\r\n      case \"oldPassword\":\r\n      case \"confirmPassword\":\r\n      case \"password\":\r\n        header = 'The password must contain:';\r\n        break;\r\n\r\n      default:\r\n        header = controllerType;\r\n    }\r\n\r\n    return header;\r\n  }\r\n\r\n  public getErrorList(conditionList: String[]): ActionInput[] {\r\n\r\n    let passConditions: string[] = [];\r\n\r\n\r\n    var actionInputs: ActionInput[] = [];\r\n\r\n    conditionList.forEach(condition => {\r\n      switch (condition) {\r\n        case \"minLength\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"minLengthValid\",\r\n            \"presentingMessage\": ' A minimum of 8 characters',\r\n            \"isFulfilled\": !(this.minLengthValid || !(this.formControler?.value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresUppercase\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresUppercaseValid\",\r\n            \"presentingMessage\": ' At least 1 Uppercase letters',\r\n            \"isFulfilled\": !(this.requiresUppercaseValid || !(this.formControler?.value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresLowercase\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresLowercaseValid\",\r\n            \"presentingMessage\": ' At least 1 lowercase letters',\r\n            \"isFulfilled\": !(this.requiresLowercaseValid || !(this.formControler?.value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresDigit\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresDigitValid\",\r\n            \"presentingMessage\": ' A number',\r\n            \"isFulfilled\": !(this.requiresDigitValid || !(this.formControler?.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresSpecialChars\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresSpecialCharsValid\",\r\n            \"presentingMessage\": ' At least 1 special character',\r\n            \"isFulfilled\": !(this.requiresSpecialCharsValid || !(this.formControler?.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresEmail\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresEmailValid\",\r\n            \"presentingMessage\": ' A well-formed email address',\r\n            \"isFulfilled\": !(this.requiresEmailValid || !(this.formControler?.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresPhone\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresPhoneValid\",\r\n            \"presentingMessage\": ' A well-formed phone number',\r\n            \"isFulfilled\": !(this.requiresPhoneValid || !(this.formControler?.value.length > 0))\r\n          })\r\n          break;\r\n      }\r\n    });\r\n\r\n\r\n    return actionInputs;\r\n  }\r\n\r\n  get passwordValid() {\r\n    return this.formControler?.errors === null;\r\n  }\r\n\r\n  get requiredValid() {\r\n    return this.formControler?.hasError(\"required\");\r\n  }\r\n\r\n  get minLengthValid() {\r\n    return this.formControler?.hasError(\"minlength\");\r\n  }\r\n\r\n  get requiresDigitValid() {\r\n    return this.formControler?.hasError(\"requiresDigit\");\r\n  }\r\n\r\n  get requiresUppercaseValid() {\r\n    return this.formControler?.hasError(\"requiresUppercase\");\r\n  }\r\n\r\n  get requiresLowercaseValid() {\r\n    return this.formControler?.hasError(\"requiresLowercase\") ;\r\n  }\r\n\r\n  get requiresSpecialCharsValid() {\r\n    return this.formControler?.hasError(\"requiresSpecialChars\");\r\n  }\r\n\r\n  get requiresEmailValid() {\r\n    return this.formControler?.hasError(\"email\");\r\n  }\r\n\r\n  get requiresPhoneValid() {\r\n    return this.formControler?.hasError(\"requiresPhoneChars\");\r\n  }\r\n\r\n  get formControler(): AbstractControl | null{\r\n\r\n    return this.currentForm.get(this.storyInput?.name)!;\r\n  }\r\n\r\n\r\n  /**\r\n   * Component method to trigger the onPin event\r\n   * @param id string\r\n   */\r\n  onPin(id: any) {\r\n    this.onPinInput.emit(id);\r\n  }\r\n  /**\r\n   * Component method to trigger the onArchive event\r\n   * @param id string\r\n   */\r\n  onArchive(id: any) {\r\n    this.onArchiveInput.emit(id);\r\n  }\r\n\r\n  public get classes(): string[] {\r\n    this.isStrength = (this.storyInput?.state === 'NEW PASSWORD') ? 'storybook-input--addStrength' : 'storybook-input--clearStrength';\r\n\r\n    return ['storybook-input-strength',  this.isStrength];\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.isPasswordTextHide = this.storyInput?.state.includes('PASSWORD');\r\n\r\n  }\r\n\r\n}\r\n","<div id=\"parent3\"  [hidden]=\"storyInput?.hide\" [ngClass]=\"classes\"  >\r\n  <div id=\"parent1\" >\r\n    <div class=\"main\"  [formGroup]=\"this.currentForm\">\r\n      <div>\r\n        <!--a class=\"user-name D-Caps-Regular\">{{storyInput?.state}}</a-->\r\n        <p class=\"user-name D-Caps-Regular\">{{storyInput?.type}}</p>\r\n\r\n        <br>\r\n        <span ngSwitch=\"{{storyInput.name.valueOf()!}}\">\r\n          <span *ngSwitchCase=\"'password'\" >\r\n            <storybook-button-continue   size=\"small\" label=\"Change Password\" type=\"button\" (onClick)=\"this.changePassword.emit()\" >\r\n            </storybook-button-continue>\r\n          </span>\r\n\r\n          <span *ngSwitchCase=\"'tadiran_gate_PreviousAlertPassExpDays'\" >\r\n            <p [attr.aria-label]=\"storyInput?.id + ''\" class=\"UserNameType\" >{{storyInput?.title}}  </p>\r\n            <div class=\"user-checkbox-header\">\r\n            <input  style=\"position: relative; margin: 0 2px 0 2px;   top: 1px; right: 3px;\"\r\n                    type=\"range\" min=\"14\" max=\"180\" step=\"1\"\r\n                    id=\"{{ storyInput?.id }}\"\r\n                    name=\"{{storyInput?.name}}\"\r\n                    formControlName=\"{{storyInput?.name}}\"\r\n                    placeholder=\"{{storyInput?.placeholder}}\"/>\r\n              <label class=\"EnableProfilePicture\" > {{this.formControler?.value}} </label>\r\n            </div>\r\n          </span>\r\n          <span *ngSwitchCase=\"'tadiran_gate_passExpDays'\" >\r\n            <p class=\"UserNameType\" >{{storyInput?.title}}  </p>\r\n            <div class=\"user-checkbox-header\">\r\n            <input  style=\"position: relative; margin: 0 2px 0 2px;   top: 1px; right: 3px;\"\r\n                    type=\"range\" min=\"14\" max=\"180\" step=\"1\"\r\n                    id=\"{{ storyInput?.id }}\"\r\n                    name=\"{{storyInput?.name}}\"\r\n                    formControlName=\"{{storyInput?.name}}\"\r\n                    placeholder=\"{{storyInput?.placeholder}}\"/>\r\n              <label class=\"EnableProfilePicture\"  >{{this.formControler?.value}}</label>\r\n            </div>\r\n          </span>\r\n          <span *ngSwitchCase=\"'tadiran_gate_TSV'\" >\r\n            <p class=\"UserNameType\" >{{storyInput?.title}}  </p>\r\n            <div class=\"user-checkbox-header\">\r\n            <input  style=\"position: relative; margin: 0 2px 0 2px;   top: 1px; right: 3px;\"  type=\"checkbox\"\r\n                    formControlName=\"{{storyInput?.name}}\"/>\r\n            <label class=\"EnableProfilePicture\" >Enable Profile Picture</label>\r\n            </div>\r\n          </span>\r\n          <span *ngSwitchCase=\"'spring_jpa_hibernate_ddlAuto'\" >\r\n            <p class=\"UserNameType\" >{{storyInput?.title}}  </p>\r\n            <div class=\"user-select-header\">\r\n              <select #ddlauto id=\"ddl-auto\" (change)=\"onSelectedDdlAuto()\"\r\n                      formControlName=\"{{storyInput?.name}}\">\r\n                <option value=\"\">--Please choose an option--</option>\r\n                <option value=\"create\">create</option>\r\n                <option value=\"create-drop\">create-drop</option>\r\n                <option value=\"validate\">validate</option>\r\n                <option value=\"update\">update</option>\r\n                <option value=\"none\">none</option>\r\n              </select>\r\n            </div>\r\n          </span>\r\n          <span *ngSwitchCase=\"'tadiran_gate_pinCodeLength'\" >\r\n            <p class=\"UserNameType\" >{{storyInput?.title}}  </p>\r\n            <div class=\"user-select-header\">\r\n              <select  style=\"position: relative; margin: 0 2px 0 2px;   bottom: 1px; right: 3px;\"\r\n                      #pinCodeLength id=\"{{ storyInput?.id }}\"\r\n                      (change)=\"onSelectedDdlAuto()\"\r\n                      formControlName=\"{{storyInput?.name}}\">\r\n                <option value=\"\">--Please choose an option--</option>\r\n                <option value=\"4\">Four</option>\r\n                <option value=\"5\">Five</option>\r\n                <option value=\"6\">Six</option>\r\n              </select>\r\n            </div>\r\n          </span>\r\n          <span *ngSwitchCase=\"'tadiran_gate_pinCodeValDura'\" >\r\n            <p class=\"UserNameType\" >{{storyInput?.title}}  </p>\r\n            <div class=\"user-checkbox-header\">\r\n            <input  style=\"position: relative; margin: 0 2px 0 2px;   top: 1px; right: 3px;\"\r\n                    type=\"range\" min=\"2\" max=\"180\" step=\"1\"\r\n                    id=\"{{ storyInput?.id }}\"\r\n                    name=\"{{storyInput?.name}}\"\r\n                    formControlName=\"{{storyInput?.name}}\"\r\n                    placeholder=\"{{storyInput?.placeholder}}\"/>\r\n              <label class=\"EnableProfilePicture\"  >{{this.formControler?.value}}</label>\r\n            </div>\r\n          </span>\r\n          <span *ngSwitchDefault >\r\n            <label  [attr.aria-label]=\"storyInput?.id + ''\" for=\"{{ storyInput?.title }}\" class=\"Vector2 \">\r\n              <img src=\"{{ storyInput?.icon }}\" class=\"icon-input\" alt=\"icon input userName\"  name=\"{{ storyInput?.title }}\" />\r\n              <div [inputPopover] = \"this.popover\" [data]=\"this.getErrorList(this.conditionList)\" [header]=\"this.getErrorHeader(this.storyInput.title)\">\r\n                <input\r\n                  type=\"{{storyInput?.type}}\"\r\n                  id=\"{{ storyInput?.id }}\"\r\n                  class=\"inputField\"\r\n                  name=\"{{storyInput?.title}}\"\r\n                  formControlName=\"{{storyInput?.title}}\"\r\n                  placeholder=\"{{storyInput?.placeholder}}\"\r\n                  required />\r\n              </div>\r\n\r\n\r\n              <br>\r\n\r\n\r\n            </label>\r\n\r\n\r\n            <button  class=\"icon-input-edit\"  type=\"button\">\r\n              <img src=\"./assets/images/EditIconA.png\" class=\"icon-input-edit\" alt=\"icon input type\" />\r\n            </button>\r\n          </span>\r\n        </span>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n</div>\r\n","// also exported from '@storybook/angular' if you can deal with breaking changes in 6.1\nimport {Story, Meta, moduleMetadata, componentWrapperDecorator} from '@storybook/angular';\nimport {action} from \"@storybook/addon-actions\";\nimport {ConfigurationInputComponent} from \"./configuration-input.component\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators} from \"@angular/forms\";\nimport PassStrengthComponent from \"src/stories/pass-strength/pass-strength.component\";\n\n// More on default export: https://storybook.js.org/docs/angular/writing-stories/introduction#default-export\nexport default {\n  title: 'Design System/Atoms/Inputs/ConfigurationInput',\n  component: ConfigurationInputComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [ ConfigurationInputComponent, PassStrengthComponent  ],\n      imports: [CommonModule, FormsModule, ReactiveFormsModule ],\n    }),\n    componentWrapperDecorator(story => `<div style=\"margin: 3em 1em 0 1em/*; width: 445px*/;\">${story}</div>`),\n  ],\n  /*argTypes: {\n    registerForm: new FormGroup({\n      username: new FormControl('', Validators.minLength(2)),\n      password: new FormControl('zaqwsx', Validators.minLength(2))\n    }),\n  },*/\n  excludeStories: /.*Data$/,\n} as Meta;\n\nexport const actionsData = {\n  onPinInput: action('onPinInput'),\n  onArchiveInput: action('onArchiveInput'),\n};\n\nconst Template: Story = args => ({\n  props: {\n    ...args,\n    onPinInput: actionsData.onPinInput,\n    onArchiveInput: actionsData.onArchiveInput,\n  },\n});\n\n\n\nexport const Default = Template.bind({});\nDefault.args = {\n  storyInput: {\n    id: '1',\n    title: 'Ex.Saul Ramirez',\n    state: 'USER NAME',\n    value: '',\n    icon: './assets/images/User2ldpi.png',\n    type: 'text',\n    placeholder: 'placeholder',\n    hide: false\n  },\n  /*currentForm: {\n    username: new FormControl('ea6', Validators.minLength(2)),\n    password: new FormControl('', []),\n  },*/\n  hideInput: false,\n\n};\n\nexport const PassExpDays = Template.bind({});\nPassExpDays.args = {\n  ...Default.args,\n  storyInput: {\n    id: '2',\n    name: 'tadiran_gate_passExpDays',\n    title: 'Maximum time period for password to expired (in days):',\n    state: 'PASSWORD EXPIRATION POLICES',\n    value: '',\n    icon: '',\n    type: 'tadiran.gate.pass-exp-days',\n    placeholder: '',\n    hide: false\n  },\n  currentForm: {\n    ...Default.args['currentForm'],\n    password: new FormControl('ea6', Validators.minLength(2)),\n  },\n};\n\nexport const PreviousAlertPassExpDays = Template.bind({});\nPreviousAlertPassExpDays.args = {\n  storyInput: {\n    id: '3',\n    name: 'tadiran_gate_PreviousAlertPassExpDays',\n    title: 'Time period for display message - password about to expired:',\n    state: 'PASSWORD EXPIRED ALERT DURATION',\n    value: '',\n    icon: '',\n    type: 'tadiran.gate.PreviousAlertPassExpDays',\n    placeholder: 20,\n    hide: false\n  },\n};\n\nexport const TSV = Template.bind({});\nTSV.args = {\n  storyInput: {\n    id: '4',\n    name: 'tadiran_gate_TSV',\n    title: 'tadiran.gate.TSV',\n    state: 'TWO STEP VERIFICATION',\n    value: '',\n    icon: './assets/images/LockIcon2ldpi.png',\n    type: 'tadiran.gate.TSV',\n    placeholder: 'your_password',\n    hide: false\n  },\n};\n\nexport const DdlAuto = Template.bind({});\nDdlAuto.args = {\n  storyInput: {\n    id: '5',\n    name: 'spring_jpa_hibernate_ddlAuto',\n    title: 'DataBase Privilege',\n    state: '',\n    value: '',\n    icon: '',\n    type: 'spring.jpa.hibernate.ddl-auto',\n    placeholder: 'Ex: abc@example.com',\n    hide: false\n  },\n};\n\n\nexport const PinCodeLength = Template.bind({});\nPinCodeLength.args = {\n  storyInput: {\n    id: '6',\n    name: 'tadiran_gate_pinCodeLength',\n    title: 'Pin-Code - Amount of digits',\n    state: '',\n    value: '',\n    icon: '',\n    type: 'tadiran.gate.pin-code-length',\n    placeholder: '4',\n    hide: false\n  },\n};\n\n\nexport const PinCodeValDura = Template.bind({});\nPinCodeValDura.args = {\n  storyInput: {\n    id: '7',\n    name: 'tadiran_gate_pinCodeValDura',\n    title: 'Pin-Code - Duration before expired (in Minutes).',\n    state: '',\n    value: '',\n    icon: '',\n    type: 'tadiran.gate.pin-code-val-dura',\n    placeholder: '15',\n    hide: false\n  },\n};\n\n\nexport const Phone = Template.bind({});\nPhone.args = {\n  storyInput: {\n    id: '8',\n    title: 'phone',\n    state: 'PHONE NUMBER FOR AUTHENTICATION',\n    value: '',\n    icon: './assets/images/Phone3ldpi.png',\n    type: 'tel',\n    placeholder: 'Ex: +972547762084',\n    hide: false\n  },\n  hideInput: true,\n};\n\n\n","import {\r\n  Component, ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Inject,\r\n  Injector,\r\n  Input,\r\n  OnInit,\r\n  Output, ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { DigitcodeInput } from './digitcode-input.model'\r\nimport {\r\n  AbstractControl,\r\n  ControlValueAccessor,\r\n  FormControl,\r\n  FormGroup,\r\n  NG_VALIDATORS,\r\n  Validator,\r\n  Validators\r\n} from \"@angular/forms\";\r\nimport {PopoverOptions} from \"src/stories/directive/popover.interface\";\r\nimport {ActionInputComponent} from \"src/stories/actions/action-input/action-input.component\";\r\nimport {ActionInput} from \"src/stories/actions/action-input/action-input.interface\";\r\n\r\n\r\nexport interface GroupForm {\r\n  username:  FormControl,\r\n  password:  FormControl,\r\n}\r\n\r\nexport interface ValidationForm {\r\n  validationForm2: GroupForm,\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-digitcode-input',\r\n  templateUrl: './digitcode-input.component.html',\r\n  styleUrls: ['./digitcode-input.scss']\r\n})\r\nexport class DigitcodeInputComponent implements OnInit{\r\n\r\n  @Input() digitInput?: DigitcodeInput;\r\n\r\n  @ViewChild('input') public input!: ElementRef<HTMLInputElement>;\r\n  @Input() inputType !: string;\r\n  @Input() inputMode !: string;\r\n  @Input() disabled !: boolean;\r\n  @Input() autocapitalize ?: string;\r\n  @Input() isFirst ?: boolean;\r\n  @Input() isLast ?: boolean;\r\n  @Output() onClick: EventEmitter<Event> = new EventEmitter<Event>();\r\n  @Output() onPaste: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() onInput: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() onKeydown: EventEmitter<Event> = new EventEmitter<Event>();\r\n  value: string = '';\r\n\r\n\r\n  public get classes(): string[] {\r\n\r\n    //const isFirst = (this.index === 1) ? 'storybook-digitcode-input--first' : 'storybook-digitcode-input--notFirst';\r\n\r\n    return ['storybook-digitcode-input'];\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","\r\n\r\n<label class=\"Vector2\" [ngStyle]=\"{'margin-left': isFirst ? '0' : '10px',  'margin-right': isLast ? '0' : '10px'}\">\r\n\r\n   <input #input\r\n         (click)=\"onClick.emit($event)\"\r\n         (paste)=\"onPaste.emit($event)\"\r\n         (input)=\"onInput.emit($event)\"\r\n         (keydown)=\"onKeydown.emit($event)\"\r\n         [type]=\"this.inputType\"\r\n         [disabled]=\"disabled\"\r\n         [attr.inputmode]=\"inputMode\"\r\n         [attr.autocapitalize]=\"autocapitalize\"\r\n         [value]=\"value\"\r\n         autocomplete=\"one-time-code\"\r\n         class=\"digit\"/>\r\n</label>\r\n","import {Component, EventEmitter, HostBinding, Inject, Injector, Input, OnInit, Output} from '@angular/core';\r\nimport { StoryInput } from './story-input.model'\r\nimport {\r\n  AbstractControl,\r\n  ControlValueAccessor,\r\n  FormControl,\r\n  FormGroup,\r\n  NG_VALIDATORS,\r\n  Validator,\r\n  Validators\r\n} from \"@angular/forms\";\r\nimport {PopoverOptions} from \"src/stories/directive/popover.interface\";\r\nimport {ActionInputComponent} from \"src/stories/actions/action-input/action-input.component\";\r\nimport {ActionInput} from \"src/stories/actions/action-input/action-input.interface\";\r\n\r\n\r\nexport interface GroupForm {\r\n  username:  FormControl,\r\n  password:  FormControl,\r\n}\r\n\r\nexport interface ValidationForm {\r\n  validationForm2: GroupForm,\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-input',\r\n  templateUrl: './story-input.component.html',\r\n  styleUrls: ['./story-input.scss']\r\n})\r\nexport class StoryInputComponent implements OnInit{\r\n\r\n\r\n\r\n  popover: PopoverOptions = {\r\n    content: ActionInputComponent\r\n  };\r\n\r\n  @Input() storyInput!: StoryInput;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onPinInput = new EventEmitter<Event>();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onArchiveInput = new EventEmitter<Event>();\r\n\r\n\r\n  @Input()\r\n  hideInput = false;\r\n\r\n  showPassChange(): void {\r\n    this.storyInput.type = (this.storyInput?.type == 'password' ? 'text' : 'password')\r\n  }\r\n\r\n  @Input() currentForm!: FormGroup;\r\n\r\n  private isStrength: string = (this.storyInput?.state === 'NEW PASSWORD') ? 'storybook-input--addStrength' : 'storybook-input--clearStrength';\r\n\r\n  public isPasswordTextHide: boolean = false;\r\n\r\n  @Input() conditionList: string[] = [];\r\n  /*registerForm = new FormGroup({\r\n    username: new FormControl('', Validators.minLength(2)),\r\n    password: new FormControl('zaqwsx', Validators.minLength(2))\r\n  });\r\n\r\n\r\n  get username2(): FormControl  {\r\n    return this.currentForm?.controls.username.get();\r\n  }*/\r\n\r\n  get username(): AbstractControl {\r\n    return this.currentForm.get('username')!;\r\n  }\r\n\r\n\r\n  get password(): AbstractControl {\r\n    return this.currentForm.get('password')!;\r\n  }\r\n\r\n  public getErrorHeader(controllerType: string): string {\r\n    let header: string = '';\r\n\r\n    switch (controllerType) {\r\n      case \"phone\":\r\n        header = 'Must contain phone:';\r\n        break;\r\n\r\n      case \"email\":\r\n        header = 'Must contain email:';\r\n        break;\r\n\r\n      case \"oldPassword\":\r\n      case \"confirmPassword\":\r\n      case \"password\":\r\n        header = 'The password must contain:';\r\n        break;\r\n\r\n      default:\r\n        header = controllerType;\r\n    }\r\n\r\n    return header;\r\n  }\r\n\r\n  public getErrorList(conditionList: String[]): ActionInput[] {\r\n\r\n    let passConditions: string[] = [];\r\n\r\n\r\n    var actionInputs: ActionInput[] = [];\r\n\r\n    conditionList.forEach(condition => {\r\n      switch (condition) {\r\n        case \"minLength\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"minLengthValid\",\r\n            \"presentingMessage\": ' A minimum of 8 characters',\r\n            \"isFulfilled\": !(this.minLengthValid || !(this.formControler.value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresUppercase\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresUppercaseValid\",\r\n            \"presentingMessage\": ' At least 1 Uppercase letters',\r\n            \"isFulfilled\": !(this.requiresUppercaseValid || !(this.formControler.value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresLowercase\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresLowercaseValid\",\r\n            \"presentingMessage\": ' At least 1 lowercase letters',\r\n            \"isFulfilled\": !(this.requiresLowercaseValid || !(this.formControler.value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresDigit\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresDigitValid\",\r\n            \"presentingMessage\": ' A number',\r\n            \"isFulfilled\": !(this.requiresDigitValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresSpecialChars\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresSpecialCharsValid\",\r\n            \"presentingMessage\": ' At least 1 special character',\r\n            \"isFulfilled\": !(this.requiresSpecialCharsValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresEmail\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresEmailValid\",\r\n            \"presentingMessage\": ' A well-formed email address',\r\n            \"isFulfilled\": !(this.requiresEmailValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresPhone\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresPhoneValid\",\r\n            \"presentingMessage\": ' A well-formed phone number',\r\n            \"isFulfilled\": !(this.requiresPhoneValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n      }\r\n    });\r\n\r\n\r\n    return actionInputs;\r\n  }\r\n\r\n  get passwordValid() {\r\n    return this.formControler.errors === null;\r\n  }\r\n\r\n  get requiredValid() {\r\n    return this.formControler.hasError(\"required\");\r\n  }\r\n\r\n  get minLengthValid() {\r\n    return this.formControler.hasError(\"minlength\");\r\n  }\r\n\r\n  get requiresDigitValid() {\r\n    return this.formControler.hasError(\"requiresDigit\");\r\n  }\r\n\r\n  get requiresUppercaseValid() {\r\n    return this.formControler.hasError(\"requiresUppercase\");\r\n  }\r\n\r\n  get requiresLowercaseValid() {\r\n    return this.formControler.hasError(\"requiresLowercase\") ;\r\n  }\r\n\r\n  get requiresSpecialCharsValid() {\r\n    return this.formControler.hasError(\"requiresSpecialChars\");\r\n  }\r\n\r\n  get requiresEmailValid() {\r\n    return this.formControler.hasError(\"email\");\r\n  }\r\n\r\n  get requiresPhoneValid() {\r\n    return this.formControler.hasError(\"requiresPhoneChars\");\r\n  }\r\n\r\n  get formControler(): AbstractControl {\r\n    return this.currentForm.get(this.storyInput?.title.toString())!;\r\n  }\r\n\r\n\r\n  /**\r\n   * Component method to trigger the onPin event\r\n   * @param id string\r\n   */\r\n  onPin(id: any) {\r\n    this.onPinInput.emit(id);\r\n  }\r\n  /**\r\n   * Component method to trigger the onArchive event\r\n   * @param id string\r\n   */\r\n  onArchive(id: any) {\r\n    this.onArchiveInput.emit(id);\r\n  }\r\n\r\n  public get classes(): string[] {\r\n    this.isStrength = (this.storyInput?.state === 'NEW PASSWORD') ? 'storybook-input--addStrength' : 'storybook-input--clearStrength';\r\n\r\n    return ['storybook-input-strength',  this.isStrength];\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.isPasswordTextHide = this.storyInput?.state.includes('PASSWORD');\r\n\r\n  }\r\n\r\n}\r\n","<div id=\"parent3\"  [hidden]=\"storyInput?.hide\" [ngClass]=\"classes\"  >\r\n<div id=\"parent1\" >\r\n  <div class=\"main\"  [formGroup]=\"this.currentForm\">\r\n  <div>\r\n  <p class=\"user-name D-Caps-Regular\">{{storyInput?.state}}</p>\r\n\r\n  <br>\r\n  <label [attr.aria-label]=\"storyInput?.id + ''\" for=\"{{ storyInput?.title }}\" class=\"Vector2 \">\r\n    <img src=\"{{ storyInput?.icon }}\" class=\"icon-input\" alt=\"icon input userName\"  name=\"{{ storyInput?.title }}\" />\r\n    <div [inputPopover] = \"this.popover\" [data]=\"this.getErrorList(this.conditionList)\" [header]=\"this.getErrorHeader(this.storyInput.title)\">\r\n    <input\r\n      type=\"{{storyInput?.type}}\"\r\n      id=\"{{ storyInput?.id }}\"\r\n      class=\"DanK203\"\r\n      name=\"{{storyInput?.title}}\"\r\n      formControlName=\"{{storyInput?.title}}\"\r\n      placeholder=\"{{storyInput?.placeholder}}\"\r\n      required />\r\n    </div>\r\n\r\n    <button *ngIf=\"this.isPasswordTextHide\" class=\"icon-input-showpass\" type=\"button\" (click)=\"showPassChange()\">\r\n      <img src=\"./assets/images/EyeIcon.png\" class=\"icon-input-showpass\" alt=\"icon input type\" />\r\n\r\n    </button>\r\n\r\n\r\n\r\n  <br>\r\n\r\n  <span hidden [ngSwitch]=\"storyInput?.title\" class=\"D-Caps-Regular\"  style=\"line-height: 0\" >\r\n      <span  class=\"position-absolute\"  *ngIf=\"formControler?.invalid && (formControler?.dirty || formControler?.touched)\"  >\r\n          <span *ngSwitchCase=\"'username'\"><br>{{storyInput?.state}} is required!</span>\r\n          <span *ngSwitchCase=\"'password'\">\r\n            <br>\r\n            {{storyInput?.state}} is required!\r\n            <!--div *ngIf=\"password.errors.required\">Password is required</div>\r\n            <div *ngIf=\"password.errors.minlength\">Password must be at least 1 characters</div-->\r\n          </span>\r\n          <span *ngSwitchCase=\"'email'\"   ><br>{{storyInput?.state}} is required!</span>\r\n          <span *ngSwitchCase=\"'phone'\"   ><br>{{storyInput?.state}} is required!</span>\r\n\r\n      </span>\r\n      <div   *ngIf=\"formControler?.valid && (formControler?.dirty || formControler?.touched)\">\r\n        <div *ngSwitchCase=\"'username'\">ok!</div>\r\n        <div *ngSwitchCase=\"'password'\">ok!</div>\r\n        <div *ngSwitchCase=\"'email'\"   >ok!</div>\r\n        <div *ngSwitchCase=\"'phone'\"   >ok!</div>\r\n      </div>\r\n\r\n </span>\r\n\r\n  </label>\r\n\r\n\r\n\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n<div id=\"parent2\"  *ngIf=\"storyInput?.state === 'NEW PASSWORD'\">\r\n  <div class=\"absolute\">\r\n    <storybook-pass-strength id=\"pass-strength\" [passwordToCheck]=\"password?.value\" ></storybook-pass-strength>\r\n  </div>\r\n</div>\r\n\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\n\n\n\n@Component({\n  selector: 'storybook-background1',\n  templateUrl: './background1Component.html',\n  styleUrls: ['./background1Component.scss']\n})\nexport default class Background1Component {\n\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = true;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  background?: string;\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Page2Component';\n\n  /*user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n\n  }*/\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-background1--primary' : 'storybook-background1--secondary';\n\n    return ['storybook-background1', mode];\n  }\n\n  constructor() {}\n\n\n\n\n}\n\n","\r\n<figure class=\"Desktop-1Login-1\"  [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': background }\" >\r\n  <!--div [ngStyle]=\"{ 'background-color': background }\" ></div-->\r\n  <img src=\"assets/images/icon-1.webp\" srcset=\"./assets/images/icon-1@2x.webp 2x, /assets/images/icon-1@3x.webp 3x\"\r\n       alt=\"icon-1\" />\r\n\r\n  <img src=\"assets/images/icon-2.webp\" srcset=\"./assets/images/icon-2@2x.webp 2x, /assets/images/icon-2@3x.webp 3x\"\r\n       class=\"icon-2  \" alt=\"icon-2fdf\" />\r\n\r\n\r\n</figure>\r\n\r\n<storybook-button-language size=\"large\"></storybook-button-language>\r\n<storybook-button-tadiran></storybook-button-tadiran>\r\n<storybook-button-globe hidden ></storybook-button-globe>\r\n","import {Component, OnChanges, Input, SimpleChange} from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-pass-strength',\r\n  templateUrl: './pass-strength.component.html',\r\n  styleUrls: ['./pass-strength.scss']\r\n})\r\nexport default class PassStrengthComponent implements OnChanges  {\r\n\r\n  /**\r\n   * Is this the principal call to action on the login-main?\r\n   */\r\n  @Input() primary: boolean = false;\r\n\r\n\r\n  /**\r\n   * The password strength in percentage.\r\n   */\r\n  @Input() strength: number = 0;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input() backgroundColor?: string;\r\n\r\n  /**\r\n   * The password to measure.\r\n   */\r\n  @Input() passwordToCheck?: string;\r\n\r\n  private static measureStrength(pass: string) {\r\n    let score = 0;\r\n    // award every unique letter until 5 repetitions\r\n    let letters: any = {};\r\n    for (let i = 0; i< pass.length; i++) {\r\n      letters[pass[i]] = (letters[pass[i]] || 0) + 1;\r\n      score += 5.0 / letters[pass[i]];\r\n    }\r\n    // bonus points for mixing it up\r\n    let variations: any = {\r\n      digits: /\\d/.test(pass),\r\n      lower: /[a-z]/.test(pass),\r\n      upper: /[A-Z]/.test(pass),\r\n      nonWords: /\\W/.test(pass),\r\n    };\r\n\r\n    let variationCount = 0;\r\n    for (let check in variations) {\r\n      variationCount += (variations[check]) ? 1 : 0;\r\n    }\r\n    score += (variationCount - 1) * 10;\r\n    return Math.trunc(score);\r\n  }\r\n\r\n  public strengthColor(strength: number) {\r\n\r\n    if (strength < 10) return 0;\r\n    if (strength < 20) return 10;\r\n    if (strength < 30) return 20;\r\n    if (strength < 40) return 30;\r\n    if (strength < 50) return 40;\r\n    if (strength < 60) return 50;\r\n    if (strength < 70) return 60;\r\n    if (strength < 90) return 70;\r\n    if (strength < 99) return 90;\r\n\r\n    return 100;\r\n  }\r\n\r\n  ngOnChanges(changes: {[propName: string]: SimpleChange}): void {\r\n    var password = changes['passwordToCheck'].currentValue;\r\n    if (password) {\r\n      this.strength = PassStrengthComponent.measureStrength(password);\r\n    }\r\n  }\r\n\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-pass-strength--primary' : 'storybook-pass-strength--secondary';\r\n\r\n    return ['storybook-pass-strength', `storybook-pass-strength--${this.strengthColor(this.strength)}`, mode];\r\n  }\r\n\r\n}\r\n\r\n","\r\n<div id=\"PassStrength\" [ngClass]=\"classes\"   class=\"storybook-pass-strength  \" >\r\n  <div class=\"center\"><a class=\"mfont\">Strength : {{this.strength?.toString()}}%</a>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-spinner1',\n  templateUrl: './spinner1.component.html',\n  styleUrls: ['./spinner1.component.css']\n})\nexport class Spinner1Component {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-ex--primary' : 'storybook-button-ex--secondary';\n\n    return ['storybook-button-ex', `storybook-button-ex--${this.size}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<button class=\"Vector\" (click)=\"onClick.emit($event)\" >\n\n    <img  [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n       src=\"./assets/images/Spinner1.gif\"\n           class=\"Ex-Icon\"  alt=\"Ex-Icon\"/>\n\n</button>\n\n","/* (ignored) */"],"sourceRoot":"webpack:///"}