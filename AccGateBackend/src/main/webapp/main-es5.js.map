{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/_helpers/auth.interceptor.ts","webpack:///src/app/_services/auth.service.ts","webpack:///src/app/_services/token-storage.service.ts","webpack:///src/app/_services/user.service.ts","webpack:///src/app/_shared/event-bus.service.ts","webpack:///src/app/_shared/event.class.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.config.ts","webpack:///src/app/app.module.ts","webpack:///src/app/board-admin/board-admin.component.html","webpack:///src/app/board-admin/board-admin.component.ts","webpack:///src/app/board-moderator/board-moderator.component.ts","webpack:///src/app/board-moderator/board-moderator.component.html","webpack:///src/app/board-user/board-user.component.ts","webpack:///src/app/board-user/board-user.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login2/login-main/login-main.component.ts","webpack:///src/app/login2/login-main/login-main.component.html","webpack:///src/app/login2/login-main/register-form2/register-form2.component.ts","webpack:///src/app/login2/login-main/register-form2/register-form2.component.html","webpack:///src/app/login2/login-main/replace-pass-form2/replace-pass-form2.component.ts","webpack:///src/app/login2/login-main/replace-pass-form2/replace-pass-form2.component.html","webpack:///src/app/login2/login2-routing.module.ts","webpack:///src/app/login2/login2.component.ts","webpack:///src/app/login2/login2.component.html","webpack:///src/app/login2/login2.module.ts","webpack:///src/app/login2/logtest/logtest.component.ts","webpack:///src/app/login2/logtest/logtest.component.html","webpack:///src/app/login/login.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/register-form/register-form.component.html","webpack:///src/app/login/register-form/register-form.component.ts","webpack:///src/app/login/replace-pass-form/replace-pass-form.component.html","webpack:///src/app/login/replace-pass-form/replace-pass-form.component.ts","webpack:///src/app/pipes/api-error-message.pipe.ts","webpack:///src/app/pipes/login-error-message.pipe.ts","webpack:///src/app/profile2/profile2.component.ts","webpack:///src/app/profile2/profile2.component.html","webpack:///src/app/profile/profile.component.html","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/storybook/pipes/api-error-message.pipe.ts","webpack:///src/app/storybook/pipes/api-error-message.service.ts","webpack:///src/app/storybook/storybook.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///src/stories/actions/action-avatar/action-avatar.component.ts","webpack:///src/stories/actions/action-avatar/action-avatar.component.html","webpack:///src/stories/actions/action-input/action-input.component.html","webpack:///src/stories/actions/action-input/action-input.component.ts","webpack:///src/stories/app-menu/app-menu.component.html","webpack:///src/stories/app-menu/app-menu.component.ts","webpack:///src/stories/avatars/avatar.component.html","webpack:///src/stories/avatars/avatar.component.ts","webpack:///src/stories/buttons/button-apps/button-apps.component.ts","webpack:///src/stories/buttons/button-apps/button-apps.component.html","webpack:///src/stories/buttons/button-continue/button-continue.component.ts","webpack:///src/stories/buttons/button-continue/button-continue.component.html","webpack:///src/stories/buttons/button-ex/button-ex.component.ts","webpack:///src/stories/buttons/button-ex/button-ex.component.html","webpack:///src/stories/buttons/button-example/button.component.ts","webpack:///src/stories/buttons/button-exclamation-mark/button-exclamation-mark.component.ts","webpack:///src/stories/buttons/button-exclamation-mark/button-exclamation-mark.component.html","webpack:///src/stories/buttons/button-fortest/button-fortest.component.ts","webpack:///src/stories/buttons/button-fortest/custom-directive/Highlight.directive.ts","webpack:///src/stories/buttons/button-globe/button-globe.component.ts","webpack:///src/stories/buttons/button-globe/button-globe.component.html","webpack:///src/stories/buttons/button-language/button-language.component.ts","webpack:///src/stories/buttons/button-language/button-language.component.html","webpack:///src/stories/buttons/button-successfully/button-successfully.component.ts","webpack:///src/stories/buttons/button-successfully/button-successfully.component.html","webpack:///src/stories/buttons/button-tadiran/button-tadiran.component.ts","webpack:///src/stories/cards/card.component.ts","webpack:///src/stories/cards/card.component.html","webpack:///src/stories/directive/bubble-avatar/bubble-avatar.component.html","webpack:///src/stories/directive/bubble-avatar/bubble-avatar.component.ts","webpack:///src/stories/directive/bubble-avatar/popover.directive.ts","webpack:///src/stories/directive/bubble-input/bubble-input.component.html","webpack:///src/stories/directive/bubble-input/bubble-input.component.ts","webpack:///src/stories/directive/bubble-input/popover-input.directive.ts","webpack:///src/stories/directive/dynamic-comp.directive.ts","webpack:///src/stories/forms/login-form/login-form-component.html","webpack:///src/stories/forms/login-form/login-form-component.ts","webpack:///src/stories/forms/registry-form/registry-form.component.html","webpack:///src/stories/forms/registry-form/registry-form.component.ts","webpack:///src/stories/forms/replace-pass-form/replace-pass-form.component.html","webpack:///src/stories/forms/replace-pass-form/replace-pass-form.component.ts","webpack:///src/stories/inputs/story-input.component.html","webpack:///src/stories/inputs/story-input.component.ts","webpack:///src/stories/pages/background1/background1Component.ts","webpack:///src/stories/pages/background1/background1Component.html","webpack:///src/stories/pass-strength/pass-strength.component.ts","webpack:///src/stories/pass-strength/pass-strength.component.html","webpack:///src/stories/spinners/spinner1/spinner1.component.ts","webpack:///src/stories/spinners/spinner1/spinner1.component.html","webpack:///src/stories/task-list/task-list.component.html","webpack:///src/stories/task-list/task-list.component.ts","webpack:///src/stories/task/task.component.html","webpack:///src/stories/task/task.component.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","TOKEN_HEADER_KEY","AuthInterceptor","tokenService","authService","isRefreshing","refreshTokenSubject","BehaviorSubject","next","authReq","token","getToken","addTokenHeader","handle","pipe","catchError","error","HttpErrorResponse","url","includes","status","handle401Error","throwError","request","getRefreshToken","refreshToken","switchMap","saveToken","accessToken","saveRefreshToken","err","signOut","filter","take","clone","headers","set","subscribe","data","authInterceptorProviders","provide","HTTP_INTERCEPTORS","useClass","multi","AUTH_API","AppConfig","httpOptions","HttpHeaders","AuthService","http","username","password","post","email","phone","responseType","oldPassword","confirmPassword","roles","webapp","webApp","TOKEN_KEY","REFRESHTOKEN_KEY","USER_KEY","TokenStorageService","window","sessionStorage","clear","removeItem","setItem","user","getUser","saveUser","getItem","JSON","stringify","parse","API_URL","UserService","get","EventBusService","subject$","Subject","event","eventName","action","name","map","EventData","value","routes","path","component","HomeComponent","LoginComponent","loadChildren","m","Login2Module","RegisterComponent","RegisterFormComponent","ProfileComponent","BoardUserComponent","BoardModeratorComponent","BoardAdminComponent","redirectTo","pathMatch","AppModule","AppRoutingModule","RouterModule","AppComponent","tokenStorageService","eventBusService","isLoggedIn","showAdminBoard","showModeratorBoard","eventBusSub","on","logout","unsubscribe","parsedUrl","URL","location","href","hostname","port","protocol","APP_CONFIG","InjectionToken","accServer","ACCWEBServers","endpoints","BrowserModule","HttpClientModule","NgbDatepickerModule","MdbAccordionModule","MdbCarouselModule","MdbCheckboxModule","MdbCollapseModule","MdbDropdownModule","MdbFormsModule","MdbModalModule","MdbPopoverModule","MdbRadioModule","MdbRangeModule","MdbRippleModule","MdbScrollspyModule","MdbTabsModule","MdbTooltipModule","MdbValidationModule","BrowserAnimationsModule","ModalModule","ButtonsModule","MDBBootstrapModule","StorybookModule","ApiErrorMessagePipe","LoginErrorMessagePipe","ReplacePassFormComponent","platformBrowser","bootstrapModule","userService","form","isSuccessful","isSignUpFailed","errorMessage","rolesList","getAdminBoard","content","message","push","register","console","log","getModeratorBoard","getUserBoard","emit","ACC_VERSION","getPublicContent","getAccVersion","LoginMainComponent","renderer","registerFormDialog","replacePassFormDialog","tokenStorage","router","isLoginFailed","loginErrorMessage","storyInputsInOrder","title","state","icon","type","placeholder","hide","primary","label","loginForm","FormGroup","FormControl","Validators","mode","registerFormDialogRef","open","getUsernameCurrentFieldValue","getPasswordCurrentFieldValue","afterClosed","result","toPromise","replacePassFormDialogRef","ReplacePassForm2Component","beforeClosed","setUsernameCurrentFieldValue","setPasswordCurrentFieldValue","toString","setValue","pass","warn","login","profile2","openRegisterForm","val","onSubmit","undefined","openReplacePassForm","navigate","reload","RegisterForm2Component","dialogRef","isRegSuccess","isRegFailed","submitted","empList","apiResponse","errorFieldSubmitted","closeResult","registerForm","PasswordValidators","RegExp","requiresPhoneChars","close","getRawValue","errorResponse","regErrorMessage","MAT_DIALOG_DATA","isRepSuccess","isRepFailed","repErrorMessage","replacePassForm","userName","patternValidator","requiresDigit","requiresUppercase","requiresLowercase","requiresSpecialChars","regex","control","valid","test","LogtestComponent","Login2RoutingModule","Login2Component","MatDialogModule","MatButtonModule","TaskComponent","TaskListComponent","registerFormService","replacePassFormService","registerFormRef","replacePassFormRef","showPass","openReplacePassword","onClose","reloadPage","modalRef","validationForm","dataToArray","split","item","trim","join","Profile2Component","isLoading","permittedWebAppList","realtime","scriptDesigner","agent","aeonixAdmin","admin","passExp","previousAlertPassExp","currentUser","setPassExpAlertData","setPermittedWebAppList","getPassExpireDate","getPermittedWebAppList","origin","windowObjectReference","document","getElementById","innerHTML","promise","reject","appRequest","values","webappURLPrefix","newAccessToken","newRefreshToken","newCurrentUser","webapptab","setTimeout","openNewWinForApp","openNewTabForApp","apiErrorMessageService","args","language","apiErrorMessage","ApiErrorMessageService","languages","dictionary","languange","eng","key","TranslationSet","AvatarComponent","CommonModule","FormsModule","ReactiveFormsModule","ButtonGlobeComponent","ButtonTadiranComponent","ButtonLanguageComponent","ButtonFortestComponent","ButtonContinueComponent","ButtonExComponent","ButtonAppsComponent","ButtonSuccessfullyComponent","AppMenuComponent","StoryInputComponent","HighlightDirective","DynamicCompDirective","ActionAvatarComponent","PopoverDirective","BubbleAvatarComponent","ActionInputComponent","PopoverInputDirective","BubbleInputComponent","ButtonExclamationMarkComponent","Spinner1Component","environment","production","enableProdMode","actionHeader","actionButton","EventEmitter","bubbleOn","actionInputs","credentials","onPinInput","onArchiveInput","arr","initialTasks","t","filteredTasks","popover","header","isNotify","size","onClick","isDisabled","application","gallery","galleryMode","ButtonComponent","eleRef","nativeElement","style","color","colorName","CardComponent","componentFactoryResolver","show","isDynamic","triggerDetectionChange","options","componentFactory","resolveComponentFactory","viewContainerRef","actionAvatarComponentRef","createComponent","instance","setHeader","setBubbleOn","$event","_viewContainerRef","carComponentRef","el","viewContainer","avatarButton","popoverComponentRef","showPopup","hidePopup","factory","comp","create","injector","display","classList","add","appendChild","hostView","detectChanges","actionInputComponentRef","setConditions","length","setData","LoginFormComponent","param","mForm","sendLoginReq","RegistryFormComponent","changeLog","sendRegReq","clickXButton","changes","previousValue","currentValue","loadSuccessfullyLoggedIn","setProperty","mainHeader","hideInput","isStrength","storyInput","isPasswordTextHide","conditionList","currentForm","controllerType","passConditions","forEach","condition","minLengthValid","controls","requiresUppercaseValid","requiresLowercaseValid","requiresDigitValid","requiresSpecialCharsValid","requiresEmailValid","requiresPhoneValid","formControler","errors","hasError","Background1Component","PassStrengthComponent","strength","measureStrength","strengthColor","score","letters","i","variations","digits","lower","upper","nonWords","variationCount","check","Math","trunc","onArchiveTask","onPinTask","tasksInOrder","loading","onArchive"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { HTTP_INTERCEPTORS, HttpEvent, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\n\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\r\nimport { catchError, filter, switchMap, take } from 'rxjs/operators';\r\n\r\n const TOKEN_HEADER_KEY = 'Authorization';       // for Spring Boot back-end\r\n//const TOKEN_HEADER_KEY = 'x-access-token';   // for Node.js Express back-end\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  private isRefreshing = false;\r\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  constructor(private tokenService: TokenStorageService, private authService: AuthService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let authReq = req;\r\n    const token = this.tokenService.getToken();\r\n    if (token != null) {\r\n      authReq = this.addTokenHeader(req, token);\r\n      // for Spring Boot back-end\r\n      // authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\r\n\r\n      // for Node.js Express back-end\r\n      //authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, token) });\r\n    }\r\n    return next.handle(authReq).pipe(catchError(error => {\r\n      if (error instanceof HttpErrorResponse && !authReq.url.includes('auth/signin') && error.status === 401) {\r\n        return this.handle401Error(authReq, next);\r\n      }\r\n      return throwError(error);\r\n    }));\r\n  }\r\n\r\n\r\n  private handle401Error(request: HttpRequest<any>, next: HttpHandler) {\r\n    if (!this.isRefreshing) {\r\n      this.isRefreshing = true;\r\n      this.refreshTokenSubject.next(null);\r\n      const token = this.tokenService.getRefreshToken();\r\n      if (token)\r\n        return this.authService.refreshToken(token).pipe(\r\n          switchMap((token: any) => {\r\n            this.isRefreshing = false;\r\n            this.tokenService.saveToken(token.accessToken);\r\n            this.tokenService.saveRefreshToken(token.refreshToken);\r\n            this.refreshTokenSubject.next(token.accessToken);\r\n\r\n            return next.handle(this.addTokenHeader(request, token.accessToken));\r\n          }),\r\n          catchError((err) => {\r\n            this.isRefreshing = false;\r\n\r\n            this.tokenService.signOut();\r\n            return throwError(err);\r\n          })\r\n        );\r\n    }\r\n    return this.refreshTokenSubject.pipe(\r\n      filter(token => token !== null),\r\n      take(1),\r\n      switchMap((token) => next.handle(this.addTokenHeader(request, token)))\r\n    );\r\n  }\r\n  private addTokenHeader(request: HttpRequest<any>, token: string) {\r\n    /* for Spring Boot back-end */\r\n     return request.clone({ headers: request.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\r\n    /* for Node.js Express back-end */\r\n    //return request.clone({ headers: request.headers.set(TOKEN_HEADER_KEY, token) });\r\n  }\r\n/*\r\n  public forseRefreshToken2() {\r\n    const token = this.tokenService.getRefreshToken();\r\n    if (token)\r\n      this.authService.refreshToken(token).pipe(\r\n        switchMap((token: any) => {\r\n          this.isRefreshing = false;\r\n          this.tokenService.saveToken(token.accessToken);\r\n          this.refreshTokenSubject.next(token.accessToken);\r\n\r\n          filter(token => token !== null),\r\n            take(1),\r\n            switchMap((token) => next.handle(this.addTokenHeader(request, token)))\r\n        }),\r\n        catchError((err) => {\r\n          this.isRefreshing = false;\r\n\r\n          this.tokenService.signOut();\r\n          return throwError(err);\r\n        })\r\n      );\r\n  }\r\n*/\r\n  public forseRefreshToken(): void {\r\n    const token = this.tokenService.getRefreshToken();\r\n    if (token)\r\n      this.authService.refreshToken(token).subscribe(\r\n        data => {\r\n          this.isRefreshing = false;\r\n          this.tokenService.saveToken(data.accessToken);\r\n          this.refreshTokenSubject.next(data.accessToken);\r\n\r\n\r\n        },\r\n        (err) => {\r\n          this.isRefreshing = false;\r\n\r\n          this.tokenService.signOut();\r\n          return throwError(err);\r\n        }\r\n      );\r\n  }\r\n}\r\n\r\nexport const authInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {AppConfig} from \"../app.config\";\r\n\r\n\r\nconst AUTH_API = AppConfig.accServer.ACCWEBServers+'/accGate/auth/';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signin', {\r\n      username,\r\n      password\r\n    }, httpOptions);\r\n  }\r\n\r\n  registerForm(username: string, email: string, password: string, phone: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'register-form', {\r\n      username,\r\n      email,\r\n      password,\r\n      phone,\r\n    }, {responseType: 'text'});\r\n  }\r\n\r\n  replacePassForm(username: string, oldPassword: string, password: string, confirmPassword: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'replace-pass-form', {\r\n      username,\r\n      oldPassword,\r\n      password,\r\n      confirmPassword,\r\n    }, {responseType: 'text'});\r\n  }\r\n\r\n  register(username: string, email: string, password: string, roles: Array<String>): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signup', {\r\n      username,\r\n      email,\r\n      password,\r\n      roles,\r\n    }, httpOptions);\r\n  }\r\n\r\n  getToken(url: string, username: string, email: string, password: string): Observable<any> {\r\n    return this.http.post(url, {\r\n      username,\r\n      email,\r\n      password\r\n    }, httpOptions);\r\n  }\r\n\r\n  // login, register\r\n  refreshToken(token: string): Observable<any>  {\r\n    return this.http.post(AUTH_API + 'refreshtoken', {\r\n      refreshToken: token\r\n    }, httpOptions);\r\n  }\r\n\r\n  // open app in a new browser tab\r\n  webapptab(token: string, webapp: string): Observable<any>  {\r\n    return this.http.post(AUTH_API + 'webapptab', {\r\n      refreshToken: token,\r\n      webApp: webapp\r\n    }, httpOptions);\r\n  }\r\n\r\n  getPassExpireDate(token: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'passexpdate', {\r\n      accessToken: token,\r\n    }, httpOptions);\r\n  }\r\n\r\n\r\n  getPermittedWebAppList(token: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'permitwebapplist', {\r\n      accessToken: token,\r\n    }, httpOptions);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nconst TOKEN_KEY = 'token';\r\nconst REFRESHTOKEN_KEY = 'auth-refreshtoken';\r\nconst USER_KEY = 'user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenStorageService {\r\n  constructor() { }\r\n\r\n  signOut(): void {\r\n    window.sessionStorage.clear();\r\n  }\r\n\r\n  public saveToken(token: string): void {\r\n    window.sessionStorage.removeItem(TOKEN_KEY);\r\n    window.sessionStorage.setItem(TOKEN_KEY, token);\r\n    const user = this.getUser();\r\n    if (user.id) {\r\n      this.saveUser({ ...user, accessToken: token });\r\n    }\r\n  }\r\n\r\n  public getToken(): string | null {\r\n    return window.sessionStorage.getItem(TOKEN_KEY);\r\n  }\r\n\r\n  public saveRefreshToken(token: string): void {\r\n    window.sessionStorage.removeItem(REFRESHTOKEN_KEY);\r\n    window.sessionStorage.setItem(REFRESHTOKEN_KEY, token);\r\n    const user = this.getUser();\r\n    if (user.id) {\r\n      user.refreshToken = token;\r\n      this.saveUser(user);\r\n    }\r\n  }\r\n  public getRefreshToken(): string | null {\r\n    return window.sessionStorage.getItem(REFRESHTOKEN_KEY);\r\n  }\r\n\r\n  public saveUser(user: any): void {\r\n    window.sessionStorage.removeItem(USER_KEY);\r\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\r\n  }\r\n\r\n  public getUser(): any {\r\n    const user = window.sessionStorage.getItem(USER_KEY);\r\n    if (user) {\r\n      return JSON.parse(user);\r\n    }\r\n    return {};\r\n  }\r\n\r\n  public getRoles(): any {\r\n    const user = window.sessionStorage.getItem(USER_KEY);\r\n    if (user) {\r\n      return JSON.parse(user);\r\n    }\r\n    return {};\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {AppConfig} from \"../app.config\";\r\n\r\nconst API_URL = AppConfig.accServer.ACCWEBServers+'/accGate/test/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getPublicContent(): Observable<any> {\r\n    return this.http.get(API_URL + 'all', { responseType: 'text' });\r\n  }\r\n\r\n  getAccVersion(): Observable<any> {\r\n    return this.http.get(API_URL + 'accversion', { responseType: 'text' });\r\n  }\r\n\r\n  getUserBoard(): Observable<any> {\r\n    return this.http.get(API_URL + 'user', { responseType: 'text' });\r\n  }\r\n\r\n  getModeratorBoard(): Observable<any> {\r\n    return this.http.get(API_URL + 'mod', { responseType: 'text' });\r\n  }\r\n\r\n  getAdminBoard(): Observable<any> {\r\n    return this.http.get(API_URL + 'admin', { responseType: 'text' });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { EventData } from './event.class';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventBusService {\r\n  private subject$ = new Subject<EventData>();\r\n  constructor() { }\r\n  emit(event: EventData) {\r\n    this.subject$.next(event);\r\n  }\r\n  on(eventName: string, action: any): Subscription {\r\n    return this.subject$.pipe(\r\n      filter((e: EventData) => e.name === eventName),\r\n      map((e: EventData) => e[\"value\"])).subscribe(action);\r\n  }\r\n}\r\n","export class EventData {\r\n  name: string;\r\n  value: any;\r\n  constructor(name: string, value: any) {\r\n    this.name = name;\r\n    this.value = value;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { BoardUserComponent } from './board-user/board-user.component';\r\nimport { BoardModeratorComponent } from './board-moderator/board-moderator.component';\r\nimport { BoardAdminComponent } from './board-admin/board-admin.component';\r\nimport { AppRoutingGuard } from './app-routing.guard';\r\n//import { Login2RoutingModule } from \"./login-main/login-main-routing.module\";\r\nimport Profile2Component from \"./profile2/profile2.component\";\r\nimport { RegisterComponent } from \"./register/register.component\";\r\n//import { Register2Component } from \"./register2/register2.component\";\r\nimport { RegisterFormComponent } from \"./login/register-form/register-form.component\";\r\nimport RegisterForm2Component from \"./login2/login-main/register-form2/register-form2.component\";\r\nimport {Login2Component} from \"./login2/login2.component\";\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'login2', loadChildren: () => import('./login2/login2.module').then(m => m.Login2Module), },\r\n  { path: 'register', component: RegisterComponent },\r\n  //{ path: 'register2', component: Register2Component },\r\n  { path: 'registeform', component: RegisterFormComponent },\r\n  //{ path: 'registerform2', component: RegisterForm2Component },\r\n  { path: 'profile', component: ProfileComponent/*, canActivate: [AppRoutingGuard] */},\r\n  { path: 'profile2', component: Profile2Component/*, canActivate: [AppRoutingGuard] */},\r\n  { path: 'user', component: BoardUserComponent },\r\n  { path: 'mod', component: BoardModeratorComponent },\r\n  { path: 'admin', component: BoardAdminComponent },\r\n  { path: '', redirectTo: 'login2', pathMatch: 'full' },\r\n  { path: 'home', loadChildren: () => import('./app.module').then(m => m.AppModule),},\r\n  { path: '**', redirectTo: 'login2',  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes/*, {useHash: true}*/)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit, OnDestroy  } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { TokenStorageService } from './_services/token-storage.service';\r\nimport { EventBusService } from './_shared/event-bus.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  private roles: string[] = [];\r\n  public isLoggedIn = false;\r\n  showAdminBoard = false;\r\n  showModeratorBoard = false;\r\n  username?: string;\r\n  eventBusSub?: Subscription;\r\n  title?: 'accGate';\r\n\r\n  constructor(private tokenStorageService: TokenStorageService, private eventBusService: EventBusService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\r\n\r\n    if (this.isLoggedIn) {\r\n      const user = this.tokenStorageService.getUser();\r\n      this.roles = user.roles;\r\n\r\n      this.showAdminBoard = (this.roles.includes('Admin') || this.roles.includes('SupervisorAdmin'));\r\n      this.showModeratorBoard = this.roles.includes('SupervisorMonitor');\r\n\r\n      this.username = user.username;\r\n    }\r\n    this.eventBusSub = this.eventBusService.on('logout', () => {\r\n      this.logout();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.eventBusSub)\r\n      this.eventBusSub.unsubscribe();\r\n  }\r\n\r\n  logout(): void {\r\n    this.tokenStorageService.signOut();\r\n    this.isLoggedIn = false;\r\n    this.roles = [];\r\n    this.showAdminBoard = false;\r\n    this.showModeratorBoard = false;\r\n    //window.location.reload();\r\n  }\r\n}\r\n","\r\n<router-outlet  id=\"app\" ></router-outlet>\r\n\r\n<!--div id=\"app\">\r\n  <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\r\n\r\n    <a href=\"#\" class=\"navbar-brand\">\r\n      <img _ngcontent-c0=\"accGate\" class=\"nav-img\" srcset=\"./assets/images/TadiranTelecom2.webp\"  width=\"56\"\r\n           height=\"56\"><label>accGate</label>\r\n    </a>\r\n    <ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\r\n      <li class=\"nav-item\">\r\n        <a href=\"/login-main\" class=\"nav-link\" routerLink=\"login-main\">Page </a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a href=\"/home\" class=\"nav-link\" routerLink=\"home\">Home </a>\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"showAdminBoard\">\r\n        <a href=\"/admin\" class=\"nav-link\" routerLink=\"admin\">Admin Board</a>\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"showModeratorBoard\">\r\n        <a href=\"/mod\" class=\"nav-link\" routerLink=\"mod\">Moderator Board</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a href=\"/user\" class=\"nav-link\" *ngIf=\"isRegSuccess\" routerLink=\"user\">User</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"!isRegSuccess\">\r\n      <li class=\"nav-item\">\r\n        <a href=\"/register\" class=\"nav-link\" routerLink=\"register\">Sign Up</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a href=\"/login\" class=\"nav-link\" routerLink=\"login\">Login</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"isRegSuccess\">\r\n      <li class=\"nav-item\">\r\n        <a href=\"/profile\" class=\"nav-link\" routerLink=\"profile\">{{ username }}</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a href class=\"nav-link\" (click)=\"logout()\">LogOut</a>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div-->\r\n","import {InjectionToken} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n// parse ful url to ip,port, params\r\nvar parsedUrl = new URL(window.location.href);\r\nvar url = parsedUrl.hostname;\r\nvar port = parsedUrl.port;\r\nvar protocol = parsedUrl.protocol;\r\nconst AUTH_API = protocol + \"//\" + url + \":\" + port;\r\n\r\nexport let APP_CONFIG = new InjectionToken('app.config');\r\nexport const AppConfig = {\r\n  accServer: {\r\n    ACCWEBServers: AUTH_API //'https://172.28.8.245:8445'\r\n  },\r\n  endpoints: {\r\n\r\n    TOKEN_KEY: 'token',\r\n    REFRESHTOKEN_KEY: 'auth-refreshtoken',\r\n    USER_KEY: 'user'\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n//import {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport Profile2Component from './profile2/profile2.component';\r\nimport { BoardAdminComponent } from './board-admin/board-admin.component';\r\nimport { BoardModeratorComponent } from './board-moderator/board-moderator.component';\r\nimport { BoardUserComponent } from './board-user/board-user.component';\r\n\r\nimport { authInterceptorProviders, AuthInterceptor } from './_helpers/auth.interceptor';\r\nimport {NgbDatepickerModule} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { MdbAccordionModule } from 'mdb-angular-ui-kit/accordion';\r\nimport { MdbCarouselModule } from 'mdb-angular-ui-kit/carousel';\r\nimport { MdbCheckboxModule } from 'mdb-angular-ui-kit/checkbox';\r\nimport { MdbCollapseModule } from 'mdb-angular-ui-kit/collapse';\r\nimport { MdbDropdownModule } from 'mdb-angular-ui-kit/dropdown';\r\nimport { MdbFormsModule } from 'mdb-angular-ui-kit/forms';\r\nimport { MdbModalModule } from 'mdb-angular-ui-kit/modal';\r\nimport { MdbPopoverModule } from 'mdb-angular-ui-kit/popover';\r\nimport { MdbRadioModule } from 'mdb-angular-ui-kit/radio';\r\nimport { MdbRangeModule } from 'mdb-angular-ui-kit/range';\r\nimport { MdbRippleModule } from 'mdb-angular-ui-kit/ripple';\r\nimport { MdbScrollspyModule } from 'mdb-angular-ui-kit/scrollspy';\r\nimport { MdbTabsModule } from 'mdb-angular-ui-kit/tabs';\r\nimport { MdbTooltipModule } from 'mdb-angular-ui-kit/tooltip';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ModalModule, TooltipModule, PopoverModule, ButtonsModule, MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport { RegisterFormComponent } from './login/register-form/register-form.component';\r\nimport {ReplacePassFormComponent} from \"./login/replace-pass-form/replace-pass-form.component\";\r\n//import {ReplacePassForm2Component} from \"./login2/login2.module\";\r\nimport {ApiErrorMessagePipe} from \"./pipes/api-error-message.pipe\";\r\nimport {LoginErrorMessagePipe} from \"./pipes/login-error-message.pipe\";\r\nimport Button from '../stories/buttons/button-example/button.component'\r\n\r\n//import {TaskListComponent} from '../stories/task-list/task-list.component'\r\nimport {Login2Module} from \"./login2/login2.module\";\r\nimport {StorybookModule} from \"./storybook/storybook.module\";\r\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\r\nimport {MdbValidationModule} from \"mdb-angular-ui-kit/validation\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        LoginComponent,\r\n        RegisterComponent,\r\n        //Register2Component,\r\n        HomeComponent,\r\n        ProfileComponent,\r\n        Profile2Component,\r\n        BoardAdminComponent,\r\n        BoardModeratorComponent,\r\n        BoardUserComponent,\r\n        RegisterFormComponent,\r\n        ApiErrorMessagePipe,\r\n        LoginErrorMessagePipe,\r\n        //ReplacePassForm2Component,\r\n        ReplacePassFormComponent\r\n\r\n\r\n\r\n    ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgbDatepickerModule,\r\n    MdbAccordionModule,\r\n    MdbCarouselModule,\r\n    MdbCheckboxModule,\r\n    MdbCollapseModule,\r\n    MdbDropdownModule,\r\n    MdbFormsModule,\r\n    MdbModalModule,\r\n    MdbPopoverModule,\r\n    MdbRadioModule,\r\n    MdbRangeModule,\r\n    MdbRippleModule,\r\n    MdbScrollspyModule,\r\n    MdbTabsModule,\r\n    MdbTooltipModule,\r\n    MdbValidationModule,\r\n    BrowserAnimationsModule,\r\n    ModalModule,\r\n    ButtonsModule,\r\n    MDBBootstrapModule.forRoot(),\r\n    Login2Module,\r\n    StorybookModule\r\n  ],\r\n  providers: [\r\n    authInterceptorProviders,\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n","<div class=\"container\">\r\n  <header class=\"jumbotron\">\r\n    <p>{{ content }}</p>\r\n  </header>\r\n  <div class=\"col-md-12\">\r\n    <div class=\"card card-container\">\r\n      <img\r\n        id=\"profile-img\"\r\n        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n        class=\"profile-img-card\"\r\n      />\r\n      <form\r\n        *ngIf=\"!isSuccessful\"\r\n        name=\"form\"\r\n        (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n        #f=\"ngForm\"\r\n        novalidate\r\n      >\r\n        <div class=\"form-group\">\r\n          <label for=\"userName\">Username</label>\r\n          <input type=\"text\" class=\"form-control\" name=\"userName\" [(ngModel)]=\"form.userName\"\r\n                 required minlength=\"3\" maxlength=\"20\" #userName=\"ngModel\"/>\r\n          <div class=\"alert-danger\" *ngIf=\"userName.errors && f.submitted\">\r\n            <div *ngIf=\"userName.errors.required\">Username is required</div>\r\n            <div *ngIf=\"userName.errors.minlength\">\r\n              Username must be at least 3 characters\r\n            </div>\r\n            <div *ngIf=\"userName.errors.maxlength\">\r\n              Username must be at most 20 characters\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email</label>\r\n          <input type=\"email\" class=\"form-control\" name=\"email\" [(ngModel)]=\"form.email\"\r\n                 required email #email=\"ngModel\"/>\r\n          <div class=\"alert-danger\" *ngIf=\"email.errors && f.submitted\">\r\n            <div *ngIf=\"email.errors.required\">Email is required</div>\r\n            <div *ngIf=\"email.errors.email\">\r\n              Email must be a valid email address\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"form.password\"\r\n                 required minlength=\"6\" #password=\"ngModel\"/>\r\n          <div class=\"alert-danger\" *ngIf=\"password.errors && f.submitted\">\r\n            <div *ngIf=\"password.errors.required\">Password is required</div>\r\n            <div *ngIf=\"password.errors.minlength\">\r\n              Password must be at least 6 characters\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"privilege\">Privilege Level</label>\r\n          <select type=\"privilege\" class=\"form-control\" name=\"privilege\" id=\"pet-select\"\r\n                  [(ngModel)]=\"form.roles\" required #roles=\"ngModel\">\r\n            <option value=\"\">--Please choose an option--</option>\r\n            <option value=\"admin\">Admin</option>\r\n            <option value=\"mod\">Moderator</option>\r\n            <option value=\"user\">User</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <button class=\"btn btn-primary btn-block\">Sign Up</button>\r\n        </div>\r\n\r\n        <div class=\"alert alert-warning\" >\r\n          Roles: <br />{{ rolesList.toString() }}\r\n        </div>\r\n        <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\r\n          Signup failed!<br />{{ errorMessage }}\r\n        </div>\r\n      </form>\r\n\r\n      <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\r\n        Your registration is successful!\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\nimport {AuthService} from \"../_services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-board-admin',\r\n  templateUrl: './board-admin.component.html',\r\n  styleUrls: ['./board-admin.component.css']\r\n})\r\nexport class BoardAdminComponent implements OnInit {\r\n  content?: string;\r\n  form: any = {\r\n    username: null,\r\n    email: null/*new FormControl('', Validators.email)*/,\r\n    password: null,\r\n    roles: null,\r\n  };\r\n  isSuccessful = false;\r\n  isSignUpFailed = false;\r\n  errorMessage = '';\r\n  rolesList: Array<String> = [];\r\n\r\n  constructor(private userService: UserService, private authService: AuthService) {\r\n\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getAdminBoard().subscribe(\r\n      data => {\r\n        this.content = data;\r\n      },\r\n      err => {\r\n        this.content = JSON.parse(err.error).message;\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const { username, email, password, roles } = this.form;\r\n    this.rolesList.push(roles);\r\n\r\n    this.authService.register(username, email, password, this.rolesList).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.isSuccessful = true;\r\n        this.isSignUpFailed = false;\r\n      },\r\n      err => {\r\n        this.errorMessage = err.error.message;\r\n        this.isSignUpFailed = true;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-board-moderator',\r\n  templateUrl: './board-moderator.component.html',\r\n  styleUrls: ['./board-moderator.component.css']\r\n})\r\nexport class BoardModeratorComponent implements OnInit {\r\n  content?: string;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getModeratorBoard().subscribe(\r\n      data => {\r\n        this.content = data;\r\n      },\r\n      err => {\r\n        this.content = JSON.parse(err.error).message;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <header class=\"jumbotron\">\r\n    <p>{{ content }}</p>\r\n  </header>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\nimport { EventBusService } from '../_shared/event-bus.service';\r\nimport { EventData } from '../_shared/event.class';\r\n\r\n@Component({\r\n  selector: 'app-board-user',\r\n  templateUrl: './board-user.component.html',\r\n  styleUrls: ['./board-user.component.css']\r\n})\r\nexport class BoardUserComponent implements OnInit {\r\n  content?: string;\r\n\r\n  constructor(private userService: UserService, private eventBusService: EventBusService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getUserBoard().subscribe(\r\n      data => {\r\n        this.content = data;\r\n      },\r\n      err => {\r\n        this.content = err.error.message || err.error || err.message;\r\n        if (err.status === 403)\r\n          this.eventBusService.emit(new EventData('logout', null));\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <br>\r\n  <header class=\"background jumbotron  \">\r\n    <h1 class=\"font_0\">\r\n      <span class=\"\" style=\"font-size:44px;\">\r\n        <span>{{ content }}</span>\r\n      </span>\r\n    </h1>\r\n  </header>\r\n\r\n  <embed type=\"text/html\" src=\"https://www.tadirantele.com/\" height=\"300px\" width=\"100%\" >\r\n\r\n  <h2>Iframe - Target for a Link</h2>\r\n.\r\n  <iframe src=\"https://localhost:8445/accRealTime\" sandbox=\"allow-top-navigation-by-user-activation allow-same-origin allow-scripts allow-popups allow-forms\"  name=\"iframe_a\" height=\"300px\" width=\"100%\" title=\"Iframe Example\">\r\n  </iframe>\r\n\r\n\r\n\r\n\r\n  <p><a href=\"https://172.28.8.245:8443/aeonix/mainForm.jsf\" target=\"iframe_a\">aeonix</a></p>\r\n  <p><a href=\"https://en.wikipedia.org/wiki/Avocado\" id=\"testid\" target=\"iframe_a\">wikipedia</a></p>\r\n  <p><a href=\"https://172.28.1.130:8445/accRealTime\" target=\"iframe_a\">accRealTime</a></p>\r\n  <p>When the target attribute of a link matches the name of an iframe, the link will open in the iframe.</p>\r\n\r\n    <!--iframe src=\"https://172.28.1.130:8445/accRealTime\" name=\"iframe_a\" height=\"300px\" width=\"100%\" title=\"Iframe Example\">\r\n  </iframe-->\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  public ACC_VERSION: string = 'ACC_VERSION';\r\n  content?: string = 'Aeonix | Tadiran Telecom';\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getPublicContent().subscribe(\r\n      data => { this.content = data; },\r\n      err => { this.content = JSON.parse(err.error).message; }\r\n    );\r\n    this.userService.getAccVersion().subscribe(\r\n      data => { this.ACC_VERSION = data; },\r\n      err => { this.ACC_VERSION = JSON.parse(err.error).message; }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container \">\r\n  <br>\r\n  <header class=\"background jumbotron  \">\r\n    <h1 class=\"font_0\">\r\n      <span class=\"\" style=\"font-size:44px;\">\r\n        <dl>\r\n          <dt><span>{{ content }}</span></dt>\r\n          <dd><span>{{ ACC_VERSION }}</span></dd>\r\n        </dl>\r\n      </span>\r\n    </h1>\r\n  </header>\r\n\r\n  <storybook-button-fortest></storybook-button-fortest>\r\n  <aside>\r\n    <!-- Card -->\r\n    <div class=\"fa-pull-right bg-image card shadow-1-strong card-img\">\r\n      <div class=\"card-body text-white\">\r\n        <h5 class=\"card-title\">Card title</h5>\r\n        <p class=\"card-text\">\r\n          Some quick example text to build on the card title and make up the bulk of the\r\n          card's content.\r\n        </p>\r\n        <a href=\"#!\" class=\"btn btn-outline-light\">Button</a>\r\n      </div>\r\n    </div>\r\n    <!-- Card -->\r\n  </aside>\r\n\r\n  <div class=\"alert alert-success  \" role=\"alert\">\r\n    <h4 class=\"alert-heading \">Well done!</h4>\r\n    <p>Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.</p>\r\n    <hr>\r\n    <p class=\"mb-0\">Whenever you need to, be sure to use margin utilities to keep things nice and tidy.</p>\r\n  </div>\r\n\r\n</div>\r\n","import {Component, ElementRef, Inject, Input, OnInit, Renderer2, ViewChild} from '@angular/core';\nimport { StoryInput } from \"src/stories/inputs/story-input.model\";\nimport {AuthService} from \"src/app/_services/auth.service\";\nimport {AbstractControl, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {TokenStorageService} from \"src/app/_services/token-storage.service\";\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {Router} from \"@angular/router\";\nimport RegisterForm2Component from \"./register-form2/register-form2.component\";\n//import * as mStoryInput from \"../../../stories/inputs/story-input.stories\";\nimport {RegisterFormComponent} from \"../../login/register-form/register-form.component\";\nimport {ReplacePassFormComponent} from \"../../login/replace-pass-form/replace-pass-form.component\";\nimport {ReplacePassForm2Component} from \"./replace-pass-form2/replace-pass-form2.component\";\n\nexport interface DialogData {\n  username: string;\n  password: string;\n}\n\n\n\n@Component({\n  selector: 'login-main',\n  templateUrl: './login-main.component.html',\n  styleUrls: ['./login-main.component.scss']\n})\nexport class LoginMainComponent implements OnInit {\n\n  public isLoggedIn = false;\n  isLoginFailed = false;\n  loginErrorMessage = '';\n  roles: string[] = [];\n\n\n\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  storyInputsInOrder: StoryInput[]  = [\n    { /*...mStoryInput.Default.args?.['storyInput'],*/ id: '2', title: 'username', state: 'USER NAME', icon: './assets/images/User2ldpi.png', type: 'text', placeholder: 'Ex.Saul Ramirez' , hide: false },\n    { /*...mStoryInput.Default.args?.['storyInput'],*/ id: '3', title: 'password', state: 'PASSWORD', icon: './assets/images/LockIcon2ldpi.png', type: 'password', placeholder: 'your_password', hide: false   },\n  ];\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = true;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  background?: string;\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Login2Component';\n\n  /*user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n\n  }*/\n\n  loginForm: FormGroup;\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-page2--primary' : 'storybook-page2--secondary';\n\n    return ['storybook-page2', mode];\n  }\n\n  @ViewChild('formHeader', { static: false }) mainHeader?: ElementRef;\n\n\n  constructor(private renderer: Renderer2,\n              public registerFormDialog: MatDialog,\n              public replacePassFormDialog: MatDialog,\n              public authService: AuthService,\n              private tokenStorage: TokenStorageService,\n              private router: Router,) {\n    this.loginForm = new FormGroup({\n      username: new FormControl('Agent7', Validators.minLength(2)),\n      password: new FormControl('T@diran2022', Validators.minLength(2)),\n    });\n\n  }\n\n\n  openRegisterForm() {\n    const registerFormDialogRef = this.registerFormDialog.open(RegisterForm2Component, {\n      data: {username: this.getUsernameCurrentFieldValue , password: this.getPasswordCurrentFieldValue},\n    });\n\n    registerFormDialogRef.afterClosed().subscribe(result => {\n      console.log('The register form dialog was closed');\n    });\n\n    return registerFormDialogRef.afterClosed().toPromise();\n  }\n\n\n  openReplacePassForm() {\n    const replacePassFormDialogRef = this.replacePassFormDialog.open(ReplacePassForm2Component, {\n      data: {username: this.getUsernameCurrentFieldValue , password: this.getPasswordCurrentFieldValue},\n    });\n\n    replacePassFormDialogRef.beforeClosed().subscribe(result => {\n      console.log('The replace password form dialog before closed');\n    },\n      err => {\n        console.log(err.error.message);\n      });\n\n\n    replacePassFormDialogRef.afterClosed().subscribe(result => {\n      console.log('The replace password form dialog after closed');\n      if (result.message === 'Replace Password Complete') {\n        this.setUsernameCurrentFieldValue(result.data.username);\n        this.setPasswordCurrentFieldValue(result.data.password.toString());\n      }\n    });\n\n    return replacePassFormDialogRef.afterClosed().toPromise();\n  }\n\n  ngOnInit(): void {};\n\n\n\n  get getUsernameCurrentFieldValue(): AbstractControl {\n    return this.loginForm.get('username')?.value;\n  }\n\n  private setUsernameCurrentFieldValue(name: string) {\n    this.loginForm.get('username')?.setValue(name);\n  }\n\n  get getPasswordCurrentFieldValue(): AbstractControl {\n    return this.loginForm.get('password')?.value;\n  }\n\n  private setPasswordCurrentFieldValue(pass: string) {\n    this.loginForm.get('password')?.setValue(pass);\n  }\n\n/*\n  openRegisterForm() {\n    return this.registerFormService.open(RegisterFormComponent).onClose.toPromise();\n  }\n\n  openReplacePassword() {\n    this.replacePassFormService.open(ReplacePassForm2Component);\n  }\n*/\n\n  onSubmit(): void {\n    console.warn('Login Request from login-main!');\n    const { username, password } = this.loginForm.value;\n\n    this.authService.login(username, password).subscribe(\n      data => {\n        this.tokenStorage.saveToken(data.accessToken);\n        this.tokenStorage.saveRefreshToken(data.refreshToken);\n        this.tokenStorage.saveUser(data);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getUser().roles;\n        this.profile2();\n      },\n      err => {\n        switch (err.error.message) {\n          case \"Error: A registry process should be made!\":\n            //this.openRegisterForm().then(() => {this.openReplacePassword()});\n            //toPromise((data) => {this.openReplacePassword()});\n            this.openRegisterForm().then(\n              (val) => {\n                console.log(val);\n                switch (val) {\n                  case \"xbutton\":\n                    break;\n                  case \"Registration Complete\":\n                    this.onSubmit();\n                    break;\n                  case undefined:\n                    //this.openReplacePassword();\n                    break;\n                  default:\n                }\n                return 'done2';\n              },\n              (err) => console.error(err));\n            break;\n          case \"User credentials have expired\":\n            this.openReplacePassForm().then(\n              (val) => {\n                console.log(val);\n                switch (val.message) {\n                  case \"xbutton\":\n                    break;\n                  case \"Replace Password Complete\":\n                    this.onSubmit();\n                    break;\n                  case undefined:\n                    //this.openReplacePassword();\n                    break;\n                  default:\n                }\n                return 'done2';\n              },\n              (err) => console.error(err));\n            break;\n          default:\n            this.loginErrorMessage = err.error.message;\n        }\n\n\n        this.isLoginFailed = true;\n      }\n    );\n  }\n\n\n  reloadPage(): void {\n    this.router.navigate(['/login-main']).then(() => {window.location.reload()});\n  }\n\n  profile2(): void {\n  this.router.navigate(['/profile2']);\n}\n\n}\n\n/*\n@Component({\n  selector: 'dialog-overview-example-dialog',\n  templateUrl: 'dialog-overview-example-dialog.html',\n})\nexport class DialogOverviewExampleDialog {\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n*/\n\n/*\n@Component({\n  selector: 'password-dialog',\n  templateUrl: './password-dialog.html',\n})\nexport class ExtentionDialog {\n  constructor(\n    public dialogRef: MatDialogRef<ExtentionDialog>,\n    @Inject(MAT_DIALOG_DATA) public extensionData: {name: string, password: string;},\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n*/\n","\n<html>\n<head>\n  <style>\n\n  </style>\n  <title></title>\n</head>\n<body>\n\n<!--article><div class=\"Frame-1 relative\">\n<section class=\"relative \" Style=\"{ 'background': backgroundColor }\"-->\n\n<!--storybook-button-globe></storybook-button-globe-->\n\n<storybook-background1></storybook-background1>\n\n<button  mat-raised-button  (click)=\"openReplacePassForm()\">ReplacePassForm</button>\n<button mat-raised-button (click)=\"openRegisterForm()\">RegisterForm</button>\n<button mat-raised-button (click)=\"profile2()\">profile2</button>\n\n\n<storybook-login-form\n  [isLoggedIn]=\"false\"\n  [isLoginFailed]=\"isLoginFailed\"\n  [loginErrorMessage]=\"loginErrorMessage\"\n  [mForm]=\"loginForm\"\n  [storyInputs]=\"storyInputsInOrder\"\n  (sendLoginReq)=\"onSubmit()\"\n></storybook-login-form>\n\n\n<!--/section></div>\n</article-->\n\n</body>\n</html>\n\n\n","import {Component, ElementRef, EventEmitter, Inject, OnInit, Output, Renderer2, ViewChild} from '@angular/core';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport {StoryInput} from \"src/stories/inputs/story-input.model\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {DialogData} from \"../login-main.component\";\r\nimport {PasswordValidators} from \"../replace-pass-form2/replace-pass-form2.component\";\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'register-form2',\r\n  templateUrl: './register-form2.component.html',\r\n  styleUrls: ['./register-form2.component.css']\r\n})\r\nexport default class RegisterForm2Component implements OnInit {\r\n  registerForm: FormGroup;\r\n  isRegSuccess = false;\r\n  isRegFailed = false;\r\n  submitted = false;\r\n  regErrorMessage: any;\r\n  empList: Array<String> = [];\r\n  apiResponse = { message: '', error: false };\r\n  @ViewChild('form', { static: false }) form?: ElementRef;\r\n  errorFieldSubmitted: any = {};\r\n  closeResult = '';\r\n\r\n  storyInputsInOrder: StoryInput[]  = [\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '2', title: 'username', state: 'USER NAME', icon: './assets/images/User2ldpi.png', type: 'text', placeholder: 'Ex.Saul Ramirez', hide: false  },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '3', title: 'password', state: 'PASSWORD', icon: './assets/images/LockIcon2ldpi.png', type: 'password', placeholder: 'your_password' , hide: true },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '5', title: 'phone', state: 'PHONE NUMBER FOR AUTHENTICATION', icon: './assets/images/Phone3ldpi.png', type: 'phone', placeholder: 'Ex: +972547762084', hide: false  },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '4', title: 'email', state: 'EMAIL', icon: './assets/images/AtSign3ldpi.png', type: 'email', placeholder: 'Ex: abc@example.com', hide: false   },\r\n\r\n  ];\r\n\r\n  constructor(private authService: AuthService,\r\n              private renderer: Renderer2,\r\n              public dialogRef: MatDialogRef<RegisterForm2Component>,\r\n              @Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n    this.registerForm = new FormGroup({\r\n      username: new FormControl(data.username.toString(), Validators.minLength(2)),\r\n      password: new FormControl(data.password.toString(), Validators.minLength(2)),\r\n      email: new FormControl(data.username.toString() + '@domain.com', Validators.email),\r\n      phone: new FormControl('123123131321', PasswordValidators.patternValidator(new RegExp(\"(?=.*[0-9 ]{8})\"), {requiresPhoneChars: true}))\r\n    });/*Validators.pattern(new RegExp(\"[0-9 ]{12}\")*/\r\n    this.empList.push(\"admin\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.isRegSuccess) {\r\n      this.dialogRef.close('Registration Complete');\r\n    }\r\n    else {\r\n      this.submitted = true;\r\n      const { username, password, email, phone } = this.registerForm.getRawValue();\r\n\r\n      this.authService.registerForm(username, email, password, phone).subscribe(\r\n        data => {\r\n          console.log(data);\r\n          this.isRegSuccess = true;\r\n          this.isRegFailed = false;\r\n          this.errorFieldSubmitted = {} ;\r\n          this.apiResponse.error = false;\r\n          this.apiResponse.message = 'Successful registration';\r\n        },\r\n        error => {\r\n          const errorResponse = JSON.parse(error.error);\r\n          this.apiResponse.error = true;\r\n          this.apiResponse.message = 'Registration error';\r\n          this.regErrorMessage = errorResponse;\r\n          this.isRegFailed = true;\r\n          if (errorResponse.error && errorResponse.message === 'VALIDATION_FAILED') {\r\n            this.errorFieldSubmitted = errorResponse.data;\r\n          }\r\n        },\r\n        () => {\r\n          console.log(\"Registration Complete\");}\r\n      );\r\n    }\r\n  }\r\n\r\n  get username(): AbstractControl {\r\n    return this.registerForm.get('username')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.registerForm.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.registerForm.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.registerForm.get('phone')!;\r\n  }\r\n}\r\n","\r\n<storybook-registry-form #form\r\n  [isRegSuccess]=\"isRegSuccess\"\r\n  [isRegFailed]=\"isRegFailed\"\r\n  [regErrorMessage]=\"regErrorMessage\"\r\n  [storyInputs]=\"storyInputsInOrder\"\r\n  [mForm]=\"registerForm\"\r\n  (sendRegReq)=\"onSubmit()\"\r\n  (clickXButton)=\"this.dialogRef.close('xbutton')\"\r\n></storybook-registry-form>\r\n","import {Component, Inject, Renderer2} from '@angular/core';\r\nimport { MdbModalRef } from 'mdb-angular-ui-kit/modal';\r\nimport {AuthService} from \"src/app/_services/auth.service\";\r\nimport {AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators} from \"@angular/forms\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {DialogData} from \"../login-main.component\";\r\nimport RegisterForm2Component from \"../register-form2/register-form2.component\";\r\nimport {StoryInput} from \"../../../../stories/inputs/story-input.model\";\r\n\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: './replace-pass-form2.component.html',\r\n  styleUrls: ['./replace-pass-form2.component.css']\r\n})\r\nexport class ReplacePassForm2Component {\r\n  replacePassForm: FormGroup;\r\n  status = {\r\n    isRepSuccess: false,\r\n    isRepFailed: false,\r\n    submitted: false,\r\n    repErrorMessage: {},\r\n    apiResponse: { message: '', error: false },\r\n    errorFieldSubmitted: {},\r\n    closeResult: '',\r\n  };\r\n\r\n  //isSignUpFailed = false;\r\n  //submitted = false;\r\n  //errorMessage = '';\r\n  empList: Array<String> = [];\r\n  //apiResponse = { message: '', error: false };\r\n  //errorFieldSubmitted: any = {};\r\n  closeResult = '';\r\n\r\n  storyInputsInOrder: StoryInput[]  = [\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '1', title: 'oldPassword', state: 'INITIAL PASSWORD', icon: './assets/images/LockIcon2ldpi.png', type: 'password', placeholder: 'your_password' , hide: false },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '2', title: 'password', state: 'NEW PASSWORD', icon: './assets/images/LockIcon2ldpi.png', type: 'password', placeholder: 'your_password' , hide: false },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '3', title: 'confirmPassword', state: 'RE-ENTER NEW PASSWORD', icon: './assets/images/LockIcon2ldpi.png', type: 'password', placeholder: 'your_password' , hide: false },\r\n  ];\r\n\r\n\r\n\r\n\r\n  constructor(private authService: AuthService,\r\n              private renderer: Renderer2,\r\n              public dialogRef: MatDialogRef<ReplacePassForm2Component>,\r\n              @Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n    this.replacePassForm = new FormGroup({\r\n      userName: new FormControl(data.username, Validators.required),\r\n      oldPassword: new FormControl(data.password, Validators.minLength(1)),\r\n      password: new FormControl('', Validators.compose([\r\n        Validators.minLength(8),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.*[0-9])\"), {requiresDigit: true}),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.*[A-Z])\"), {requiresUppercase: true}),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.*[a-z])\"), {requiresLowercase: true} ),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.*[$@^!%*?&])\"), {requiresSpecialChars: true})\r\n      ])),\r\n      confirmPassword: new FormControl(null, [\r\n        Validators.minLength(8),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.*[0-9])\"), {requiresDigit: true}),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.*[A-Z])\"), {requiresUppercase: true}),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.*[a-z])\"), {requiresLowercase: true}),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.*[$@^!%*?&#><{}()+~])\"), {requiresSpecialChars: true})\r\n      ])\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.status.isRepSuccess) {\r\n      this.dialogRef.close({message: 'Replace Password Complete', data: this.data});\r\n    }\r\n    else {\r\n      this.status.submitted = true;\r\n      const { userName, oldPassword, password, confirmPassword } = this.replacePassForm.value;\r\n      this.authService.replacePassForm(userName, oldPassword, password, confirmPassword).subscribe(\r\n        data => {\r\n          console.log(data);\r\n          this.status.isRepSuccess = true;\r\n          this.status.isRepFailed = false;\r\n          this.status.errorFieldSubmitted = {};\r\n          this.status.apiResponse.error = false;\r\n          this.status.apiResponse.message = 'Successful registration';\r\n          this.data.password = password;\r\n        },\r\n        error => {\r\n          const errorResponse = JSON.parse(error.error);\r\n          this.status.apiResponse.error = true;\r\n          this.status.apiResponse.message = 'Replace password error';\r\n          this.status.repErrorMessage = errorResponse;\r\n          this.status.isRepFailed = true;\r\n          if (errorResponse.error && errorResponse.message === 'VALIDATION_FAILED') {\r\n            this.status.errorFieldSubmitted = errorResponse.data;\r\n          }\r\n        },\r\n        () => {\r\n          console.log('Replace Password closed');}\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n\r\n  get userName(): AbstractControl {\r\n    return this.replacePassForm.get('username')!;\r\n  }\r\n\r\n  get oldPassword(): AbstractControl {\r\n    return this.replacePassForm.get('oldPassword')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.replacePassForm.get('password')!;\r\n  }\r\n\r\n  get confirmPassword(): AbstractControl {\r\n    return this.replacePassForm.get('confirmPassword')!;\r\n  }\r\n\r\n}\r\n\r\nexport class PasswordValidators {\r\n  constructor() {\r\n  }\r\n\r\n  static patternValidator(regex: RegExp, error: ValidationErrors): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } | null => {\r\n      if (!control.value) {\r\n        // if the control value is empty return no error.\r\n        return null;\r\n      }\r\n\r\n      // test the value of the control against the regexp supplied.\r\n      const valid = regex.test(control.value);\r\n\r\n      // if true, return no error, otherwise return the error object passed in the second parameter.\r\n      return valid ? null : error;\r\n    };\r\n  }\r\n}\r\n","<storybook-replace-pass-form #form\r\n                         [status]=\"status\"\r\n                         [storyInputs]=\"storyInputsInOrder\"\r\n                         [mForm]=\"replacePassForm\"\r\n                         (sendRegReq)=\"onSubmit()\"\r\n                         (clickXButton)=\"this.dialogRef.close({message: 'xbutton'})\"\r\n></storybook-replace-pass-form>\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport RegisterForm2Component from \"./login-main/register-form2/register-form2.component\";\nimport {LoginMainComponent} from \"./login-main/login-main.component\";\nimport {LogtestComponent} from \"./logtest/logtest.component\";\nimport Profile2Component from \"../profile2/profile2.component\";\n\n\n\n\n\nconst routes: Routes = [\n  { path: 'login-main', component: LoginMainComponent },\n  { path: 'logtest', component: LogtestComponent },\n  /*{ path: 'login2', component: Login2Component },*/\n  //{ path: 'storybook-button-fortest', component: AvatarComponent },\n  { path: 'register-form2', component: RegisterForm2Component },\n  /*{ path: 'register-form2', component: RegisterForm2Component },*/\n  { path: 'profile2',loadChildren: () => import('../app.module').then(m => m.AppModule),},\n  { path: '', redirectTo: 'login-main', pathMatch: 'full' },/**/\n  { path: '**', redirectTo: 'logtest', },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class Login2RoutingModule { }\n","import { Component, OnInit, OnDestroy  } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { TokenStorageService } from 'src/app/_services/token-storage.service';\r\nimport { EventBusService } from 'src/app/_shared/event-bus.service';\r\n\r\n@Component({\r\n  selector: 'login2',\r\n  templateUrl: './login2.component.html',\r\n  //styleUrls: ['./app.component.css']\r\n})\r\nexport class Login2Component {\r\n  private roles: string[] = [];\r\n  public isLoggedIn = false;\r\n  showAdminBoard = false;\r\n  showModeratorBoard = false;\r\n  username?: string;\r\n  eventBusSub?: Subscription;\r\n  title?: 'accGate';\r\n\r\n  constructor(private tokenStorageService: TokenStorageService, private eventBusService: EventBusService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\r\n\r\n    if (this.isLoggedIn) {\r\n      const user = this.tokenStorageService.getUser();\r\n      this.roles = user.roles;\r\n\r\n      this.showAdminBoard = (this.roles.includes('Admin') || this.roles.includes('SupervisorAdmin'));\r\n      this.showModeratorBoard = this.roles.includes('SupervisorMonitor');\r\n\r\n      this.username = user.username;\r\n    }\r\n    this.eventBusSub = this.eventBusService.on('logout', () => {\r\n      this.logout();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.eventBusSub)\r\n      this.eventBusSub.unsubscribe();\r\n  }\r\n\r\n  logout(): void {\r\n    this.tokenStorageService.signOut();\r\n    this.isLoggedIn = false;\r\n    this.roles = [];\r\n    this.showAdminBoard = false;\r\n    this.showModeratorBoard = false;\r\n    //window.location.reload();\r\n  }\r\n\r\n}\r\n","<p>login2 works!</p>\r\n<!--router-outlet  id=\"login2\" ></router-outlet-->\r\n<!--storybook-button-fortest></storybook-button-fortest-->\r\n","import { NgModule } from '@angular/core';\n\nimport { Login2RoutingModule } from './login2-routing.module';\nimport RegisterForm2Component  from './login-main/register-form2/register-form2.component';\nimport { LogtestComponent } from './logtest/logtest.component';\nimport {LoginMainComponent, /*DialogOverviewExampleDialog*/} from './login-main/login-main.component';\nimport {TaskComponent } from \"src/stories/task/task.component\";\nimport {TaskListComponent} from \"../../stories/task-list/task-list.component\";\nimport {Login2Component} from \"./login2.component\";\nimport {StorybookModule} from \"../storybook/storybook.module\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {ReplacePassForm2Component} from \"./login-main/replace-pass-form2/replace-pass-form2.component\";\n\n\n\n\n@NgModule({\n  declarations: [\n    ReplacePassForm2Component,\n    RegisterForm2Component,\n    TaskComponent, TaskListComponent,\n    LogtestComponent,\n    Login2Component,\n    LoginMainComponent,\n\n\n    //PopoverDirective,\n    //ExtentionDialog,\n    //DialogOverviewExampleDialog\n\n\n  ],\n  imports: [\n    Login2RoutingModule,\n    StorybookModule,\n    MatDialogModule,\n    MatButtonModule,\n  ],\n  exports: [\n    ReplacePassForm2Component\n  ],\n  bootstrap: [Login2Component]\n})\nexport class Login2Module { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'logtest',\n  templateUrl: './logtest.component.html',\n  styleUrls: ['./logtest.component.css']\n})\nexport class LogtestComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<storybook-background1></storybook-background1>\n<storybook-button-fortest></storybook-button-fortest>\n<!--storybook-background1></storybook-background1-->\n<!--ButtonLanguageComponent></ButtonLanguageComponent-->\n","\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <!--storybook-card  class=\"card-container\"></storybook-card-->\r\n  <div  class=\"card  h-100 d-flex align-items-center justify-content-center\">\r\n\r\n    <div class=\"Aeonix-App-Center\">\r\n    <a>Aeonix App Center</a>\r\n    </div>\r\n    <!--img id=\"profile-img\" class=\"user-image\" src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n      class=\"profile-img-card\" /-->\r\n\r\n    <br>\r\n\r\n    <form *ngIf=\"!isLoggedIn\" name=\"form\" (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate>\r\n\r\n\r\n\r\n      <div class=\"list-item storybook-input Frame-3 \">\r\n        <a class=\"user-name D-Caps-Regular\">USER NAME</a>\r\n\r\n        <br>\r\n        <label [attr.aria-label]=\"'userName'\" for=\"userName\" class=\"Vector2 \">\r\n\r\n          <img src=\"./assets/images/User2ldpi.png\" class=\"icon-input-userName\" alt=\"icon input userName\" />\r\n\r\n          <input type=\"text\" [value]=\"'DanK203'\" id=\"userName\" name=\"userName\"  class=\"DanK203\"\r\n                 [(ngModel)]=\"form.userName\" placeholder=\"Ex. Saul Ramirez\" required #userName=\"ngModel\"/>\r\n        </label>\r\n\r\n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"userName.errors && f.submitted\">\r\n          Username is required!\r\n        </div>\r\n      </div>\r\n\r\n      <br>\r\n\r\n      <div class=\"storybook-input Frame-3 \">\r\n        <span class=\"user-name D-Caps-Regular\">PASSWORD</span>\r\n\r\n\r\n        <br>\r\n        <label [attr.aria-label]=\"'password'\" for=\"password\" class=\"Vector2 \">\r\n          <img src=\"./assets/images/LockIcon2ldpi.png\" class=\"icon-input-password\" alt=\"icon input password\" />\r\n          <input type={{this.showPass}} [value]=\"'DanK203'\" id=\"password\" name=\"password\"  class=\"DanK203\"\r\n                 [(ngModel)]=\"form.password\" placeholder=\"password\" required #password=\"ngModel\"/>\r\n          <button class=\"icon-input-showpass\" type=\"button\" (click)=\"showPassChange()\">\r\n          <img src=\"./assets/images/EyeIcon.png\" class=\"icon-input-showpass\" alt=\"icon input type\" />\r\n          </button>\r\n        </label>\r\n\r\n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"password.errors && f.submitted\">\r\n          <div *ngIf=\"password.errors.required\">Password is required</div>\r\n          <div *ngIf=\"password.errors.minlength\">Password must be at least 1 characters</div>\r\n        </div>\r\n      </div>\r\n\r\n      <br>\r\n      <div class=\"thematic-break\"></div>\r\n\r\n      <div class=\"form-group\">\r\n\r\n        <div>\r\n          <a (mouseover)=\"popover.show()\" (mouseleave)=\"popover.hide()\" (click)=\"openReplacePassword()\"\r\n             class=\"form-check-label white-text\"  href=\"#/login\" mdbPopoverTitle=\"Account recovery\" #popover=\"mdbPopover\"\r\n             mdbPopover=\"To help keep your account safe, we will make sure that it’s really you trying to sign in\">\r\n            Forgot password?\r\n          </a>\r\n          <a (click)=\"openReplacePassword()\"\r\n             class=\"forgot-password\"  href=\"#/login\" >\r\n            Forgot password?\r\n          </a>\r\n\r\n          <button class=\"login-button\">Continue</button>\r\n        </div>\r\n\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && isLoginFailed\">\r\n          Login failed: {{ loginErrorMessage }}\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n\r\n\r\n    <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\r\n      Logged in as {{ roles }}.\r\n    </div>\r\n\r\n    <mdb-card-footer class=\"form-check-label white-text border-bottom-0\" id=\"tests\">\r\n      <label for=\"tests\" class=\"form-check-label white-text\"\r\n              style=\"margin-bottom: 1px; padding: 1px\">R&D test:\r\n        <a (click)=\"openRegisterForm()\"  class=\"green-text font-weight-bold\">RegistrationForm</a>\r\n        <b> ,</b>\r\n        <a (click)=\"openReplacePassword()\" href=\"#/login\" class=\"green-text font-weight-bold pl-2\">ReplacePassForm</a>\r\n        <b> ,</b>\r\n        <a (click)=\"test()\" href=\"#/login\" class=\"green-text font-weight-bold pl-2\">test</a>\r\n      </label>\r\n    </mdb-card-footer>\r\n  </div>\r\n\r\n\r\n\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\nimport {  Router } from '@angular/router';\r\nimport { MdbModalRef, MdbModalService } from 'mdb-angular-ui-kit/modal';\r\nimport {FormControl, Validators} from \"@angular/forms\";\r\nimport { RegisterFormComponent } from './register-form/register-form.component';\r\nimport {ReplacePassFormComponent} from \"./replace-pass-form/replace-pass-form.component\";\r\nimport {Observable} from \"rxjs\";\r\n//import {  Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  registerFormRef: MdbModalRef<RegisterFormComponent> | null = null;\r\n  replacePassFormRef: MdbModalRef<ReplacePassFormComponent> | null = null;\r\n  form: any = {\r\n    username: null, //new FormControl('ea2', Validators.min(2)),\r\n    password: null  //new FormControl('zaqwsx', Validators.min(2))\r\n  };\r\n  public isLoggedIn = false;\r\n  isLoginFailed = false;\r\n  loginErrorMessage = '';\r\n  roles: string[] = [];\r\n  showPass: 'text' | 'password' = 'password';\r\n\r\n  constructor(private authService: AuthService,\r\n              private tokenStorage: TokenStorageService,\r\n              private router: Router,\r\n              private registerFormService: MdbModalService,\r\n              private replacePassFormService: MdbModalService) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.tokenStorage.getToken()) {\r\n      this.isLoggedIn = true;\r\n      this.roles = this.tokenStorage.getUser().roles;\r\n    }\r\n  }\r\n\r\n  showPassChange(): void {\r\n    this.showPass = (this.showPass == 'password' ? 'text' : 'password')\r\n  }\r\n\r\n  test() {\r\n    console.log(\"test start\");\r\n    this.openRegisterForm().then(() => {\r\n      this.openReplacePassword();\r\n      console.log(\"test end\");});\r\n\r\n    this.openRegisterForm().then(\r\n    (val) => {\r\n      console.log(val);\r\n      switch (val) {\r\n        case \"xbutton\":\r\n          break;\r\n        case undefined:\r\n          this.openReplacePassword();\r\n          break;\r\n        default:\r\n\r\n      }\r\n      return 'done2';\r\n    },\r\n      (err) => console.error(err));\r\n  }\r\n\r\n  openRegisterForm() {\r\n    return this.registerFormService.open(RegisterFormComponent).onClose.toPromise();\r\n    /*var promise = new Promise<void>((resolve, reject)  => {\r\n      let newRegisterFormService = this.registerFormService.open(RegisterForm2Component);\r\n      setTimeout(() => {\r\n        console.log(\"Async Work Complete\");\r\n        newRegisterFormService.close();\r\n        resolve();//() => {resolve();}\r\n      }, 5000);\r\n    });\r\n    return promise;*/\r\n  }\r\n\r\n  openReplacePassword() {\r\n    this.replacePassFormService.open(ReplacePassFormComponent);\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const { username, password } = this.form;\r\n\r\n    this.authService.login(username, password).subscribe(\r\n      data => {\r\n        this.tokenStorage.saveToken(data.accessToken);\r\n        this.tokenStorage.saveRefreshToken(data.refreshToken);\r\n        this.tokenStorage.saveUser(data);\r\n\r\n        this.isLoginFailed = false;\r\n        this.isLoggedIn = true;\r\n        this.roles = this.tokenStorage.getUser().roles;\r\n        this.reloadPage();\r\n      },\r\n      err => {\r\n        switch (err.error.message) {\r\n          case \"Error: A registry process should be made!\":\r\n            //this.openRegisterForm().then(() => {this.openReplacePassword()});\r\n            //toPromise((data) => {this.openReplacePassword()});\r\n            this.openRegisterForm().then(\r\n              (val) => {\r\n                console.log(val);\r\n                switch (val) {\r\n                  case \"xbutton\":\r\n                    break;\r\n                  case \"Registration Complete\":\r\n                    this.openReplacePassword();\r\n                    break;\r\n                  case undefined:\r\n                    this.openReplacePassword();\r\n                    break;\r\n                  default:\r\n                }\r\n                return 'done2';\r\n              },\r\n              (err) => console.error(err));\r\n              break;\r\n          default:\r\n            this.loginErrorMessage = err.error.message;\r\n        }\r\n\r\n\r\n        this.isLoginFailed = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  reloadPage(): void {\r\n    //window.location.reload();\r\n    this.router.navigate(['/profile']).then(() => {window.location.reload()});\r\n    //var URL = window.location.mainHeader+\"/profile\"; //'http://localhost:4200/user';\r\n    ///window.open(URL);\r\n    //this.router.navigate([]).then(result => {  window.open(window.location.toString(), 'user'); });\r\n  }\r\n\r\n  /**\r\n   * Is this the principal call to action on the login-main?\r\n   */\r\n  @Input()\r\n  primary = true;\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n  <!--div class=\"text-center\"-->\r\n    <label class=\"white-text mb-2 mt-2 font-weight-bold fas\">\r\n      <strong>REGISTRATION</strong>\r\n      <a class=\"green-text font-weight-bold\">\r\n        <strong> FORM</strong>\r\n      </a>\r\n    </label>\r\n\r\n  <!--/div-->\r\n  <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)='modalRef.close(\"xbutton\")'></button>\r\n\r\n  <!--h5 class=\"modal-title\" id=\"exampleModalLabel\">REGISTRATION</h5-->\r\n\r\n</div>\r\n<div class=\"modal-body py-4 text-center expansionCard\">\r\n  <img id=\"profile-img\" src=\"./assets/images/T.png\"\r\n       class=\"profile-img-card\"  alt=\"\"/>\r\n  <div class=\"text-white rgba-stylish-strong py-5 px-5 z-depth-2\">\r\n\r\n\r\n  <form *ngIf=\"!isSuccessful\" [formGroup]=\"validationForm\">\r\n\r\n  <!--###################### Username input field ###################### -->\r\n  <div class=\"form-outline\">\r\n    <mdb-form-control  class=\"form-outline\">\r\n    <input [mdbValidate]=\"true\" mdbInput type=\"text\" id=\"typeText\"\r\n           class=\"form-control\"  formControlName=\"userName\" required />\r\n    <label class=\"form-label \" for=\"typeText\" >UserName input</label>\r\n    <mdb-error *ngIf=\"userName?.invalid && (userName?.dirty || userName?.touched)\">\r\n      First name is required\r\n    </mdb-error>\r\n    <mdb-success *ngIf=\"userName?.valid && (userName?.dirty || userName?.touched)\">\r\n      Looks good!\r\n    </mdb-success>\r\n    </mdb-form-control>\r\n  </div>\r\n\r\n  <br>\r\n\r\n    <!--###################### Email input field ###################### -->\r\n  <div class=\"form-outline\">\r\n    <mdb-form-control  class=\"form-outline\">\r\n      <input [mdbValidate]=\"true\" mdbInput type=\"email\" id=\"typeEmail\"\r\n             class=\"form-control\" formControlName=\"email\" required />\r\n      <label mdbLabel class=\"form-label form-white\" for=\"typeEmail\">Email input</label>\r\n      <mdb-error *ngIf=\"email?.invalid && (email?.dirty || email?.touched)\">\r\n        Email is required\r\n      </mdb-error>\r\n      <mdb-success *ngIf=\"email?.valid && (email?.dirty || email?.touched)\">\r\n        Looks good!\r\n      </mdb-success>\r\n    </mdb-form-control>\r\n  </div>\r\n\r\n\r\n  <br>\r\n\r\n    <!--###################### Password input field ###################### -->\r\n  <div class=\"form-outline\">\r\n    <mdb-form-control  class=\"form-outline\">\r\n    <input [mdbValidate]=\"true\" mdbInput type=\"password\" id=\"typePassword\"\r\n           class=\"form-control\" formControlName=\"password\" required minlength=\"1\" />\r\n    <label mdbLabel class=\"form-label form-white\" for=\"typePassword\">Password input</label>\r\n    <mdb-error *ngIf=\"password?.invalid && (password?.dirty || password?.touched)\">\r\n      Password is required\r\n    </mdb-error>\r\n      <!--mdb-error *ngIf=\"email?.errors.length\">  Username must be at least 3 characters</mdb-error-->\r\n    <mdb-success *ngIf=\"password?.valid && (password?.dirty || password?.touched)\">\r\n      Looks good!\r\n    </mdb-success>\r\n    </mdb-form-control>\r\n    <span class=\"text-danger error-input\" *ngIf=\"submitted && errorFieldSubmitted['password']\"\r\n          style=\"white-space: pre-line;  font-size: 14px;\">\r\n          {{errorFieldSubmitted['password'] | apiErrorMessage}}\r\n      <br><br>\r\n    </span>\r\n  </div>\r\n\r\n\r\n  <br>\r\n\r\n    <!--###################### Phone input field ###################### -->\r\n  <div class=\"form-outline\">\r\n    <mdb-form-control  class=\"form-outline\">\r\n    <input [mdbValidate]=\"true\" mdbInput type=\"tel\" id=\"typePhone\"\r\n           class=\"form-control\" formControlName=\"phone\" required />\r\n    <label mdbLabel class=\"form-label form-white\" for=\"typePhone\">Phone number input</label>\r\n    <mdb-error *ngIf=\"phone?.invalid && (phone?.dirty || phone?.touched)\">\r\n      Phone is required\r\n    </mdb-error>\r\n    <mdb-success *ngIf=\"phone?.valid && (phone?.dirty || phone?.touched)\">\r\n      Looks good!\r\n    </mdb-success>\r\n    </mdb-form-control>\r\n  </div>\r\n  <!--mdb-form-control>\r\n    <input mdbInput  type=\"text\" class=\"form-control\" id=\"exampleDatepicker\"/>\r\n    <label mdbLabel for=\"exampleDatepicker\" class=\"form-label\">Select a date</label>\r\n    <ngb-datepicker-month [NgbDatepicker]=\"datepicker\"></ngb-datepicker-month>\r\n    <ngb-datepicker #dateSelect></ngb-datepicker>\r\n  </mdb-form-control-->\r\n    <!--div class=\"form-group\">\r\n      <button class=\"btn btn-primary btn-block\">Login</button>\r\n    </div-->\r\n    <!--Grid row-->\r\n    <div  *ngIf=\"!isSuccessful\" class=\"row d-flex align-items-lg-center \">\r\n      <!--Grid column-->\r\n      <div class=\"form-group text-center mb-2  col-md-12 \">\r\n        <button type=\"button\" (click)=\"onSubmit()\" class=\"btn btn-success btn-block btn-rounded z-depth-1 waves-effect waves-light\">Register</button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n  </div>\r\n\r\n  <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\r\n    Your registration is successful!\r\n  </div>\r\n\r\n\r\n  <div hidden class=\"list-group-horizontal mb-4 col-md-12\">\r\n    <button type=\"button\" class=\" fa-pull-left btn btn-primary\">Save changes</button>\r\n    <!--button type=\"button\" class=\"fa-pull-right btn btn-secondary\" (click)=\"this.modalRef.close()\">Close</button-->\r\n  </div>\r\n\r\n  <br>\r\n</div>\r\n\r\n\r\n\r\n<div class=\"modal-content \">\r\n    <div class=\"modal-footer fal\">\r\n      <input type=\"checkbox\" class=\" form-check-input\" id=\"checkbox7\">\r\n      <label for=\"checkbox7\" class=\"form-check-label white-text\">Subscribe to our <a href=\"#\" class=\"green-text font-weight-bold\"> newsletter?</a></label>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { Component } from '@angular/core';\r\nimport { MdbModalRef } from 'mdb-angular-ui-kit/modal';\r\nimport { AuthService } from '../../_services/auth.service';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: './register-form.component.html',\r\n  styleUrls: ['./register-form.component.css']\r\n})\r\nexport class RegisterFormComponent {\r\n  validationForm: FormGroup;\r\n  isSuccessful = false;\r\n  isSignUpFailed = false;\r\n  submitted = false;\r\n  errorMessage = '';\r\n  empList: Array<String> = [];\r\n  apiResponse = { message: '', error: false };\r\n  errorFieldSubmitted: any = {};\r\n  closeResult = '';\r\n\r\n  constructor(public modalRef: MdbModalRef<RegisterFormComponent>,\r\n              private authService: AuthService) {\r\n    this.validationForm = new FormGroup({\r\n      userName: new FormControl(null, Validators.required),\r\n      email: new FormControl(null, Validators.email),\r\n      password: new FormControl('', Validators.minLength(1)),\r\n      phone: new FormControl(null, Validators.pattern(new RegExp(\"[0-9 ]{12}\")))\r\n    });\r\n    this.empList.push(\"admin\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n    const { userName, email, password, phone } = this.validationForm.value;\r\n    this.authService.registerForm(userName, email, password, phone).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.isSuccessful = true;\r\n        this.isSignUpFailed = false;\r\n        this.errorFieldSubmitted = {};\r\n        this.apiResponse.error = false;\r\n        this.apiResponse.message = 'Successful registration';\r\n      },\r\n      error => {\r\n        const errorResponse = JSON.parse(error.error);\r\n        this.apiResponse.error = true;\r\n        this.apiResponse.message = 'Registration error';\r\n        this.errorMessage = error.error.message;\r\n        this.isSignUpFailed = true;\r\n        if (errorResponse.error && errorResponse.message === 'VALIDATION_FAILED') {\r\n          this.errorFieldSubmitted = errorResponse.data;\r\n        }\r\n      }, () => {console.log(\"Registration Complete\");\r\n                        this.modalRef.close(\"Registration Complete\");}\r\n    );\r\n  }\r\n\r\n  get userName(): AbstractControl {\r\n    return this.validationForm.get('userName')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.validationForm.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.validationForm.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.validationForm.get('phone')!;\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <!--div class=\"text-center\"-->\r\n    <label class=\"white-text mb-2 mt-2 font-weight-bold fas\">\r\n      <strong>REPLACE PASSWORD</strong>\r\n      <a class=\"green-text font-weight-bold\">\r\n        <strong> FORM</strong>\r\n      </a>\r\n    </label>\r\n\r\n  <!--/div-->\r\n  <button type=\"button\" class=\"btn btn-close white-text \" aria-label=\"Close\" (click)='modalRef.close(\"xbutton\")'></button>\r\n\r\n  <!--h5 class=\"modal-title\" id=\"exampleModalLabel\">REGISTRATION</h5-->\r\n\r\n</div>\r\n<div class=\"modal-body py-4 text-center expansionCard\">\r\n  <figure class=\"figure\">\r\n  <img aria-setsize=\"20\"  id=\"profile-img\" src=\"./assets/images/T.png\"\r\n       class=\"profile-img-card img-fluid rounded \"  alt=\"\"/>\r\n    <figcaption class=\"figure-caption text-center text-capitalize\">Tadiran Telecom</figcaption>\r\n  </figure>\r\n  <div class=\"text-white rgba-stylish-strong py-4 px-5 z-depth-2\" style=\"border-bottom: 2rem\">\r\n  <!--div class=\"form-outline\">\r\n    <input type=\"text\" id=\"typeText\" class=\"form-control\" />\r\n    <label  class=\"form-label\" for=\"typeText\">Your UserName</label>\r\n  </div-->\r\n\r\n  <form *ngIf=\"!isSuccessful\" [formGroup]=\"replacePassForm\">\r\n\r\n  <!--###################### Username input field ###################### -->\r\n  <div class=\"form-outline\">\r\n    <mdb-form-control  class=\"form-outline\">\r\n      <input [mdbValidate]=\"true\" mdbInput type=\"text\" id=\"typeText\"\r\n             class=\"form-control\"  formControlName=\"userName\" required />\r\n      <label class=\"form-label \" for=\"typeText\" >Username input</label>\r\n      <mdb-error *ngIf=\"userName?.invalid && (userName?.dirty || userName?.touched)\">\r\n        Username is required\r\n      </mdb-error>\r\n      <mdb-success *ngIf=\"userName?.valid && (userName?.dirty || userName?.touched)\">\r\n        Looks good!\r\n      </mdb-success>\r\n    </mdb-form-control>\r\n  </div>\r\n    <br>\r\n  <!--###################### Old Password input field ###################### -->\r\n  <div class=\"form-outline\">\r\n    <mdb-form-control  class=\"form-outline\">\r\n    <input [mdbValidate]=\"true\" mdbInput type=\"password\" id=\"typeOldPassword\"\r\n           class=\"form-control\" formControlName=\"oldPassword\" required minlength=\"1\" />\r\n    <label class=\"form-label\" for=\"typeOldPassword\">Current Password</label>\r\n      <mdb-error *ngIf=\"oldPassword?.invalid && (oldPassword?.dirty || oldPassword?.touched)\">\r\n        Current password is required\r\n      </mdb-error>\r\n      <mdb-success *ngIf=\"oldPassword?.valid && (oldPassword?.dirty || oldPassword?.touched)\">\r\n        Looks good!\r\n      </mdb-success>\r\n    </mdb-form-control>\r\n    <span class=\"text-danger error-input\" *ngIf=\"submitted && errorFieldSubmitted['oldPassword']\"\r\n          style=\"white-space: pre-line;  font-size: 14px;\">\r\n          {{errorFieldSubmitted['oldPassword'] | loginErrorMessage}}\r\n      <br><br>\r\n    </span>\r\n  </div>\r\n\r\n    <br>\r\n    <hr class=\"my-1 text-black-50\">\r\n    <br>\r\n\r\n  <!--###################### New Password input field ###################### -->\r\n  <div class=\"form-outline text-black-50\">\r\n    <mdb-form-control  class=\"form-outline\">\r\n    <input [mdbValidate]=\"true\" mdbInput type=\"password\" id=\"typePassword\"\r\n           class=\"form-control\" formControlName=\"password\" required minlength=\"3\" />\r\n    <label mdbLabel class=\"form-label form-white\" for=\"typePassword\">New Password</label>\r\n    <mdb-error *ngIf=\"password?.invalid && (password?.dirty || password?.touched)\">\r\n      Password is required\r\n    </mdb-error>\r\n    <mdb-success *ngIf=\"password?.valid && (password?.dirty || password?.touched)\">\r\n      Looks good!\r\n    </mdb-success>\r\n    </mdb-form-control>\r\n    <span class=\"text-danger error-input\" *ngIf=\"submitted && errorFieldSubmitted['password']\"\r\n          style=\"white-space: pre-line;  font-size: 14px;\">\r\n          {{errorFieldSubmitted['password'] | apiErrorMessage}}\r\n      <br><br>\r\n    </span>\r\n  </div>\r\n  <br>\r\n\r\n  <!--###################### Confirm Password input field ###################### -->\r\n  <div class=\"form-outline\">\r\n    <mdb-form-control  class=\"form-outline\">\r\n    <input [mdbValidate]=\"true\" mdbInput type=\"password\" id=\"typeConfirmPassword\"\r\n           class=\"form-control\" formControlName=\"confirmPassword\" required minlength=\"3\" />\r\n    <label mdbLabel class=\"form-label form-white\" for=\"typeConfirmPassword\">Confirm Password</label>\r\n      <mdb-error *ngIf=\"confirmPassword?.invalid && (confirmPassword?.dirty || confirmPassword?.touched)\">\r\n        Retype password is required\r\n      </mdb-error>\r\n      <mdb-success *ngIf=\"confirmPassword?.valid && (confirmPassword?.dirty || confirmPassword?.touched)\">\r\n        Looks good!\r\n      </mdb-success>\r\n    </mdb-form-control>\r\n    <span class=\"text-danger error-input\" *ngIf=\"submitted && errorFieldSubmitted['confirmPassword']\"\r\n          style=\"white-space: pre-line;  font-size: 14px;\">\r\n          {{errorFieldSubmitted['confirmPassword'] | apiErrorMessage}}\r\n      <br><br>\r\n    </span>\r\n  </div>\r\n  </form>\r\n  </div>\r\n\r\n\r\n  <!--Grid row-->\r\n  <div  *ngIf=\"!isSuccessful\" class=\"row d-flex align-items-lg-center border-bottom-0 \">\r\n    <!--Grid column-->\r\n    <div class=\"text-center mb-2  col-md-12 border-bottom-0\">\r\n      <button type=\"button\" (click)=\"onSubmit()\" class=\"btn btn-success btn-block btn-rounded z-depth-1 waves-effect waves-light border-bottom-0\"\r\n      style=\"margin-bottom: 0;\">Replace Password</button>\r\n    </div>\r\n  </div>\r\n  <div hidden class=\"list-group-horizontal mb-4 col-md-12\">\r\n    <button type=\"button\" class=\" fa-pull-left btn btn-primary\">Save changes</button>\r\n    <button type=\"button\" class=\"fa-pull-right btn btn-secondary\" (click)=\"modalRef.close()\">Close</button>\r\n  </div>\r\n\r\n</div>\r\n\r\n\r\n\r\n<div class=\"modal-content \">\r\n    <div class=\"modal-footer fal\">\r\n      <input type=\"checkbox\" class=\" form-check-input\" id=\"checkbox7\">\r\n      <label for=\"checkbox7\" class=\"form-check-label white-text\">Subscribe to our <a href=\"#\" class=\"green-text font-weight-bold\"> newsletter?</a></label>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { Component } from '@angular/core';\r\nimport { MdbModalRef } from 'mdb-angular-ui-kit/modal';\r\nimport {AuthService} from \"../../_services/auth.service\";\r\nimport {AbstractControl, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: './replace-pass-form.component.html',\r\n  styleUrls: ['./replace-pass-form.component.css']\r\n})\r\nexport class ReplacePassFormComponent {\r\n  replacePassForm: FormGroup;\r\n  isSuccessful = false;\r\n  isSignUpFailed = false;\r\n  submitted = false;\r\n  errorMessage = '';\r\n  empList: Array<String> = [];\r\n  apiResponse = { message: '', error: false };\r\n  errorFieldSubmitted: any = {};\r\n  closeResult = '';\r\n\r\n  constructor(public modalRef: MdbModalRef<ReplacePassFormComponent>,\r\n              private authService: AuthService) {\r\n    this.replacePassForm = new FormGroup({\r\n      userName: new FormControl(null, Validators.required),\r\n      oldPassword: new FormControl(null, Validators.minLength(1)),\r\n      password: new FormControl('', Validators.minLength(3)),\r\n      confirmPassword: new FormControl(null, Validators.minLength(3))\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n    const { userName, oldPassword, password, confirmPassword } = this.replacePassForm.value;\r\n    this.authService.replacePassForm(userName, oldPassword, password, confirmPassword).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.isSuccessful = true;\r\n        this.isSignUpFailed = false;\r\n        this.errorFieldSubmitted = {};\r\n        this.apiResponse.error = false;\r\n        this.apiResponse.message = 'Successful registration';\r\n      },\r\n      error => {\r\n        const errorResponse = JSON.parse(error.error);\r\n        this.apiResponse.error = true;\r\n        this.apiResponse.message = 'Registration error';\r\n        this.errorMessage = error.error.message;\r\n        this.isSignUpFailed = true;\r\n        if (errorResponse.error && errorResponse.message === 'VALIDATION_FAILED') {\r\n          this.errorFieldSubmitted = errorResponse.data;\r\n        }\r\n      }, () => {this.modalRef.close()}\r\n    );\r\n  }\r\n\r\n\r\n\r\n  get userName(): AbstractControl {\r\n    return this.replacePassForm.get('userName')!;\r\n  }\r\n\r\n  get oldPassword(): AbstractControl {\r\n    return this.replacePassForm.get('oldPassword')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.replacePassForm.get('password')!;\r\n  }\r\n\r\n  get confirmPassword(): AbstractControl {\r\n    return this.replacePassForm.get('confirmPassword')!;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'apiErrorMessage'\r\n})\r\nexport class ApiErrorMessagePipe implements PipeTransform {\r\n\r\n  transform(message: string, ...args: unknown[]): unknown {\r\n    const dataToArray = message.split(',').map(item => item.trim());\r\n    // convert array to string replacing comma with new line\r\n    return dataToArray.join('\\n');\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'loginErrorMessage'\r\n})\r\nexport class LoginErrorMessagePipe implements PipeTransform {\r\n\r\n  transform(message: string, ...args: unknown[]): unknown {\r\n    const dataToArray = message.split(',').map(item => item.trim());\r\n    // convert array to string replacing comma with new line\r\n    return dataToArray.join('\\n');\r\n  }\r\n\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\nimport { StoryInput } from \"../../stories/inputs/story-input.model\";\nimport {AuthService} from \"../_services/auth.service\";\nimport {AbstractControl, FormGroup} from \"@angular/forms\";\nimport {TokenStorageService} from \"../_services/token-storage.service\";\nimport {Router} from \"@angular/router\";\nimport {AppConfig} from \"../app.config\";\nimport {BehaviorSubject, throwError} from \"rxjs\";\nimport {UserService} from \"../_services/user.service\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {ReplacePassForm2Component} from \"../login2/login-main/replace-pass-form2/replace-pass-form2.component\";\n\n\nexport interface DialogData {\n  username: string;\n  password: string;\n}\n\n\n@Component({\n  selector: 'profile2',\n  templateUrl: './profile2.component.html',\n  styleUrls: ['./profile2.component.scss']\n})\nexport default class Profile2Component implements OnInit {\n\n  currentUser: any;\n  accessToken: any;\n  refreshToken: any;\n  windowObjectReference: any;\n  refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n  public isLoading = false;\n  public appConfig: any;\n  private TOKEN_KEY: string;\n  permittedWebAppList = {\n    realtime: false,\n    scriptDesigner: false,\n    agent: false,\n    aeonixAdmin: false,\n    admin: false\n  };\n\n\n  isNotify(): boolean {\n   return (this.passExp < this.previousAlertPassExp);\n  }\n\n\n  constructor(private authService: AuthService,\n              private token: TokenStorageService,\n              private router: Router,\n              public replacePassFormDialog: MatDialog) {\n    this.TOKEN_KEY = AppConfig.endpoints.TOKEN_KEY;\n  }\n\n\n  openReplacePassForm() {\n    const replacePassFormDialogRef = this.replacePassFormDialog.open(ReplacePassForm2Component, {\n      data: {username: this.currentUser , password: ''},\n    });\n\n    replacePassFormDialogRef.beforeClosed().subscribe(result => {\n        console.log('The replace password form dialog before closed');\n      },\n      err => {\n        console.log(err.error.message);\n      });\n\n\n    replacePassFormDialogRef.afterClosed().subscribe(result => {\n      console.log('The replace password form dialog after closed');\n      if (result.message === 'Replace Password Complete') {\n        console.log('Replace Password Complete');\n        this.setPassExpAlertData();\n      }\n    });\n\n    return replacePassFormDialogRef.afterClosed().toPromise();\n  }\n\n\n  public passExp: number = 0; // By Days\n  public previousAlertPassExp: number = 0; // By Days\n\n\n  ngOnInit(): void {\n    this.currentUser = this.token.getUser();\n    this.accessToken = this.currentUser.accessToken;\n    this.refreshToken = this.currentUser.refreshToken;\n    this.setPassExpAlertData();\n    this.setPermittedWebAppList();\n  }\n\n  setPassExpAlertData(): void {\n\n    const token = this.token.getToken();\n    if (token)\n      this.authService.getPassExpireDate(token).subscribe(data => {\n        this.passExp = data.passExp;\n        this.previousAlertPassExp = data.previousAlertPassExp;\n        console.log('Password Expire Date: '+this.passExp);\n        console.log('previous Alert To Password Expire Date: '+this.previousAlertPassExp);\n      }, (err) => {\n        console.log('Password Expire Date: update failed');\n        return throwError(err);\n      });\n\n  }\n\n\n  setPermittedWebAppList(): void {\n\n    const token = this.token.getToken();\n    if (token)\n      this.authService.getPermittedWebAppList(token).subscribe(permittedWebAppList => {\n        this.permittedWebAppList=(permittedWebAppList);\n        console.log('Permitted web apps list is received from server.');\n      }, (err) => {\n        console.log('Can not get server data defining permitted web apps for user');\n        return throwError(err);\n      });\n\n  }\n\n  openapp(): void {\n    console.log('window.location.origin.toString():  '+window.location.origin.toString());\n\n    this.router.navigate([]).then(result => { this.windowObjectReference = window.open(AppConfig.accServer.ACCWEBServers+'/accGCCS/'/*window.location.origin.toString()+\"/profile\"*/); });\n    console.log('window.location.origin.toString():  '+ this.windowObjectReference.window.document.getElementById(\"profile_title\").innerHTML);\n    var promise = new Promise((resolve, reject) => {this.windowObjectReference.window.document.getElementById(\"profile_title\").innerHTML = \"new title\";});\n\n    console.log('window.location.origin.toString():  '+ this.windowObjectReference.window.document.getElementById(\"profile_title\").innerHTML);\n\n  }\n\n  public forseRefreshToken(): void {\n\n    if (!this.isLoading) {\n      this.isLoading = true;\n      const token = this.token.getRefreshToken();\n      if (token)\n        this.authService.refreshToken(token).subscribe(\n          data => {\n            this.isLoading = false;\n            this.token.saveToken(data.accessToken);\n            this.token.saveRefreshToken(data.refreshToken);\n            this.refreshTokenSubject.next(data.accessToken);\n            this.currentUser = this.token.getUser();\n            this.accessToken = this.token.getToken();\n            this.refreshToken = this.token.getRefreshToken();\n          },\n          (err) => {\n            this.isLoading = false;\n\n            this.token.signOut();\n            return throwError(err);\n          }\n        );\n    }\n  }\n\n  public openNewTabForApp(appRequest: string[]): void {\n    const [ webapp, webappURLPrefix ] = appRequest.values();\n    var newAccessToken = \"\";\n    var newRefreshToken = \"\";\n    var newCurrentUser = \"\";\n\n    if (!this.isLoading) {\n      this.isLoading = true;\n      const token = this.token.getRefreshToken();\n      if (token)\n        this.authService.webapptab(token, webapp)\n          .subscribe(\n            data => {\n              let promise = new Promise<void>((resolve, reject) => {\n                this.isLoading = false;\n                newAccessToken = (data.accessToken);\n                newRefreshToken = (data.refreshToken);\n                newCurrentUser = (data);\n                setTimeout(() => {\n                  this.isLoading = false;\n                  console.log(\"Failed open new tab\");\n                  resolve();//() => {resolve();}\n                }, 5000);\n              })\n              promise.then(() => {this.router.navigate([])\n                .then(result => { this.windowObjectReference = window.open(AppConfig.accServer.ACCWEBServers+webappURLPrefix);})\n                .then(result => { this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.TOKEN_KEY, newAccessToken);\n                    this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.REFRESHTOKEN_KEY, newRefreshToken);\n                    this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.USER_KEY, JSON.stringify(newCurrentUser));},\n                  (err) => { this.isLoading = false;\n                    return throwError(err);})});\n            },\n            (err) => {\n              this.isLoading = false;\n              return throwError(err);\n            })\n    }\n  }\n\n\n  public openNewWinForApp(appRequest: string[]): void {\n    /*webapp: string, webappURLPrefix: string*/\n    const [ webapp, webappURLPrefix ] = appRequest.values();\n    var newAccessToken = \"\";\n    var newRefreshToken = \"\";\n    var newCurrentUser = \"\";\n\n    if (!this.isLoading) {\n      this.isLoading = true;\n      const token = this.token.getRefreshToken();\n      if (token)\n        this.authService.webapptab(token, webapp)\n          .subscribe(\n            data => {\n              let promise = new Promise<void>((resolve, reject) => {\n                this.isLoading = false;\n                newAccessToken = (data.accessToken);\n                newRefreshToken = (data.refreshToken);\n                newCurrentUser = (data);\n                setTimeout(() => {\n                  this.isLoading = false;\n                  console.log(\"Failed open new window\");\n                  resolve();//() => {resolve();}\n                }, 5000);\n              })\n              promise.then(result => { this.windowObjectReference = window.open(AppConfig.accServer.ACCWEBServers+webappURLPrefix+'start.html',\n                  'C-Sharpcorner', 'scrollbars=no');})\n                .then(result => { this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.TOKEN_KEY, newAccessToken);\n                    this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.REFRESHTOKEN_KEY, newRefreshToken);\n                    this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.USER_KEY, JSON.stringify(newCurrentUser));},\n            (err) => { this.isLoading = false;\n              return throwError(err);})\n    },\n    (error) => {\n              this.isLoading = false;\n              return throwError(error.error);\n            })\n    }\n  }\n\n}\n\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>Title</title>\r\n</head>\r\n<body>\r\n<storybook-background1></storybook-background1>\r\n\r\n<!--button mat-raised-button (click)=\"setPassExpAlertData()\">setPassExpAlertData</button-->\r\n\r\n<storybook-avatar\r\n  id=\"avatar\"\r\n  [label]=\"this.currentUser.username\"\r\n  [isNotify]=\"this.isNotify()\"\r\n  header=\"{{'Your password will expire in ' + this.passExp +' Days.'}}\"\r\n  (actionButton)=\"openReplacePassForm()\"\r\n  (click)=\"this.setPermittedWebAppList()\">\r\n</storybook-avatar>\r\n\r\n<!--this.setPassExpAlertData() -->\r\n\r\n\r\n<storybook-app-menu\r\n  [profileApps]=\"permittedWebAppList\"\r\n  [isLoading]=\"isLoading\"\r\n  (openNewWinForApp)=\"openNewWinForApp($event)\"\r\n  (openNewTabForApp)=\"openNewTabForApp($event)\">\r\n</storybook-app-menu>\r\n\r\n</body>\r\n</html>\r\n","<div class=\"container\" *ngIf=\"currentUser; else loggedOut\">\r\n  <br>\r\n  <header class=\"background jumbotron\">\r\n    <h3 class=\"font_0\" id=\"profile_title\">\r\n      {{ currentUser.username }} Profile\r\n    </h3>\r\n  </header>\r\n  <p>\r\n    <strong>accessToken:</strong>\r\n    <!--{{ currentUser.accessToken.substring(0, 20) }} ...\r\n    {{ currentUser.accessToken.substr(currentUser.accessToken.length - 20) }}-->\r\n    {{ accessToken }}\r\n  </p>\r\n  <p>\r\n    <strong>refreshToken:</strong>\r\n    {{ refreshToken }}\r\n    <br>\r\n    <button id=\"forseRefreshToken\" (click)=\"forseRefreshToken()\" style='text-align: left; width:auto;cursor: pointer;'>Refresh</button>\r\n    <br>\r\n    <button id=\"openNewGccsTab\" (click)='openNewTabForApp(\"GCCS\",\"/accGCCS/\")' style='text-align: left; width:auto;cursor: pointer;'>Open new tab for GCCS</button>\r\n    <br>\r\n    <button id=\"openNewAgentTab\" (click)='openNewWinForApp(\"AGENT\",\"/accAgent/\")' style='text-align: left; width:auto;cursor: pointer;'>Open new tab for Vee</button>\r\n    <br>\r\n    <button id=\"openNewWebRTTab\" (click)='openNewTabForApp(\"ACCREALTIME\",\"/accRealTime/\")' style='text-align: left; width:auto;cursor: pointer;'>Open new tab for WebRT</button>\r\n  </p>\r\n  <p>\r\n    <strong>Email:</strong>\r\n    {{ currentUser.email }}\r\n  </p>\r\n  <p>\r\n    <strong>ID:</strong>\r\n    {{ currentUser.id }}\r\n  </p>\r\n  <p>\r\n    <strong>Web App:</strong>\r\n    {{ currentUser.webApp }}\r\n  </p>\r\n  <strong>Roles:</strong>\r\n  <ul>\r\n    <li *ngFor=\"let role of currentUser.roles\">\r\n      {{ role }}\r\n    </li>\r\n  </ul>\r\n  <p><a href=\"http://tadiran2014.azurewebsites.net/en/products/unified-communications/aeonix/\" id=\"testid2\" target=\"iframe_a\">Tadiran Azure</a></p>\r\n  <p><a href=\"https://www.tadirantele.com/aeonix4cloud\" id=\"testid4\" target=\"iframe_a\">aeonix4cloud</a></p>\r\n  <iframe src=\"https://www.tadirantele.com/aeonix4cloud\" sandbox=\"allow-same-origin allow-scripts allow-popups allow-forms\"  name=\"iframe_a\" height=\"550px\" width=\"100%\" title=\"Iframe Example\">\r\n  </iframe>\r\n  <ul class=\"list-unstyled\">\r\n    <li class=\"media\">\r\n      <a href=\"https://172.28.8.245:8443/aeonix/mainForm.jsf\" class=\"app-icon-wide\"  target=\"_blank\" aria-current=\"true\">\r\n        <img class=\"\" src=\"./assets/images/aeonix_logo_72.png\" alt=\"Icon app number 1\">\r\n      </a>\r\n      <div class=\"media-body\">\r\n        <h5 class=\"mt-0 mb-1\">aeonix - SERVER</h5>\r\n        Aeonix is a software only communications solution that consolidates disparate business applications into a single, fault tolerant platform. The Aeonix Unified Communications platform, Aeonix Contact Center(ACC), and Aeonix Dispatch Console (ADC), all reside in one virtual instance or COTS server. Aeonix runs on any virtualization platform including VMware, Hyper-V and cloud platforms such as AWS, and can easily port from one platform to another.\r\n      </div>\r\n    </li>\r\n    <li class=\"media my-4\">\r\n      <button (click)=\"openapp()\" class=\"app-icon\" >\r\n        <img class=\"app-icon\" src=\"./assets/images/dashboard.png\" alt=\"Icon app number 2\" >\r\n      </button>\r\n      <!--a href=\"https://172.28.1.130:8445/accRealTime/index.jsp\" class=\"app-icon\" rel=\"opener\" aria-current=\"true\"></a-->\r\n      <div class=\"media-body\">\r\n        <h5 class=\"mt-0 mb-1\">AccGCCS - SERVER</h5>\r\n        Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.\r\n      </div>\r\n    </li>\r\n    <li class=\"media\">\r\n      <a href=\"https://localhost:8445/accGCCS/\" id=\"testid3\" target=\"iframe_a\" rel=\"noopener\" aria-current=\"false\">\r\n      <img class=\"app-icon\" src=\"./assets/images/management.png\" alt=\"Icon app number 3\">\r\n      </a>\r\n      <div class=\"media-body\">\r\n        <h5 class=\"mt-0 mb-1\">AccGCCS - LOCAL</h5>\r\n        Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.\r\n      </div>\r\n    </li>\r\n    <li class=\"media my-4\">\r\n      <a href=\"http://localhost:8080/accWebRT/\" id=\"testid5\" target=\"iframe_a\" rel=\"noopener\" aria-current=\"false\">\r\n        <img class=\"app-icon\" src=\"./assets/images/dashboard.png\" alt=\"Icon app number 4\" >\r\n      </a>\r\n\r\n      <div class=\"media-body\">\r\n        <h5 class=\"mt-0 mb-1\">AccWebRT - LOCAL</h5>\r\n        Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.\r\n      </div>\r\n    </li>\r\n    <li class=\"media\">\r\n      <a href=\"https://172.28.8.245:8445/accAgent/\" id=\"testid6\" target=\"iframe_a\" rel=\"noopener\" aria-current=\"false\">\r\n        <img class=\"app-icon\" src=\"./assets/images/management.png\" alt=\"Icon app number 5\">\r\n      </a>\r\n      <div class=\"media-body\">\r\n        <h5 class=\"mt-0 mb-1\">AccAgent - SERVER</h5>\r\n        Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.\r\n      </div>\r\n    </li>\r\n  </ul>\r\n</div>\r\n\r\n<ng-template #loggedOut>\r\n  Please login.\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\nimport {Router} from \"@angular/router\";\r\nimport {AuthService} from \"../_services/auth.service\";\r\nimport {AuthInterceptor, authInterceptorProviders} from \"../_helpers/auth.interceptor\";\r\nimport {catchError, switchMap} from \"rxjs/operators\";\r\nimport {BehaviorSubject, pipe, throwError} from \"rxjs\";\r\nimport {HTTP_INTERCEPTORS} from \"@angular/common/http\";\r\nimport { AppConfig } from \"../app.config\"\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  currentUser: any;\r\n  accessToken: any;\r\n  refreshToken: any;\r\n  windowObjectReference: any;\r\n  refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  private isRefreshing = false;\r\n  public appConfig: any;\r\n  private TOKEN_KEY: string;\r\n\r\n\r\n  constructor(private token: TokenStorageService, private router: Router, private authService: AuthService) {\r\n    this.TOKEN_KEY = AppConfig.endpoints.TOKEN_KEY;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.token.getUser();\r\n    this.accessToken = this.currentUser.accessToken;\r\n    this.refreshToken = this.currentUser.refreshToken;\r\n  }\r\n\r\n\r\n  openapp(): void {\r\n    console.log('window.location.origin.toString():  '+window.location.origin.toString());\r\n\r\n    this.router.navigate([]).then(result => { this.windowObjectReference = window.open(AppConfig.accServer.ACCWEBServers+'/accGCCS/'/*window.location.origin.toString()+\"/profile\"*/); });\r\n    //console.log('window.location.origin.toString():  '+ this.windowObjectReference\r\n    console.log('window.location.origin.toString():  '+ this.windowObjectReference.window.document.getElementById(\"profile_title\").innerHTML);\r\n    var promise = new Promise((resolve, reject) => {this.windowObjectReference.window.document.getElementById(\"profile_title\").innerHTML = \"new title\";});\r\n\r\n\r\n    //this.windowObjectReference.window.document.getElementById(\"profile_title\").innerHTML = \"new title\";\r\n    //this.windowObjectReference.window.document.done.\r\n    console.log('window.location.origin.toString():  '+ this.windowObjectReference.window.document.getElementById(\"profile_title\").innerHTML);\r\n    //let { username, password } = this.loginForm.value;\r\n    //username = this.loginForm.get(['username'])?.value.toString();\r\n    //let password = this.loginForm.get(['password'])?.value.toString();\r\n    //this.authenticationService.logout();\r\n  }\r\n\r\n  public forseRefreshToken(): void {\r\n    //@Value(\"${bezkoder.app.jwtExpirationMs}\")\r\n\r\n    if (!this.isRefreshing) {\r\n      const token = this.token.getRefreshToken();\r\n      if (token)\r\n        this.authService.refreshToken(token).subscribe(\r\n          data => {\r\n            this.isRefreshing = false;\r\n            this.token.saveToken(data.accessToken);\r\n            this.token.saveRefreshToken(data.refreshToken);\r\n            this.refreshTokenSubject.next(data.accessToken);\r\n            this.currentUser = this.token.getUser();\r\n            this.accessToken = this.token.getToken();\r\n            this.refreshToken = this.token.getRefreshToken();\r\n          },\r\n          (err) => {\r\n            this.isRefreshing = false;\r\n\r\n            this.token.signOut();\r\n            return throwError(err);\r\n          }\r\n        );\r\n\r\n\r\n    }\r\n  }\r\n\r\n  public openNewTabForApp(webapp: string, webappURLPrefix: string): void {\r\n    var newAccessToken = \"\";\r\n    var newRefreshToken = \"\";\r\n    var newCurrentUser = \"\";\r\n\r\n    /*   if (!this.isRefreshing) {var token = this.token.getRefreshToken();}\r\n\r\n       let promise = new Promise<void>((resolve, reject) => {\r\n         this.authService.webapptab(token, webapp)\r\n           .subscribe(data => {\r\n               this.isRefreshing = false;\r\n               newAccessToken = (data.accessToken);\r\n               newRefreshToken = (data.refreshToken);\r\n               newCurrentUser = (data);\r\n             },\r\n             (reject) => {\r\n               return throwError(reject.error);\r\n             })\r\n\r\n         resolve();\r\n         setTimeout(() => {\r\n           console.log(\"Failed open new window\");\r\n           reject();//() => {resolve();}\r\n         }, 5000);\r\n       });\r\n\r\n\r\n       promise\r\n       .then(() => {this.router.navigate([])\r\n       .then(result => { this.windowObjectReference = window.open(AppConfig.accServer.ACCWEBServers+webappURLPrefix);})\r\n       .then(result => { this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.TOKEN_KEY, newAccessToken);\r\n                         this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.REFRESHTOKEN_KEY, newRefreshToken);\r\n                         this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.USER_KEY, JSON.stringify(newCurrentUser));},\r\n            (err) => { this.isRefreshing = false;\r\n                       return throwError(err);})}\r\n       );\r\n   */\r\n\r\n\r\n  }\r\n\r\n\r\n  public openNewWinForApp(webapp: string, webappURLPrefix: string): void {\r\n    var newAccessToken = \"\";\r\n    var newRefreshToken = \"\";\r\n    var newCurrentUser = \"\";\r\n/*\r\n    if (!this.isRefreshing) {\r\n      const token = this.token.getRefreshToken();\r\n      if (token)\r\n        this.authService.webapptab(token, webapp)\r\n          .then(\r\n            data => {\r\n              this.isRefreshing = false;\r\n              newAccessToken = (data.accessToken);\r\n              newRefreshToken = (data.refreshToken);\r\n              newCurrentUser = (data);\r\n            },\r\n            (reject) => {return throwError(reject.error);})\r\n            .then(result => { this.windowObjectReference = window.open(AppConfig.accServer.ACCWEBServers+webappURLPrefix+'start.html',\r\n                        'C-Sharpcorner', 'scrollbars=no');})\r\n            .then(result => { this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.TOKEN_KEY, newAccessToken);\r\n                this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.REFRESHTOKEN_KEY, newRefreshToken);\r\n                this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.USER_KEY, JSON.stringify(newCurrentUser));},\r\n              (err) => { this.isRefreshing = false;\r\n                return throwError(err);})\r\n    }*/\r\n  }\r\n  /*\r\n  forseRefreshToken(): void {\r\n    console.log('Sending forseRefreshToken request...   ');\r\n    this.authInterceptor.forseRefreshToken();\r\n    //authInterceptorProviders.\r\n  }*/\r\n}\r\n","<div class=\"col-md-12\">\r\n  <div class=\"card card-container\">\r\n    <img\r\n      id=\"profile-img\"\r\n      src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n      class=\"profile-img-card\"/>\r\n    <form  *ngIf=\"!isSuccessful\"  name=\"form\"  (ngSubmit)=\"f.form.valid && onSubmit()\"  #f=\"ngForm\"  novalidate>\r\n      <div class=\"form-group\">\r\n        <label for=\"userName\">Username</label>\r\n        <input type=\"text\" class=\"form-control\" name=\"userName\" [(ngModel)]=\"form.userName\"\r\n          required minlength=\"3\" maxlength=\"20\" #userName=\"ngModel\"/>\r\n        <div class=\"alert-danger\" *ngIf=\"userName.errors && f.submitted\">\r\n          <div *ngIf=\"userName.errors.required\">Username is required</div>\r\n          <div *ngIf=\"userName.errors.minlength\">\r\n            Username must be at least 3 characters\r\n          </div>\r\n          <div *ngIf=\"userName.errors.maxlength\">\r\n            Username must be at most 20 characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email</label>\r\n        <input type=\"email\" class=\"form-control\" name=\"email\" [(ngModel)]=\"form.email\"\r\n          required email #email=\"ngModel\"/>\r\n        <div class=\"alert-danger\" *ngIf=\"email.errors && f.submitted\">\r\n          <div *ngIf=\"email.errors.required\">Email is required</div>\r\n          <div *ngIf=\"email.errors.email\">\r\n            Email must be a valid email address\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"form.password\"\r\n          required minlength=\"6\" #password=\"ngModel\"/>\r\n        <div class=\"alert-danger\" *ngIf=\"password.errors && f.submitted\">\r\n          <div *ngIf=\"password.errors.required\">Password is required</div>\r\n          <div *ngIf=\"password.errors.minlength\">\r\n            Password must be at least 6 characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <button class=\"btn btn-primary btn-block\">Sign Up</button>\r\n      </div>\r\n\r\n      <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\r\n        Signup failed!<br />{{ errorMessage }}\r\n      </div>\r\n    </form>\r\n\r\n    <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\r\n      Your registration is successful!\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport {FormControl, Validators} from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  form: any = {\r\n    username: null,\r\n    email: null/*new FormControl('', Validators.email)*/,\r\n    password: null\r\n  };\r\n  isSuccessful = false;\r\n  isSignUpFailed = false;\r\n  errorMessage = '';\r\n  empList: Array<String> = [];\r\n  closeResult = '';\r\n\r\n\r\n  constructor(private authService: AuthService) {\r\n    this.empList.push(\"admin\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const { username, email, password } = this.form;\r\n\r\n\r\n\r\n    this.authService.register(username, email, password, this.empList).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.isSuccessful = true;\r\n        this.isSignUpFailed = false;\r\n      },\r\n      err => {\r\n        this.errorMessage = err.error.message;\r\n        this.isSignUpFailed = true;\r\n      }\r\n    );\r\n  }\r\n}\r\n","import {Injectable, Pipe, PipeTransform} from '@angular/core';\r\nimport {ApiErrorMessageService} from \"./api-error-message.service\";\r\n\r\n@Pipe({\r\n  name: 'apiErrorMessage',\r\n  pure: false,\r\n})\r\nexport class ApiErrorMessagePipe implements PipeTransform {\r\n    constructor(private apiErrorMessageService: ApiErrorMessageService) {}\r\n\r\n    transform(value: any, args?: any): any {\r\n      this.apiErrorMessageService.language = args.language;\r\n      return this.apiErrorMessageService.apiErrorMessage(value)    }\r\n\r\n/*    transform(message: string, ...args: unknown[]): unknown {\r\n      const dataToArray = message.split(',').map(item => {item.trim();\r\n        console.log('ApiErrorMessagePipe: '+item.toString() +'   '+ item.trim().toString());\r\n      });\r\n\r\n      // convert array to string replacing comma with new line\r\n      return dataToArray.join('\\n');\r\n    }\r\n*/\r\n}\r\n\r\n\r\n\r\n","import {Injectable} from \"@angular/core\";\r\nimport {first} from \"rxjs/operators\";\r\n\r\n\r\n@Injectable()\r\nexport class ApiErrorMessageService {\r\n  public languages = ['login-main', 'eng']\r\n\r\n  public language  = 'login-main'\r\n\r\n  private dictionary: { [key: string]: TranslationSet } = {\r\n    'login-main': {\r\n      languange: 'login-main',\r\n      values: {\r\n        \"example\": \"Beispiel\",\r\n        \"must be a well-formed email address\": \"must be a well-formed email address\",\r\n        \"Error: A registry process should be made!\": \"Error: A registry process should be made!\",\r\n        \"Error: A registry process un valid!\": \"Incorrect user name\",\r\n        \"VALIDATION_FAILED\": \"* A registry process un valid!\",\r\n        \"Bad credentials\": \"Incorrect user name or password\",\r\n        \"Password matches one of %1$s previous passwords.\": \"Try again with a password you haven’t used before\",\r\n        \"Passwords do not match!\": \"* Passwords do not match!\",\r\n        \"Error: Email is already in use!\": \"Email is already in use!\",\r\n      },\r\n    },\r\n    eng: {\r\n      languange: 'eng',\r\n      values: {\r\n        \"example\": \"Example\",\r\n      },\r\n    },\r\n\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  apiErrorMessage(key: string): any {\r\n    if (this.dictionary[this.language ] != null) {\r\n      return this.dictionary[this.language ].values[key];\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport class TranslationSet {\r\n  public languange?: any;\r\n  public values: { [key: string]: any } = {}\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n//import { BrowserModule } from '@angular/platform-browser';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n\nimport {ButtonLanguageComponent} from \"../../stories/buttons/button-language/button-language.component\";\nimport {ButtonFortestComponent} from '../../stories/buttons/button-fortest/button-fortest.component';\nimport {ButtonGlobeComponent} from \"../../stories/buttons/button-globe/button-globe.component\";\nimport Background1Component from \"../../stories/pages/background1/background1Component\";\nimport {ButtonTadiranComponent} from \"../../stories/buttons/button-tadiran/button-tadiran.component\";\nimport CardComponent from \"../../stories/cards/card.component\";\nimport LoginFormComponent from \"../../stories/forms/login-form/login-form-component\";\nimport RegistryFormComponent from \"../../stories/forms/registry-form/registry-form.component\";\nimport {ButtonContinueComponent} from \"../../stories/buttons/button-continue/button-continue.component\";\nimport {ButtonExComponent} from \"../../stories/buttons/button-ex/button-ex.component\";\nimport {ButtonAppsComponent} from \"../../stories/buttons/button-apps/button-apps.component\";\nimport {ButtonSuccessfullyComponent} from \"../../stories/buttons/button-successfully/button-successfully.component\";\nimport Button from \"../../stories/buttons/button-example/button.component\";\nimport {AppMenuComponent} from \"../../stories/app-menu/app-menu.component\";\nimport {StoryInputComponent} from \"../../stories/inputs/story-input.component\";\nimport {HighlightDirective} from \"src/stories/buttons/button-fortest/custom-directive/Highlight.directive\";\nimport ReplacePassFormComponent from \"../../stories/forms/replace-pass-form/replace-pass-form.component\";\nimport PassStrengthComponent from \"../../stories/pass-strength/pass-strength.component\";\nimport {ApiErrorMessagePipe} from \"./pipes/api-error-message.pipe\";\nimport {AvatarComponent} from \"../../stories/avatars/avatar.component\";\nimport {AppComponent} from \"../app.component\";\nimport { DynamicCompDirective } from '../../stories/directive/dynamic-comp.directive';\nimport {PopoverDirective} from \"../../stories/directive/bubble-avatar/popover.directive\";\nimport { BubbleAvatarComponent } from '../../stories/directive/bubble-avatar/bubble-avatar.component';\nimport { ActionAvatarComponent } from '../../stories/actions/action-avatar/action-avatar.component';\nimport {PopoverInputDirective} from \"../../stories/directive/bubble-input/popover-input.directive\";\nimport { BubbleInputComponent } from '../../stories/directive/bubble-input/bubble-input.component';\nimport { ActionInputComponent } from '../../stories/actions/action-input/action-input.component';\nimport {MdbPopoverModule} from \"mdb-angular-ui-kit/popover\";\n\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {ButtonExclamationMarkComponent} from \"../../stories/buttons/button-exclamation-mark/button-exclamation-mark.component\"\nimport {ApiErrorMessageService} from \"./pipes/api-error-message.service\";\nimport {Spinner1Component} from \"../../stories/spinners/spinner1/spinner1.component\";\n\n\n\n\n\n@NgModule({\n    declarations: [\n        ButtonGlobeComponent, Background1Component, ButtonTadiranComponent, ButtonLanguageComponent,\n        ButtonFortestComponent,\n        CardComponent,\n        LoginFormComponent, LoginFormComponent, RegistryFormComponent,\n        ButtonContinueComponent, ButtonExComponent, ButtonAppsComponent, ButtonSuccessfullyComponent, Button,\n        AppMenuComponent,\n        StoryInputComponent,\n        HighlightDirective,\n        ReplacePassFormComponent,\n        PassStrengthComponent,\n        ApiErrorMessagePipe,\n        AvatarComponent,\n        DynamicCompDirective,\n        ActionAvatarComponent, PopoverDirective, BubbleAvatarComponent,\n        ActionInputComponent, PopoverInputDirective, BubbleInputComponent,\n        ButtonExclamationMarkComponent,\n        Spinner1Component,\n\n\n    ],\n  imports: [\n    CommonModule,\n    FormsModule, ReactiveFormsModule, MdbPopoverModule, MatButtonModule,\n  ],\n  providers: [ ApiErrorMessageService],\n  exports: [\n    ButtonGlobeComponent, Background1Component, ButtonTadiranComponent, ButtonLanguageComponent,\n    ButtonFortestComponent,\n    CardComponent,\n    LoginFormComponent, LoginFormComponent, RegistryFormComponent,\n    ButtonContinueComponent, ButtonExComponent, ButtonAppsComponent, ButtonSuccessfullyComponent, Button,\n    AppMenuComponent,\n    StoryInputComponent,\n    CommonModule,\n    FormsModule, ReactiveFormsModule,\n    HighlightDirective,\n    ReplacePassFormComponent,\n    PassStrengthComponent,\n    AvatarComponent,\n    DynamicCompDirective,\n    ActionAvatarComponent   , PopoverDirective, BubbleAvatarComponent,\n    ActionInputComponent, PopoverInputDirective, BubbleInputComponent,\n    ButtonExclamationMarkComponent,\n    Spinner1Component,\n\n\n\n  ],\n  bootstrap: [AvatarComponent, ]\n})\nexport class StorybookModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {ActionInput} from \"../action-input/action-input.interface\";\r\n\r\n@Component({\r\n  selector: 'action-avatar',\r\n  templateUrl: './action-avatar.component.html',\r\n  styleUrls: ['./action-avatar.component.css']\r\n})\r\nexport class ActionAvatarComponent implements OnInit {\r\n\r\n  bubbleOn?: boolean;\r\n  actionHeader?: string = \"Your password will expire in 3 Days.\";\r\n\r\n  @Output() actionButton = new EventEmitter<any>();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public setHeader(actionHeader: string) {\r\n    this.actionHeader = actionHeader;\r\n  }\r\n\r\n  public setBubbleOn(bubbleOn: boolean) {\r\n    this.bubbleOn = bubbleOn;\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"password-alert-text\">\r\n<p>\r\n  {{this.actionHeader}}\r\n</p>\r\n<a [highlight]=\"'red'\" [colorName]=\"'red'\" (click)=\"this.actionButton.emit()\" class=\"action-text\" >Change it now ></a>\r\n</div>\r\n","<div class=\"password-alert-text\" Style=\"text-indent: 27px; padding-bottom: 15px\">\r\n<tr><strong>{{this.actionHeader}}</strong></tr>\r\n</div>\r\n<div >\r\n\r\n  <table >\r\n\r\n    <!--thead>\r\n\r\n    </thead-->\r\n    <tbody>\r\n      <tr *ngFor=\"let actionInput of actionInputs\">\r\n        <td  *ngIf=\"actionInput.isFulfilled\" Style=\"color: green\">✔</td>\r\n        <td  *ngIf=\"!actionInput.isFulfilled\" Style=\"color: red\">X</td>\r\n        <td Style=\"text-indent: 7px\">{{ actionInput.presentingMessage }}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ActionInput} from \"./action-input.interface\";\r\n\r\n\r\ninterface USERS {\r\n  conditionName: String;\r\n  presentingMessage: String;\r\n  isFulfilled: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'action-input',\r\n  templateUrl: './action-input.component.html',\r\n  styleUrls: ['./action-input.component.css']\r\n})\r\nexport class ActionInputComponent implements OnInit {\r\n\r\n  actionInputs?: ActionInput[];\r\n  actionHeader?: string = \"The password must contain:\";\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public setConditions(actionInputs: ActionInput[]) {\r\n    this.actionInputs = actionInputs;\r\n  }\r\n\r\n  public setHeader(actionHeader: string) {\r\n    this.actionHeader = actionHeader;\r\n  }\r\n}\r\n","\r\n\r\n\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <storybook-card class=\"card-container\" ></storybook-card>\r\n  <div  class=\"h-100 d-flex align-items-center justify-content-center\">\r\n    <div class=\"Aeonix-App-Center\">\r\n      <a>Aeonix App Center</a>\r\n    </div>\r\n    <div><storybook-spinner1  *ngIf=\"isLoading\"></storybook-spinner1></div>\r\n\r\n    <div class=\"grid-container\">\r\n      <div class=\"item1\"><storybook-button-apps application=\"Agent\" label=\"Continue\" type=\"button\" [isDisabled]=\"!profileApps?.agent\"\r\n        id=\"openNewAgentTab\" (click)='this.openNewWinForApp.emit([\"AGENT\",\"/accAgent/\"])'  ></storybook-button-apps></div>\r\n      <div class=\"item2\"><storybook-button-apps application=\"WebRT\" label=\"Continue\" type=\"button\" [isDisabled]=\"!profileApps?.realtime\"\r\n        id=\"openNewWebRTTab\" (click)='this.openNewTabForApp.emit([\"ACCREALTIME\",\"/accRealTime/\"])' ></storybook-button-apps></div>\r\n      <div class=\"item3\"><storybook-button-apps application=\"Script-Designer\" label=\"Continue\" type=\"button\" [isDisabled]=\"!profileApps?.scriptDesigner\"\r\n        id=\"openNewGccsTab\" (click)='this.openNewTabForApp.emit([\"GCCS\",\"/accGCCS/\"])' ></storybook-button-apps></div>\r\n      <div class=\"item4\"><storybook-button-apps application=\"Admin\" label=\"Continue\" type=\"button\" [isDisabled]=\"!profileApps?.admin\"\r\n        ></storybook-button-apps></div>\r\n      <div class=\"item5\"><storybook-button-apps application=\"Aeonix-Admin\" label=\"Continue\" type=\"button\" [isDisabled]=\"!profileApps?.aeonixAdmin\"\r\n        id=\"openNewGccsTab2\" (click)='this.openNewTabForApp.emit([\"GCCS\",\"/accGCCS/\"])' ></storybook-button-apps></div>\r\n    </div>\r\n\r\n\r\n\r\n  </div>\r\n</div>\r\n\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { StoryInput } from \"../inputs/story-input.model\";\r\nimport { AuthService } from '../../app/_services/auth.service';\r\nimport {MdbModalRef} from \"mdb-angular-ui-kit/modal\";\r\n//import {Profile2Expose} from \"src/app/profile2/profile2.interface\";\r\n\r\nexport interface Profile2Expose {\r\n  agent: boolean;\r\n  realtime: boolean;\r\n  scriptDesigner: boolean;\r\n  admin: boolean;\r\n  aeonixAdmin: boolean;\r\n}\r\n\r\nexport interface AeonixAppCenterForm {\r\n  username: null, //new FormControl('ea2', Validators.min(2)),\r\n  password: null  //new FormControl('zaqwsx', Validators.min(2))\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-app-menu',\r\n  templateUrl: './app-menu.component.html',\r\n  styleUrls: ['./app-menu.css'],\r\n})\r\nexport class AppMenuComponent implements OnInit {\r\n\r\n  /*form: AeonixAppCenterForm = {\r\n    username: null,     //new FormControl('ea2', Validators.min(2)),\r\n    password: null      //new FormControl('zaqwsx', Validators.min(2))\r\n  };*/\r\n\r\n\r\n\r\n  @Input() formService!: AuthService;\r\n\r\n  credentials: any = {\r\n    username: null,\r\n    password: null\r\n  };\r\n\r\n  isLoginFailed = false;\r\n  loginErrorMessage = '';\r\n\r\n  openReplacePassword() {\r\n    //this.replacePassFormService.open(ReplacePassForm2Component);\r\n  }\r\n\r\n  constructor() {\r\n    this.validationForm = new FormGroup({\r\n      username: new FormControl('Telecom2', Validators.minLength(2)),\r\n      //email: new FormControl(null, Validators.email),\r\n      password: new FormControl('T@diran2022', Validators.minLength(2)),\r\n      //phone: new FormControl(null, Validators.pattern(new RegExp(\"[0-9 ]{12}\")))\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * Component property to define ordering of tasks\r\n   */\r\n  storyInputsInOrder: StoryInput[] = [];\r\n\r\n  validationForm: FormGroup;\r\n\r\n  @Input() isLoggedIn = false;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onPinInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onArchiveInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() openNewWinForApp = new EventEmitter<any>();\r\n\r\n  @Output() openNewTabForApp = new EventEmitter<any>();\r\n\r\n  @Input() profileApps?: any;\r\n\r\n  @Input() isLoading: boolean = false;\r\n\r\n\r\n  @Input()\r\n  set storyInputs(arr: StoryInput[]) {\r\n    const initialTasks = [\r\n      ...arr.filter(t => t.state === 'USER NAME'),\r\n      ...arr.filter(t => t.state !== 'USER NAME'),\r\n    ];\r\n    const filteredTasks = initialTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME'\r\n    );\r\n    this.storyInputsInOrder = filteredTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME'\r\n    );\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.warn('Login Request!');\r\n    this.credentials.username=this.validationForm.get('username')?.value;\r\n    this.credentials.password=this.validationForm.get('password')?.value;\r\n\r\n    this.openNewWinForApp.emit(this.credentials);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  get userName(): AbstractControl {\r\n    return this.validationForm.get('username')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.validationForm.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.validationForm.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.validationForm.get('phone')!;\r\n  }\r\n\r\n\r\n}\r\n\r\n","\r\n<div [twPopover] = \"this.popover\" header=\"{{this.header}}\" [bubbleOn]=\"this.isNotify\" (actionButton)=\"this.actionButton.emit($event)\">\r\n<!-- a (mouseover)=\"popover.show()\" (mouseleave)=\"popover.hide()\"\r\n   class=\"form-check-label white-text\"   mdbPopoverTitle=\"Account recovery\" #popover=\"mdbPopover\"\r\n   mdbPopover=\"To help keep your account safe, we will make sure that it’s really you trying to sign in\">\r\n</a\r\n  Forgot password?-->\r\n\r\n\r\n<button class=\"main\" highlight=\"blue\" colorName=\"blue\"\r\n        type=\"button\"\r\n        (click)=\"onClick.emit($event)\"\r\n        [ngClass]=\"classes\"\r\n        [ngStyle]=\"{ 'background-color': backgroundColor }\">\r\n\r\n  <div class=\"circle\">\r\n\r\n    <img src=\"./assets/images/ProfileIcon-70.svg\" srcset=\"./assets/images/ProfileIcon-70@2x.png, ./assets/images/ProfileIcon-70@3x.png\"\r\n         class=\"Avatar-Icon\"  alt=\"profile-image\">\r\n\r\n  </div>\r\n  <storybook-button-exclamation-mark  *ngIf=\"this.isNotify\" class=\"exclamation-mark\" size=\"small\" ></storybook-button-exclamation-mark>\r\n  <div class=\"Avatar-Label\"><a class=\"font\">{{ label }}</a></div>\r\n</button>\r\n\r\n</div>\r\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n} from '@angular/core';\nimport {PopoverOptions} from \"../directive/popover.interface\";\nimport {ActionAvatarComponent} from \"../actions/action-avatar/action-avatar.component\";\n/**/\n@Component({\n  selector: 'storybook-avatar',\n  templateUrl: './avatar.component.html',\n  styleUrls: ['./avatar.scss'],\n})\nexport  class AvatarComponent {\n  popover: PopoverOptions = {\n    content: ActionAvatarComponent\n  };\n\n\n  @Output() actionButton: EventEmitter<any> = new EventEmitter<any> ();\n\n  /**\n   * Header contents\n   *\n   * @required\n   */\n  @Input()\n  header? = 'header';\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  isNotify: boolean = false;\n\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-avatar--primary' : 'storybook-avatar--secondary';\n\n    return ['storybook-avatar', `storybook-avatar--${this.size}`, mode];\n  }\n\n  ngOnInit(): void {\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-apps',\n  templateUrl: './button-apps.component.html',\n  styleUrls: ['./button-apps.component.scss']\n})\nexport class ButtonAppsComponent {\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  isDisabled: boolean = false;\n\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * What application should the button linked to?\n   */\n  @Input()\n  application: 'Agent' | 'WebRT' | 'Script-Designer' | 'Admin' | 'Aeonix-Admin' = 'Admin';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-apps--primary' : 'storybook-button-apps--secondary';\n\n    return ['storybook-button-apps', `storybook-button-apps--${this.application}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<button id=\"button-apps\" class=\"container\"  [disabled]=\"isDisabled\"  >\n<div id=\"circle\" class=\"circle\"   >\n\n<img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n   src=\"./assets/images/{{application?.toString()}}.png\" class=\"Apps-Button-Icon center\"  alt=\"apps-button-icon\"/>\n</div>\n\n<div class=\"Button-App-Label \">\n  <div class=\"center mfont\">\n\n    {{ application.toString() }}\n\n  </div>\n</div>\n\n</button>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-continue',\n  templateUrl: './button-continue.component.html',\n  /*template: `<div class=\"storybook-button-continue\">\n    <img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n         src=\"./assets/images/img_2.png\" class=\"Language-Desktop-Icon\"  alt=\"form-desktop-icon\"/>\n  </div>`,*/\n  styleUrls: ['./button-continue.component.scss'],\n})\nexport class ButtonContinueComponent {\n\n  /**\n   * Is this gallery attribute are set?\n   */\n  @Input()\n  gallery = false;\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Continue';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-continue--primary' : 'storybook-button-continue--secondary';\n    const galleryMode = this.gallery ? 'storybook-button-continue--set-in' : 'storybook-button-continue--set-out';\n\n    return ['storybook-button-continue', `storybook-button-continue--${this.size}`, mode, galleryMode];\n  }\n\n\n}\n","<button id=\"login-button\" class=\"login-button\" (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\" >\n{{label}}\n</button>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-ex',\n  templateUrl: './button-ex.component.html',\n  styleUrls: ['./button-ex.component.css']\n})\nexport class ButtonExComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-ex--primary' : 'storybook-button-ex--secondary';\n\n    return ['storybook-button-ex', `storybook-button-ex--${this.size}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<button class=\"Vector\" (click)=\"onClick.emit($event)\" >\n\n    <img  [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n       src=\"./assets/images/x_close.png\"\n           class=\"Ex-Icon\"  alt=\"Ex-Icon\"/>\n\n</button>\n\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-exclamation-mark',\n  templateUrl: './button-exclamation-mark.component.html',\n  styleUrls: ['./button-exclamation-mark.component.scss']\n})\nexport class ButtonExclamationMarkComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-exclamation-mark--primary' : 'storybook-button-exclamation-mark--secondary';\n\n    return ['storybook-button-exclamation-mark', `storybook-button-exclamation-mark--${this.size}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"button-exclamation-mark\" class=\"container\">\n<div id=\"button-exclamation-mark-circle\" class=\"circle\" (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\">\n\n<img\n     src=\"./assets/images/Exclamation.png\" class=\"Exclamation-Mark-Icon center\" alt=\"exclamation-mark-button-icon\"/>\n</div>\n\n\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-fortest',\n  template: ` <p >Highlight Directive</p>\n    <button highlight=\"blue\" colorName=\"blue\"\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button-fortest.css'],\n})\nexport  class ButtonFortestComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[highlight]',\r\n})\r\nexport class HighlightDirective {\r\n  constructor(private eleRef: ElementRef) {}\r\n\r\n  @Input() highlight: any;\r\n  @Input() colorName: any;\r\n\r\n\r\n  @HostListener('mouseover') onMouseOver() {\r\n    this.eleRef.nativeElement.style.color = this.colorName;\r\n  }\r\n  @HostListener('mouseleave') onMouseLeave() {\r\n    this.eleRef.nativeElement.style.color = 'black';\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-globe',\n  templateUrl: './button-globe.component.html',\n  styleUrls: ['./button-globe.component.css']\n})\nexport class ButtonGlobeComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-tadiran--primary' : 'storybook-button-tadiran--secondary';\n\n    return ['storybook-button-tadiran', `storybook-tadiran-icon--${this.size}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"Vector\">\n<img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n   src=\"./assets/images/GlobeIcon.png\" class=\"Language-Desktop-Icon\"  alt=\"form-desktop-icon\"/>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-language',\n  templateUrl: './button-language.component.html',\n  styleUrls: ['./button-language.component.css']\n})\nexport class ButtonLanguageComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-form--primary' : 'storybook-button-form--secondary';\n\n    return ['storybook-button-form', `storybook-language-icon--${this.size}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"Vector\">\n<img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n   src=\"./assets/images/language-desktop-icon.png\"\n       srcset=\"./assets/images/language-desktop-icon@2x.png 2x,\n             /assets/images/language-desktop-icon@3x.png 3x\"\n       class=\"Language-Desktop-Icon\"  alt=\"form-desktop-icon\"/>\n\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-successfully',\n  templateUrl: './button-successfully.component.html',\n  styleUrls: ['./button-successfully.component.css']\n})\nexport class ButtonSuccessfullyComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-successfully--primary' : 'storybook-button-successfully--secondary';\n\n    return ['storybook-button-successfully', `storybook-button-successfully--${this.size}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"button-successfully\" class=\"container\">\n<div class=\"circle\">\n\n<img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n     src=\"./assets/images/Vee.png\" class=\"Vee-Icon center\" alt=\"successfully-button-icon\"/>\n</div>\n\n\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-tadiran',\n  /*templateUrl: './button-continue.component.html',*/\n  template: `<div class=\"storybook-button-tadiran\">\n    <img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n         src=\"./assets/images/img_2.png\" class=\"Language-Desktop-Icon\"  alt=\"language-desktop-icon\"/>\n  </div>`,\n  styleUrls: ['./button-tadiran.component.scss'],\n})\nexport class ButtonTadiranComponent {\n\n  /**\n   * Is this gallery attribute are set?\n   */\n  @Input()\n  gallery = false;\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-tadiran--primary' : 'storybook-button-tadiran--secondary';\n    const galleryMode = this.gallery ? 'storybook-button-tadiran--set-in' : 'storybook-button-tadiran--set-out';\n\n    return ['storybook-button-tadiran', `storybook-button-tadiran--${this.size}`, mode, galleryMode];\n  }\n\n\n}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.css']\r\n})\r\nexport default class CardComponent  {\r\n\r\n\r\n\r\n  /**\r\n   * Is this the principal call to action on the login-main?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large'  = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-card--primary' : 'storybook-card--secondary';\r\n\r\n    return ['storybook-card', `storybook-card--${this.size}`, mode];\r\n  }\r\n\r\n\r\n\r\n}\r\n","\r\n  <div class=\"card\">\r\n\r\n  </div>\r\n\r\n\r\n","<div class=\"tooltip\" [ngClass]=\"{'tooltip-display' : show}\">\r\n  <!--button (click)=\"loadCarComponent()\">Load Car Component</button-->\r\n  <span *ngIf=\"!isDynamic\">{{popover}}</span>\r\n  <ng-template    appDynamicComp>\r\n  </ng-template>\r\n\r\n</div>\r\n\r\n","import {\r\n  Component,\r\n  Input,\r\n  ViewChild,\r\n  OnInit,\r\n  AfterViewInit,\r\n  ComponentFactoryResolver,\r\n  ChangeDetectionStrategy,\r\n  ApplicationRef,\r\n  Output,\r\n  EventEmitter,\r\n  Type, ComponentRef\r\n} from '@angular/core';\r\nimport { DynamicCompDirective } from '../dynamic-comp.directive';\r\nimport { PopoverOptions } from '../popover.interface'\r\nimport {ActionAvatarComponent} from \"src/stories/actions/action-avatar/action-avatar.component\";\r\n\r\n\r\n@Component({\r\n  selector: 'bubble-avatar',\r\n    templateUrl: './bubble-avatar.component.html',\r\n  styleUrls: ['./bubble-avatar.component.scss']\r\n})\r\nexport class BubbleAvatarComponent implements OnInit, AfterViewInit{\r\n  @Input() display: any;\r\n  @Input() popover: any;\r\n  @Input() bubbleOn?: boolean;\r\n  @Input() header?: string;\r\n  @Input()  options?: PopoverOptions;\r\n  show: boolean = false;\r\n  isDynamic: boolean = false;\r\n  @ViewChild(DynamicCompDirective, {static: true}) content!: DynamicCompDirective;\r\n  @Output() triggerDetectionChange: EventEmitter<void> = new EventEmitter<void> ();\r\n  @Output() actionButton: EventEmitter<any> = new EventEmitter<any> ();\r\n  actionAvatarComponentRef?: ComponentRef<any>;\r\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    if (this.options && typeof this.options.content !== \"string\") {\r\n      this.isDynamic = true;\r\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(<Type<any>>this.options.content);\r\n      const viewContainerRef = this.content.viewContainerRef;\r\n      viewContainerRef.clear();\r\n      this.actionAvatarComponentRef = viewContainerRef.createComponent(componentFactory);\r\n      this.actionAvatarComponentRef.instance.setHeader(this.header);\r\n      this.actionAvatarComponentRef.instance.setBubbleOn(this.bubbleOn);\r\n      this.actionAvatarComponentRef.instance.actionButton.subscribe(($event: any) => {\r\n        this.actionButton.emit($event);\r\n        console.log(\"Click: Change it now\");\r\n      });\r\n    }\r\n  }\r\n  ngAfterViewInit(): void {}\r\n\r\n  showPopup() {\r\n    if (this.bubbleOn) {\r\n      this.show = true;\r\n      this.triggerDetectionChange.emit();\r\n    }\r\n  }\r\n\r\n  hidePopup() {\r\n    this.show = false;\r\n    this.triggerDetectionChange.emit();\r\n  }\r\n\r\n  setHeader(header: string) {\r\n    this.header = header;\r\n    this.actionAvatarComponentRef?.instance.setHeader(this.header);\r\n  }\r\n\r\n  setBubbleOn(bubbleOn: boolean) {\r\n    this.bubbleOn = bubbleOn;\r\n  }\r\n\r\n  loadCarComponent(){\r\n    const _viewContainerRef = this.content.viewContainerRef;\r\n\r\n    //removes all views in that container\r\n    _viewContainerRef.clear();\r\n\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(<Type<any>>this.options?.content);\r\n\r\n    //Create an instance of the component\r\n    const carComponentRef = _viewContainerRef.createComponent<ActionAvatarComponent>(componentFactory);\r\n/*\r\n    //Pass data to the component\r\n    carComponentRef.instance.image = 'https://images.unsplash.com/photo-1494976388531-d1058494cdd8?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80';\r\n*/\r\n  }\r\n}\r\n","import {\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Directive,\r\n  ElementRef, EventEmitter,\r\n  HostListener,\r\n  Input, Output,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { PopoverOptions } from '../popover.interface';\r\nimport {BubbleAvatarComponent} from \"./bubble-avatar.component\";\r\n\r\n@Directive({\r\n  selector: '[twPopover]',\r\n})\r\nexport class PopoverDirective {\r\n  @Input(\"twPopover\") popover?: PopoverOptions;\r\n\r\n  popoverComponentRef?: ComponentRef<BubbleAvatarComponent>;\r\n  @HostListener('mouseover', ['$event']) onMouseOver($event: any){\r\n    this.popoverComponentRef?.instance.setHeader(this.header);\r\n    this.popoverComponentRef?.instance.setBubbleOn(this.bubbleOn);\r\n    this.popoverComponentRef?.instance.showPopup();\r\n    //this.eleRef.nativeElement.style.color = 'blue';\r\n  }\r\n\r\n  @HostListener('mouseleave', ['$event']) onLeave($event: any){\r\n    this.popoverComponentRef?.instance.hidePopup();\r\n  }\r\n\r\n  @HostListener('click', ['$event']) onClick($event: any){\r\n    this.popoverComponentRef?.instance.setHeader(this.header);\r\n    this.popoverComponentRef?.instance.setBubbleOn(this.bubbleOn);\r\n    this.popoverComponentRef?.instance.showPopup();\r\n  }\r\n\r\n\r\n\r\n\r\n  constructor(private eleRef: ElementRef,\r\n              private el: ElementRef,\r\n              private viewContainer: ViewContainerRef,\r\n              private componentFactoryResolver: ComponentFactoryResolver) {}\r\n\r\n  @Input() highlight: any;\r\n  @Input() header: string = '';\r\n  @Input() bubbleOn: boolean = false;\r\n  @Output() actionButton: EventEmitter<any> = new EventEmitter<any> ();\r\n  @Output() avatarButton: EventEmitter<any> = new EventEmitter<any> ();\r\n\r\n\r\n/*\r\n  @HostListener('mouseover') onMouseOver() {\r\n    this.popoverComponentRef?.instance.showPopup();\r\n    this.eleRef.nativeElement.style.color = this.colorName;\r\n  }*/\r\n\r\n\r\n  ngOnInit(): void {\r\n    const factory =  this.componentFactoryResolver.resolveComponentFactory(BubbleAvatarComponent);\r\n\r\n    const comp = factory.create(this.viewContainer.injector);\r\n    comp.instance.display = \"I test some content\";\r\n    comp.instance.popover = this.popover?.content;\r\n    comp.instance.options = this.popover;\r\n    comp.instance.header = this.header;\r\n    comp.instance.bubbleOn = this.bubbleOn;\r\n\r\n    this.popoverComponentRef = comp;\r\n    this.el.nativeElement.classList.add(\"wrapper\");\r\n    this.el.nativeElement.appendChild(comp.location.nativeElement);\r\n\r\n    comp.hostView.detectChanges();\r\n\r\n    comp.instance.triggerDetectionChange.subscribe(() =>  {\r\n      comp.hostView.detectChanges();\r\n    });\r\n\r\n    comp.instance.actionButton.subscribe(($event: any) => {\r\n      this.actionButton.emit($event);\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"tooltip\" [ngClass]=\"{'tooltip-display' : show}\">\r\n  <!--button (click)=\"loadCarComponent()\">Load Car Component</button-->\r\n  <span *ngIf=\"!isDynamic\">{{popover}}</span>\r\n  <ng-template appDynamicComp>\r\n  </ng-template>\r\n\r\n</div>\r\n\r\n","import {\r\n  Component,\r\n  Input,\r\n  ViewChild,\r\n  OnInit,\r\n  AfterViewInit,\r\n  ComponentFactoryResolver,\r\n  ChangeDetectionStrategy,\r\n  ApplicationRef,\r\n  Output,\r\n  EventEmitter,\r\n  Type, ComponentRef\r\n} from '@angular/core';\r\nimport { DynamicCompDirective } from '../dynamic-comp.directive';\r\nimport { PopoverOptions } from '../popover.interface'\r\nimport {ActionInputComponent} from \"src/stories/actions/action-input/action-input.component\";\r\nimport {ActionInput} from \"../../actions/action-input/action-input.interface\";\r\n\r\n\r\n@Component({\r\n  selector: 'bubble-input',\r\n    templateUrl: './bubble-input.component.html',\r\n  styleUrls: ['./bubble-input.component.scss']\r\n})\r\nexport class BubbleInputComponent implements OnInit, AfterViewInit{\r\n  @Input() display: any;\r\n  @Input() popover: any;\r\n  @Input() data?: ActionInput[];\r\n  @Input() header?: string;\r\n  @Input()  options?: PopoverOptions;\r\n  show: boolean = false;\r\n  isDynamic: boolean = false;\r\n  @ViewChild(DynamicCompDirective, {static: true}) content!: DynamicCompDirective;\r\n  @Output() triggerDetectionChange: EventEmitter<void> = new EventEmitter<void> ();\r\n  actionInputComponentRef?: ComponentRef<any>;\r\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    if (this.options && typeof this.options.content !== \"string\") {\r\n      this.isDynamic = true;\r\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(<Type<any>>this.options.content);\r\n      const viewContainerRef = this.content.viewContainerRef;\r\n      viewContainerRef.clear();\r\n      this.actionInputComponentRef = viewContainerRef.createComponent(componentFactory);\r\n      this.actionInputComponentRef.instance.setConditions(this.data);\r\n      this.actionInputComponentRef.instance.setHeader(this.header);\r\n    }\r\n\r\n  }\r\n  ngAfterViewInit(): void {}\r\n\r\n  showPopup() {\r\n    if (this.data != undefined && this.data?.length > 0) {\r\n      this.show = true;\r\n      this.triggerDetectionChange.emit();\r\n    }\r\n  }\r\n\r\n  hidePopup() {\r\n    this.show = false;\r\n    this.triggerDetectionChange.emit();\r\n  }\r\n\r\n  setData(data: ActionInput[]) {\r\n    this.data = data;\r\n    this.actionInputComponentRef?.instance.setConditions(this.data);\r\n  }\r\n\r\n  setHeader(header: string) {\r\n    this.header = header;\r\n    this.actionInputComponentRef?.instance.setHeader(this.header);\r\n  }\r\n\r\n  /*   loadCarComponent(){\r\n     const _viewContainerRef = this.content.viewContainerRef;\r\n\r\n     //removes all views in that container\r\n     _viewContainerRef.clear();\r\n\r\n     const componentFactory = this.componentFactoryResolver.resolveComponentFactory(<Type<any>>this.options?.content);\r\n\r\n     //Create an instance of the compo\r\n     /*    const carComponentRef = _viewContainerRef.createComponent<ActionInputComponent>(componentFactory);\r\n\r\n         //Pass data to the component\r\n         carComponentRef.instance.image = 'https://images.unsplash.com/photo-1494976388531-d1058494cdd8?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80';\r\n\r\n   }*/\r\n}\r\n","import {\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Directive,\r\n  ElementRef,\r\n  HostListener,\r\n  Input,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { PopoverOptions } from '../popover.interface';\r\nimport {BubbleInputComponent} from \"./bubble-input.component\";\r\nimport {ActionInput} from \"../../actions/action-input/action-input.interface\";\r\n\r\n@Directive({\r\n  selector: '[inputPopover]',\r\n})\r\nexport class PopoverInputDirective {\r\n  @Input(\"inputPopover\") popover?: PopoverOptions;\r\n\r\n  popoverComponentRef?: ComponentRef<BubbleInputComponent>;\r\n  @HostListener('mouseover', ['$event']) onMouseOver($event: any){\r\n    this.popoverComponentRef?.instance.showPopup();\r\n    //this.eleRef.nativeElement.style.color = 'blue';\r\n  }\r\n\r\n  @HostListener('mouseleave', ['$event']) onLeave($event: any){\r\n    this.popoverComponentRef?.instance.hidePopup();\r\n  }\r\n\r\n  @HostListener('click', ['$event']) onClick($event: any){\r\n    this.popoverComponentRef?.instance.showPopup();\r\n  }\r\n\r\n  @HostListener('keyup', ['$event']) onDataChange($event: any) {\r\n    this.popoverComponentRef?.instance.setData(this.data!);\r\n    this.popoverComponentRef?.instance.showPopup();\r\n  }\r\n\r\n\r\n  constructor(private eleRef: ElementRef,\r\n              private el: ElementRef,\r\n              private viewContainer: ViewContainerRef,\r\n              private componentFactoryResolver: ComponentFactoryResolver) {}\r\n\r\n  @Input() highlight: any;\r\n  @Input() data?: ActionInput[] | undefined;\r\n  @Input() header?: string = '';\r\n\r\n/*\r\n  @HostListener('mouseover') onMouseOver() {\r\n    this.popoverComponentRef?.instance.showPopup();\r\n    this.eleRef.nativeElement.style.color = this.colorName;\r\n  }*/\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    const factory =  this.componentFactoryResolver.resolveComponentFactory(BubbleInputComponent);\r\n\r\n    const comp = factory.create(this.viewContainer.injector);\r\n    comp.instance.display = \"I test some content\";\r\n    comp.instance.popover = this.popover?.content;\r\n    comp.instance.options = this.popover;\r\n    comp.instance.data = this.data;\r\n    comp.instance.header = this.header;\r\n\r\n    this.popoverComponentRef = comp;\r\n    this.el.nativeElement.classList.add(\"wrapper\");\r\n    this.el.nativeElement.appendChild(comp.location.nativeElement);\r\n\r\n    comp.hostView.detectChanges();\r\n\r\n    comp.instance.triggerDetectionChange.subscribe(() =>  {\r\n      comp.hostView.detectChanges();\r\n    });\r\n  }\r\n\r\n}\r\n","import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appDynamicComp]'\r\n})\r\nexport class DynamicCompDirective {\r\n\r\n  constructor(public viewContainerRef: ViewContainerRef) {}\r\n\r\n}\r\n","\r\n\r\n\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <storybook-card class=\"card-container\"></storybook-card>\r\n  <div  class=\"h-100 d-flex align-items-center justify-content-center\">\r\n    <div class=\"form-header\">\r\n      <a>Aeonix App Center</a>\r\n    </div>\r\n\r\n    <br>\r\n    <!--form name=\"form\"  (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate --> <!-- *ngIf=\"!isRegSuccess\"-->\r\n      <form name=\"currentForm\"   [formGroup]=\"mForm\">\r\n      <div  *ngIf=\"!isLoggedIn\" class=\"Vector\">\r\n\r\n        <div class=\"login-button\">\r\n\r\n            <div *ngIf=\"isLoggedIn\">isRegSuccess</div>\r\n            <div *ngIf=\"!isLoggedIn && storyInputsInOrder.length === 0\">empty</div>\r\n            <storybook-input\r\n              [storyInput]=\"storyInputsInOrder[0]\"\r\n              (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n              (onPinInput)=\"onPinInput.emit($event)\"\r\n              [currentForm]=\"mForm\">\r\n            </storybook-input>\r\n\r\n            <storybook-input\r\n              [storyInput]=\"storyInputsInOrder[1]\"\r\n              (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n              (onPinInput)=\"onPinInput.emit($event)\"\r\n              [currentForm]=\"mForm\">\r\n            </storybook-input>\r\n\r\n\r\n            <br>\r\n            <div class=\"thematic-break\"></div>\r\n            <div class=\"login-failed-message\" role=\"alert\" >\r\n              <p *ngIf=\"isLoginFailed\">*  {{ loginErrorMessage | apiErrorMessage: param }}</p>\r\n            </div>\r\n\r\n\r\n            <a (click)=\"openReplacePassword()\" class=\"forgot-password\"  href=\"#/login\" >\r\n              {{ 'Forgot password?'  }}\r\n            </a>\r\n\r\n            <storybook-button-continue size=\"medium\" label=\"Continue \" type=\"button\" (click)=\"onSubmit()\" ></storybook-button-continue>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n","import {Component, ElementRef, EventEmitter, Input, OnInit, Output, Renderer2, ViewChild} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { StoryInput } from \"../../inputs/story-input.model\";\r\nimport { AuthService } from '../../../app/_services/auth.service';\r\n//import {ApiErrorMessageService} from \"../../../app/storybook/pipes/api-error-message.service\";\r\n//import {ApiErrorMessageService} from \"../../../app/storybook/pipes/api-error-message.service\";\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-login-form',\r\n  templateUrl: './login-form-component.html',\r\n  styleUrls: ['./login-form.css'],\r\n})\r\nexport default class LoginFormComponent implements OnInit {\r\n\r\n\r\n  param = {language: 'login-main'};\r\n\r\n  @Input() formService!: AuthService;\r\n\r\n\r\n  @Input() isLoginFailed = false;\r\n  @Input() loginErrorMessage = '';\r\n\r\n\r\n\r\n  openReplacePassword() {\r\n    //this.replacePassFormService.open(ReplacePassForm2Component);\r\n  }\r\n\r\n  constructor(/*private apiErrorMessage: ApiErrorMessageService*/) {\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * @ignore\r\n   * Component property to define ordering of tasks\r\n   */\r\n  storyInputsInOrder: StoryInput[] = [];\r\n\r\n  @Input() mForm: FormGroup = new FormGroup({}); /* = new FormGroup({\r\n  username: new FormControl('Telecom4', Validators.minLength(2)),\r\n  password: new FormControl('T@diran2022', Validators.minLength(2)),\r\n});*/\r\n\r\n/*\r\n  validationFormInOrder: { [p: string]: AbstractControl } =[];\r\n  @Input()\r\n  set registerForm(arr: FormGroup) {\r\n    this.validationFormInOrder = arr.controls\r\n  }*/\r\n\r\n  @Input() isLoggedIn = false;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onPinInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onArchiveInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() sendLoginReq = new EventEmitter();\r\n\r\n\r\n  @Input()\r\n  set storyInputs(arr: StoryInput[]) {\r\n    const initialTasks = [\r\n      ...arr.filter(t => t.state === 'USER NAME'),\r\n      ...arr.filter(t => t.state !== 'USER NAME'),\r\n    ];\r\n    const filteredTasks = initialTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME'\r\n    );\r\n    this.storyInputsInOrder = filteredTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME'\r\n    );\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.warn('Login Request!');\r\n\r\n    this.sendLoginReq.emit();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  get userName(): AbstractControl {\r\n    return this.mForm?.get('username')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.mForm?.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.mForm?.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.mForm?.get('phone')!;\r\n  }\r\n\r\n\r\n}\r\n\r\n","\r\n\r\n\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <storybook-card class=\"card-container\"></storybook-card>\r\n  <div  class=\"h-100 d-flex align-items-center justify-content-center\">\r\n    <storybook-button-ex id=\"button-ex\" (click)=\"this.clickXButton.emit()\" ></storybook-button-ex>\r\n    <div class=\"form-header\">\r\n      <a class=\"main-form-header\" #formHeader>Complete Registration</a>\r\n      <br>\r\n      <a *ngIf=\"!isRegSuccess\" class=\"sub-form-header\">complete the registration by filling the missing info:</a>\r\n\r\n    <br>\r\n    <!--form name=\"form\"  (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate --> <!-- *ngIf=\"!isRegSuccess\"-->\r\n      <form name=\"currentForm\"   [formGroup]=\"mForm\">\r\n      <div class=\"Vector\">\r\n\r\n\r\n        <div *ngIf=\"isRegSuccess\" id=\"button-successfully\" style=\"\">\r\n          <storybook-button-successfully   style=\"position: relative; margin-bottom: 50px;\"></storybook-button-successfully>\r\n        </div>\r\n\r\n        <div class=\"login-button\">\r\n            <div *ngIf=\"!isRegSuccess && storyInputsInOrder.length === 0\">empty</div>\r\n            <div *ngIf=\"!isRegSuccess\">\r\n              <storybook-input\r\n                [storyInput]=\"storyInputsInOrder[0]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\">\r\n              </storybook-input>\r\n              <storybook-input\r\n                [storyInput]=\"storyInputsInOrder[1]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\">\r\n              </storybook-input>\r\n              <storybook-input\r\n                [storyInput]=\"storyInputsInOrder[2]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\"\r\n                [conditionList]=\"['requiresPhone']\">\r\n              </storybook-input>\r\n              <storybook-input\r\n                [storyInput]=\"storyInputsInOrder[3]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\"\r\n                [conditionList]=\"['requiresEmail']\">\r\n              </storybook-input>\r\n              <!--storybook-input\r\n                *ngFor=\"let storyInput of storyInputsInOrder\"\r\n                [storyInput]=\"storyInput\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\">\r\n              </storybook-input-->\r\n            </div>\r\n\r\n            <div *ngIf=\"!isRegSuccess\" class=\"thematic-break\"></div>\r\n            <div class=\"login-failed-message\" role=\"alert\" >\r\n              <p *ngIf=\"isRegFailed\">*  {{ this.regErrorMessage['message'] | apiErrorMessage: param }}</p>\r\n            </div>\r\n\r\n            <storybook-button-continue [label]=\"isRegSuccess ? 'Continue' :'Complete Rgistration'\"  size=\"small\"\r\n                                       label=\"Continue\" type=\"button\" (click)=\"onSubmit()\" >\r\n            </storybook-button-continue>\r\n        </div>\r\n        </div>\r\n\r\n    </form>\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n","import {\r\n  AfterViewChecked,\r\n  Component, Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input, OnChanges,\r\n  OnInit,\r\n  Output,\r\n  QueryList,\r\n  Renderer2, SimpleChanges, ViewChild,\r\n  ViewChildren\r\n} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { StoryInput } from \"src/stories/inputs/story-input.model\";\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport {ApiErrorMessageService} from \"../../../app/storybook/pipes/api-error-message.service\";\r\n//import {BehaviorSubject} from \"rxjs\";\r\n//import {StoryInputComponent} from \"../../inputs/story-input.component\";\r\n\r\n/*\r\n@Directive({selector: 'storybook-input'})\r\nexport class StoryInput {\r\n  @Input() storyInput!: StoryInput;\r\n}\r\n*/\r\n@Component({\r\n  selector: 'storybook-registry-form',\r\n  templateUrl: './registry-form.component.html',\r\n  styleUrls: ['./registry-form.css'],\r\n})\r\nexport default class RegistryFormComponent implements OnInit, AfterViewChecked, OnChanges {\r\n\r\n/*\r\n  @ViewChild('storybook-input')\r\n  set mStoryInput(v: StoryInput) {\r\n    setTimeout(() => {\r\n      this.selectedPane = v.id;\r\n      console.log('this.selectedPane'+this.selectedPane.toString())\r\n    }, 30);\r\n  }\r\n  selectedPane: string = '';\r\n  shouldShow = true;\r\n  toggle() {\r\n    this.shouldShow = !this.shouldShow;\r\n  }\r\n*/\r\n\r\n  @Input() formService!: AuthService;\r\n\r\n  credentials: any = {\r\n    username: null,\r\n    password: null\r\n  };\r\n\r\n  @Input() isRegFailed = false;\r\n  @Input() regErrorMessage: any = {};\r\n\r\n  openReplacePassword() {\r\n    //this.replacePassFormService.open(ReplacePassForm2Component);\r\n  }\r\n\r\n  @ViewChild('formHeader', { static: false }) mainHeader?: ElementRef;\r\n  @ViewChild('storybook-input', { static: false }) storybookInput?: ElementRef;\r\n\r\n\r\n  param = {language: 'login-main'};\r\n\r\n  constructor(private renderer: Renderer2) {\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * Component property to define ordering of tasks\r\n   */\r\n  storyInputsInOrder: StoryInput[] = [];\r\n\r\n  @Input() mForm: FormGroup  = new FormGroup({});\r\n  /*username: new FormControl('', Validators.minLength(2)),\r\n  password: new FormControl('T@diran2022', Validators.minLength(2)),\r\n  email: new FormControl('', Validators.email),\r\n  phone: new FormControl(null, Validators.pattern(new RegExp(\"[0-9 ]{12}\")))*/\r\n\r\n  changeLog: string[] = [];\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.isRegSuccess) {\r\n      if (!changes.isRegSuccess.previousValue &&  changes.isRegSuccess.currentValue) {\r\n        console.warn('Register Request Succeeded!');\r\n        this.loadSuccessfullyLoggedIn();\r\n      }\r\n    }\r\n    /*if (changes.isRegFailed || changes.regErrorMessage) {\r\n      console.log('isRegFailed' + this.regErrorMessage['message'])\r\n    }*/\r\n  }\r\n\r\n\r\n\r\n  @Input() isRegSuccess = false;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onPinInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onArchiveInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() sendRegReq: EventEmitter<void> = new EventEmitter();\r\n\r\n  @Output() clickXButton: EventEmitter<void> = new EventEmitter();\r\n\r\n\r\n  @Input()\r\n  set storyInputs(arr: StoryInput[]) {\r\n    const initialTasks = [\r\n      ...arr.filter(t => t.state === 'USER NAME'),\r\n      ...arr.filter(t => t.state !== 'USER NAME'),\r\n    ];\r\n    const filteredTasks = initialTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME' || t.state === 'EMAIL' || t.state === 'PHONE NUMBER FOR AUTHENTICATION'\r\n    );\r\n    this.storyInputsInOrder = filteredTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME' || t.state === 'EMAIL' || t.state === 'PHONE NUMBER FOR AUTHENTICATION');\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.warn('Registry Request Sent!');\r\n\r\n    //this.renderer.setAttribute(this.storybookInput?.nativeElement ,'hidden', 'true');\r\n    //this.renderer.setAttribute(this.mainHeader?.nativeElement ,'hidden', 'true');\r\n    //this.renderer.setProperty(this.mainHeader?.nativeElement ,'innerHTML','You have successfully complete your registeration!');\r\n\r\n\r\n    //this.renderer.setAttribute(this.storybookInput?.nativeElement ,'innerHTML','true');\r\n    this.sendRegReq.emit();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n  get userName(): AbstractControl {\r\n    return this.mForm?.get('username')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.mForm?.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.mForm?.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.mForm?.get('phone')!;\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    //console.log(this.childComp?.length)\r\n  }\r\n\r\n  loadSuccessfullyLoggedIn(){\r\n    this.renderer.setProperty(this.mainHeader?.nativeElement ,'innerHTML','You have successfully complete your registeration!');\r\n\r\n\r\n  }\r\n\r\n}\r\n\r\n","\r\n\r\n\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <storybook-card class=\"card-container\"></storybook-card>\r\n  <div  class=\"h-100 d-flex align-items-center justify-content-center\">\r\n    <storybook-button-ex id=\"button-ex\" (click)=\"this.clickXButton.emit()\" ></storybook-button-ex>\r\n    <div class=\"form-header\">\r\n      <a class=\"main-form-header\" #formHeader>Change Password</a>\r\n      <br>\r\n\r\n      <br>\r\n      <form name=\"currentForm\"   [formGroup]=\"mForm\">\r\n        <div class=\"Vector\">\r\n\r\n          <div *ngIf=\"status.isRepSuccess\" id=\"button-successfully\" style=\"\">\r\n            <storybook-button-successfully   style=\"position: relative; margin-bottom: 50px;\"></storybook-button-successfully>\r\n          </div>\r\n\r\n          <div class=\"login-button\">\r\n              <div *ngIf=\"!status.isRepSuccess && storyInputsInOrder.length === 0\">empty</div>\r\n              <div *ngIf=\"!status.isRepSuccess\">\r\n                <storybook-input\r\n                  [storyInput]=\"storyInputsInOrder[0]\"\r\n                  (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                  (onPinInput)=\"onPinInput.emit($event)\"\r\n                  [currentForm]=\"mForm\">\r\n                </storybook-input>\r\n\r\n                <div *ngIf=\"!status.isRepSuccess\" class=\"thematic-break\"></div>\r\n\r\n                <storybook-input\r\n                  [storyInput]=\"storyInputsInOrder[1]\"\r\n                  (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                  (onPinInput)=\"onPinInput.emit($event)\"\r\n                  [currentForm]=\"mForm\"\r\n                  [conditionList]=\"['minLength','requiresUppercase','requiresLowercase','requiresDigit','requiresSpecialChars']\">\r\n                </storybook-input>\r\n\r\n\r\n                <div></div>\r\n                <storybook-input\r\n                  [storyInput]=\"storyInputsInOrder[2]\"\r\n                  (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                  (onPinInput)=\"onPinInput.emit($event)\"\r\n                  [currentForm]=\"mForm\"\r\n                  [conditionList]=\"['minLength','requiresUppercase','requiresLowercase','requiresDigit']\">\r\n                </storybook-input>\r\n              </div>\r\n\r\n              <br>\r\n                <div class=\"login-failed-message\" role=\"alert\" >\r\n                  <table *ngIf=\"this.status?.isRepFailed\">\r\n                    <tr>{{ this.status?.repErrorMessage['message'] | apiErrorMessage: param }}</tr>\r\n                    <tr  *ngFor=\"let message of this.status?.repErrorMessage.data?.confirmPassword.split(', ')\">{{message.trim() | apiErrorMessage: param }}</tr>\r\n                  </table>\r\n                </div>\r\n              <storybook-button-continue [label]=\"status.isRepSuccess ? 'Continue' :'Change Password'\" size=\"small\"\r\n                                         label=\"Continue\" type=\"button\" (click)=\"onSubmit()\" >\r\n              </storybook-button-continue>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import {\r\n  AfterViewChecked,\r\n  Component, Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input, OnChanges,\r\n  OnInit,\r\n  Output,\r\n  QueryList,\r\n  Renderer2, SimpleChanges, ViewChild,\r\n  ViewChildren\r\n} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { StoryInput } from \"src/stories/inputs/story-input.model\";\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport {PopoverOptions} from \"../../directive/popover.interface\";\r\nimport {ActionInputComponent} from \"../../actions/action-input/action-input.component\";\r\n//import {BehaviorSubject} from \"rxjs\";\r\n//import {StoryInputComponent} from \"../../inputs/story-input.component\";\r\n\r\n/*\r\n@Directive({selector: 'storybook-input'})\r\nexport class StoryInput {\r\n  @Input() storyInput!: StoryInput;\r\n}\r\n*/\r\n@Component({\r\n  selector: 'storybook-replace-pass-form',\r\n  templateUrl: './replace-pass-form.component.html',\r\n  styleUrls: ['./replace-pass-form.css'],\r\n})\r\nexport default class ReplacePassFormComponent implements OnInit, AfterViewChecked, OnChanges {\r\n\r\n  popover: PopoverOptions = {\r\n    content: ActionInputComponent\r\n  };\r\n\r\n  param = {language: 'login-main'};\r\n\r\n\r\n\r\n\r\n\r\n  @Input() formService!: AuthService;\r\n\r\n  credentials: any = {\r\n    username: null,\r\n    password: null\r\n  };\r\n\r\n  @Input() isRepFailed = false;\r\n  @Input() repErrorMessage = '';\r\n\r\n  openReplacePassword() {\r\n    //this.replacePassFormService.open(ReplacePassForm2Component);\r\n  }\r\n\r\n  @ViewChild('formHeader', { static: false }) mainHeader?: ElementRef;\r\n  @ViewChild('storybook-input', { static: false }) storybookInput?: ElementRef;\r\n\r\n\r\n\r\n  constructor(private renderer: Renderer2) {\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * Component property to define ordering of tasks\r\n   */\r\n  storyInputsInOrder: StoryInput[] = [];\r\n\r\n  @Input() mForm: FormGroup  = new FormGroup({});\r\n  /*username: new FormControl('', Validators.minLength(2)),\r\n  password: new FormControl('T@diran2022', Validators.minLength(2)),\r\n  email: new FormControl('', Validators.email),\r\n  phone: new FormControl(null, Validators.pattern(new RegExp(\"[0-9 ]{12}\")))*/\r\n\r\n  changeLog: string[] = [];\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.isRegSuccess) {\r\n      if (!changes.isRegSuccess.previousValue &&  changes.isRegSuccess.currentValue) {\r\n        console.warn('Register Request Succeeded!');\r\n        this.loadSuccessfullyLoggedIn();\r\n      }\r\n    }\r\n  }\r\n\r\n  @Input() status?: any;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onPinInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onArchiveInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() sendRegReq: EventEmitter<void> = new EventEmitter();\r\n\r\n  @Output() clickXButton: EventEmitter<void> = new EventEmitter();\r\n\r\n\r\n  @Input()\r\n  set storyInputs(arr: StoryInput[]) {\r\n    const initialTasks = [\r\n      ...arr.filter(t => t.state === 'USER NAME'),\r\n      ...arr.filter(t => t.state !== 'USER NAME'),\r\n    ];\r\n    const filteredTasks = initialTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME' || t.state === 'EMAIL' || t.state === 'PHONE NUMBER FOR AUTHENTICATION'\r\n    );\r\n    this.storyInputsInOrder = filteredTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME' || t.state === 'EMAIL' || t.state === 'PHONE NUMBER FOR AUTHENTICATION');\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.warn('Registry Request Sent!');\r\n\r\n    //this.renderer.setAttribute(this.storybookInput?.nativeElement ,'hidden', 'true');\r\n    //this.renderer.setAttribute(this.mainHeader?.nativeElement ,'hidden', 'true');\r\n    //this.renderer.setProperty(this.mainHeader?.nativeElement ,'innerHTML','You have successfully complete your registeration!');\r\n\r\n\r\n    //this.renderer.setAttribute(this.storybookInput?.nativeElement ,'innerHTML','true');\r\n    this.sendRegReq.emit();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n  get userName(): AbstractControl {\r\n    return this.mForm?.get('username')!;\r\n  }\r\n\r\n  get oldPassword(): AbstractControl {\r\n    return this.mForm?.get('oldPassword')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.mForm?.get('password')!;\r\n  }\r\n\r\n  get confirmPassword(): AbstractControl {\r\n    return this.mForm?.get('confirmPassword')!;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  ngAfterViewChecked(): void {\r\n    //console.log(this.childComp?.length)\r\n  }\r\n\r\n  loadSuccessfullyLoggedIn(){\r\n    this.renderer.setProperty(this.mainHeader?.nativeElement ,'innerHTML','You have successfully changed your password!');\r\n  }\r\n\r\n}\r\n\r\n","<div id=\"parent3\"  [hidden]=\"storyInput?.hide\" [ngClass]=\"classes\"  >\r\n<div id=\"parent1\" >\r\n  <div class=\"main\"  [formGroup]=\"this.currentForm\">\r\n  <div>\r\n  <a class=\"user-name D-Caps-Regular\">{{storyInput?.state}}</a>\r\n\r\n  <br>\r\n  <label [attr.aria-label]=\"storyInput?.id + ''\" for=\"{{ storyInput?.title }}\" class=\"Vector2 \">\r\n    <img src=\"{{ storyInput?.icon }}\" class=\"icon-input\" alt=\"icon input userName\"  name=\"{{ storyInput?.title }}\" />\r\n    <div [inputPopover] = \"this.popover\" [data]=\"this.getErrorList(this.conditionList)\" [header]=\"this.getErrorHeader(storyInput.title)\">\r\n    <input type=\"{{storyInput?.type}}\" id=\"{{ storyInput?.id }}\" class=\"DanK203\"\r\n            name=\"{{storyInput?.title}}\" formControlName=\"{{storyInput?.title}}\" placeholder=\"{{storyInput?.placeholder}}\" required  />\r\n    </div>\r\n\r\n    <button *ngIf=\"this.isPasswordTextHide\" class=\"icon-input-showpass\" type=\"button\" (click)=\"showPassChange()\">\r\n      <img src=\"./assets/images/EyeIcon.png\" class=\"icon-input-showpass\" alt=\"icon input type\" />\r\n\r\n    </button>\r\n\r\n\r\n\r\n  <br>\r\n\r\n  <span hidden [ngSwitch]=\"storyInput?.title\" class=\"D-Caps-Regular\"  style=\"line-height: 0\" >\r\n      <span  class=\"position-absolute\"  *ngIf=\"formControler?.invalid && (formControler?.dirty || formControler?.touched)\"  >\r\n          <span *ngSwitchCase=\"'username'\"><br>{{storyInput?.state}} is required!</span>\r\n          <span *ngSwitchCase=\"'password'\">\r\n            <br>\r\n            {{storyInput?.state}} is required!\r\n            <!--div *ngIf=\"password.errors.required\">Password is required</div>\r\n            <div *ngIf=\"password.errors.minlength\">Password must be at least 1 characters</div-->\r\n          </span>\r\n          <span *ngSwitchCase=\"'email'\"   ><br>{{storyInput?.state}} is required!</span>\r\n          <span *ngSwitchCase=\"'phone'\"   ><br>{{storyInput?.state}} is required!</span>\r\n\r\n      </span>\r\n      <div   *ngIf=\"formControler?.valid && (formControler?.dirty || formControler?.touched)\">\r\n        <div *ngSwitchCase=\"'username'\">ok!</div>\r\n        <div *ngSwitchCase=\"'password'\">ok!</div>\r\n        <div *ngSwitchCase=\"'email'\"   >ok!</div>\r\n        <div *ngSwitchCase=\"'phone'\"   >ok!</div>\r\n      </div>\r\n\r\n </span>\r\n\r\n  </label>\r\n\r\n\r\n\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n<div id=\"parent2\"  *ngIf=\"storyInput?.state === 'NEW PASSWORD'\">\r\n  <div class=\"absolute\">\r\n    <storybook-pass-strength id=\"pass-strength\" [passwordToCheck]=\"password?.value\" ></storybook-pass-strength>\r\n  </div>\r\n</div>\r\n\r\n</div>\r\n","import {Component, EventEmitter, HostBinding, Inject, Injector, Input, OnInit, Output} from '@angular/core';\r\nimport { StoryInput } from './story-input.model'\r\nimport {\r\n  AbstractControl,\r\n  ControlValueAccessor,\r\n  FormControl,\r\n  FormGroup,\r\n  NG_VALIDATORS,\r\n  Validator,\r\n  Validators\r\n} from \"@angular/forms\";\r\nimport {PopoverOptions} from \"../directive/popover.interface\";\r\nimport {ActionInputComponent} from \"../actions/action-input/action-input.component\";\r\nimport {ActionInput} from \"../actions/action-input/action-input.interface\";\r\n\r\n\r\nexport interface GroupForm {\r\n  username:  FormControl,\r\n  password:  FormControl,\r\n}\r\n\r\nexport interface ValidationForm {\r\n  validationForm2: GroupForm,\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-input',\r\n  templateUrl: './story-input.component.html',\r\n  styleUrls: ['./story-input.scss']\r\n})\r\nexport class StoryInputComponent implements OnInit{\r\n\r\n\r\n\r\n  popover: PopoverOptions = {\r\n    content: ActionInputComponent\r\n  };\r\n\r\n  @Input() storyInput!: StoryInput;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onPinInput = new EventEmitter<Event>();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onArchiveInput = new EventEmitter<Event>();\r\n\r\n\r\n  @Input()\r\n  hideInput = false;\r\n\r\n  showPassChange(): void {\r\n    this.storyInput.type = (this.storyInput?.type == 'password' ? 'text' : 'password')\r\n  }\r\n\r\n  @Input() currentForm!: FormGroup;\r\n\r\n  private isStrength: string = (this.storyInput?.state === 'NEW PASSWORD') ? 'storybook-input--addStrength' : 'storybook-input--clearStrength';\r\n\r\n  public isPasswordTextHide: boolean = false;\r\n\r\n  @Input() conditionList: string[] = [];\r\n  /*registerForm = new FormGroup({\r\n    username: new FormControl('', Validators.minLength(2)),\r\n    password: new FormControl('zaqwsx', Validators.minLength(2))\r\n  });\r\n\r\n\r\n  get username2(): FormControl  {\r\n    return this.currentForm?.controls.username.get();\r\n  }*/\r\n\r\n  get username(): AbstractControl {\r\n    return this.currentForm.get('username')!;\r\n  }\r\n\r\n\r\n  get password(): AbstractControl {\r\n    return this.currentForm.get('password')!;\r\n  }\r\n\r\n  public getErrorHeader(controllerType: string): string {\r\n    let header: string = '';\r\n\r\n    switch (controllerType) {\r\n      case \"phone\":\r\n        header = 'Must contain phone:';\r\n        break;\r\n\r\n      case \"email\":\r\n        header = 'Must contain email:';\r\n        break;\r\n\r\n      case \"oldPassword\":\r\n      case \"confirmPassword\":\r\n      case \"password\":\r\n        header = 'The password must contain:';\r\n        break;\r\n\r\n      default:\r\n        header = controllerType;\r\n    }\r\n\r\n    return header;\r\n  }\r\n\r\n  public getErrorList(conditionList: String[]): ActionInput[] {\r\n\r\n    let passConditions: string[] = [];\r\n\r\n\r\n    var actionInputs: ActionInput[] = [];\r\n\r\n    conditionList.forEach(condition => {\r\n      switch (condition) {\r\n        case \"minLength\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"minLengthValid\",\r\n            \"presentingMessage\": ' A minimum of 8 characters',\r\n            \"isFulfilled\": !(this.minLengthValid || !(this.currentForm?.controls[\"password\"].value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresUppercase\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresUppercaseValid\",\r\n            \"presentingMessage\": ' At least 1 Uppercase letters',\r\n            \"isFulfilled\": !(this.requiresUppercaseValid || !(this.currentForm?.controls[\"password\"].value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresLowercase\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresLowercaseValid\",\r\n            \"presentingMessage\": ' At least 1 lowercase letters',\r\n            \"isFulfilled\": !(this.requiresLowercaseValid || !(this.currentForm?.controls[\"password\"].value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresDigit\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresDigitValid\",\r\n            \"presentingMessage\": ' A number',\r\n            \"isFulfilled\": !(this.requiresDigitValid || !(this.currentForm?.controls[\"password\"].value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresSpecialChars\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresSpecialCharsValid\",\r\n            \"presentingMessage\": ' At least 1 special character',\r\n            \"isFulfilled\": !(this.requiresSpecialCharsValid || !(this.currentForm?.controls[\"password\"].value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresEmail\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresEmailValid\",\r\n            \"presentingMessage\": ' A well-formed email address',\r\n            \"isFulfilled\": !(this.requiresEmailValid || !(this.currentForm?.controls[\"email\"].value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresPhone\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresPhoneValid\",\r\n            \"presentingMessage\": ' A well-formed phone number',\r\n            \"isFulfilled\": !(this.requiresPhoneValid || !(this.currentForm?.controls[\"email\"].value.length > 0))\r\n          })\r\n          break;\r\n      }\r\n    });\r\n\r\n\r\n    return actionInputs;\r\n  }\r\n\r\n  get passwordValid() {\r\n    return this.formControler.errors === null;\r\n  }\r\n\r\n  get requiredValid() {\r\n    return this.formControler.hasError(\"required\");\r\n  }\r\n\r\n  get minLengthValid() {\r\n    return this.formControler.hasError(\"minlength\");\r\n  }\r\n\r\n  get requiresDigitValid() {\r\n    return this.formControler.hasError(\"requiresDigit\");\r\n  }\r\n\r\n  get requiresUppercaseValid() {\r\n    return this.formControler.hasError(\"requiresUppercase\");\r\n  }\r\n\r\n  get requiresLowercaseValid() {\r\n    return this.formControler.hasError(\"requiresLowercase\") ;\r\n  }\r\n\r\n  get requiresSpecialCharsValid() {\r\n    return this.formControler.hasError(\"requiresSpecialChars\");\r\n  }\r\n\r\n  get requiresEmailValid() {\r\n    return this.formControler.hasError(\"email\");\r\n  }\r\n\r\n  get requiresPhoneValid() {\r\n    return this.formControler.hasError(\"requiresPhoneChars\");\r\n  }\r\n\r\n  get formControler(): AbstractControl {\r\n    return this.currentForm.get(this.storyInput?.title.toString())!;\r\n  }\r\n\r\n\r\n  /**\r\n   * Component method to trigger the onPin event\r\n   * @param id string\r\n   */\r\n  onPin(id: any) {\r\n    this.onPinInput.emit(id);\r\n  }\r\n  /**\r\n   * Component method to trigger the onArchive event\r\n   * @param id string\r\n   */\r\n  onArchive(id: any) {\r\n    this.onArchiveInput.emit(id);\r\n  }\r\n\r\n  public get classes(): string[] {\r\n    this.isStrength = (this.storyInput?.state === 'NEW PASSWORD') ? 'storybook-input--addStrength' : 'storybook-input--clearStrength';\r\n\r\n    return ['storybook-input-strength',  this.isStrength];\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.isPasswordTextHide = this.storyInput?.state.includes('PASSWORD');\r\n\r\n  }\r\n\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\n\n\n\n@Component({\n  selector: 'storybook-background1',\n  templateUrl: './background1Component.html',\n  styleUrls: ['./background1Component.scss']\n})\nexport default class Background1Component {\n\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = true;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  background?: string;\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Page2Component';\n\n  /*user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n\n  }*/\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-background1--primary' : 'storybook-background1--secondary';\n\n    return ['storybook-background1', mode];\n  }\n\n  constructor() {}\n\n\n\n\n}\n\n","\r\n<figure class=\"Desktop-1Login-1\"  [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': background }\" >\r\n  <!--div [ngStyle]=\"{ 'background-color': background }\" ></div-->\r\n  <img src=\"assets/images/icon-1.webp\" srcset=\"./assets/images/icon-1@2x.webp 2x, /assets/images/icon-1@3x.webp 3x\"\r\n       alt=\"icon-1\" />\r\n\r\n  <img src=\"assets/images/icon-2.webp\" srcset=\"./assets/images/icon-2@2x.webp 2x, /assets/images/icon-2@3x.webp 3x\"\r\n       class=\"icon-2  \" alt=\"icon-2fdf\" />\r\n\r\n\r\n</figure>\r\n\r\n<storybook-button-language size=\"large\"></storybook-button-language>\r\n<storybook-button-tadiran></storybook-button-tadiran>\r\n<storybook-button-globe></storybook-button-globe>\r\n","import {Component, OnChanges, Input, SimpleChange} from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-pass-strength',\r\n  templateUrl: './pass-strength.component.html',\r\n  styleUrls: ['./pass-strength.scss']\r\n})\r\nexport default class PassStrengthComponent implements OnChanges  {\r\n\r\n  /**\r\n   * Is this the principal call to action on the login-main?\r\n   */\r\n  @Input() primary: boolean = false;\r\n\r\n\r\n  /**\r\n   * The password strength in percentage.\r\n   */\r\n  @Input() strength: number = 0;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input() backgroundColor?: string;\r\n\r\n  /**\r\n   * The password to measure.\r\n   */\r\n  @Input() passwordToCheck?: string;\r\n\r\n  private static measureStrength(pass: string) {\r\n    let score = 0;\r\n    // award every unique letter until 5 repetitions\r\n    let letters: any = {};\r\n    for (let i = 0; i< pass.length; i++) {\r\n      letters[pass[i]] = (letters[pass[i]] || 0) + 1;\r\n      score += 5.0 / letters[pass[i]];\r\n    }\r\n    // bonus points for mixing it up\r\n    let variations: any = {\r\n      digits: /\\d/.test(pass),\r\n      lower: /[a-z]/.test(pass),\r\n      upper: /[A-Z]/.test(pass),\r\n      nonWords: /\\W/.test(pass),\r\n    };\r\n\r\n    let variationCount = 0;\r\n    for (let check in variations) {\r\n      variationCount += (variations[check]) ? 1 : 0;\r\n    }\r\n    score += (variationCount - 1) * 10;\r\n    return Math.trunc(score);\r\n  }\r\n\r\n  public strengthColor(strength: number) {\r\n\r\n    if (strength < 10) return 0;\r\n    if (strength < 20) return 10;\r\n    if (strength < 30) return 20;\r\n    if (strength < 40) return 30;\r\n    if (strength < 50) return 40;\r\n    if (strength < 60) return 50;\r\n    if (strength < 70) return 60;\r\n    if (strength < 90) return 70;\r\n    if (strength < 99) return 90;\r\n\r\n    return 100;\r\n  }\r\n\r\n  ngOnChanges(changes: {[propName: string]: SimpleChange}): void {\r\n    var password = changes['passwordToCheck'].currentValue;\r\n    if (password) {\r\n      this.strength = PassStrengthComponent.measureStrength(password);\r\n    }\r\n  }\r\n\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-pass-strength--primary' : 'storybook-pass-strength--secondary';\r\n\r\n    return ['storybook-pass-strength', `storybook-pass-strength--${this.strengthColor(this.strength)}`, mode];\r\n  }\r\n\r\n}\r\n\r\n","\r\n<div id=\"PassStrength\" [ngClass]=\"classes\"   class=\"storybook-pass-strength  \" >\r\n  <div class=\"center\"><a class=\"mfont\">Strength : {{this.strength?.toString()}}%</a>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-spinner1',\n  templateUrl: './spinner1.component.html',\n  styleUrls: ['./spinner1.component.css']\n})\nexport class Spinner1Component {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-ex--primary' : 'storybook-button-ex--secondary';\n\n    return ['storybook-button-ex', `storybook-button-ex--${this.size}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<button class=\"Vector\" (click)=\"onClick.emit($event)\" >\n\n    <img  [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n       src=\"./assets/images/Spinner1.gif\"\n           class=\"Ex-Icon\"  alt=\"Ex-Icon\"/>\n\n</button>\n\n","<div class=\"list-items\">\r\n  <storybook-task\r\n    *ngFor=\"let task of tasksInOrder\"\r\n    [task]=\"task\"\r\n    (onArchiveTask)=\"onArchiveTask.emit($event)\"\r\n    (onPinTask)=\"onPinTask.emit($event)\">\r\n  </storybook-task>\r\n  <div *ngIf=\"tasksInOrder.length === 0 && !loading\" class=\"wrapper-message\">\r\n    <span class=\"icon-check\"></span>\r\n    <p class=\"title-message\">You have no tasks</p>\r\n    <p class=\"subtitle-message\">Sit back and relax</p>\r\n  </div>\r\n  <div *ngIf=\"loading\">\r\n    <div *ngFor=\"let i of [1, 2, 3, 4, 5, 6]\" class=\"loading-item\">\r\n      <span class=\"glow-checkbox\"></span>\r\n      <span class=\"glow-text\">\r\n           <span>Loading</span> <span>cool</span> <span>state</span>\r\n         </span>\r\n    </div>\r\n  </div>\r\n</div>\r\n","\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Task } from '../task/task.model';\r\n\r\n@Component({\r\n  selector: 'app-task-list',\r\n  templateUrl: './task-list.component.html',\r\n})\r\nexport class TaskListComponent {\r\n\r\n  /**\r\n   * @ignore\r\n   * Component property to define ordering of tasks\r\n   */\r\n  tasksInOrder: Task[] = [];\r\n\r\n  @Input() loading = false;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onPinTask: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onArchiveTask: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Input()\r\n  set tasks(arr: Task[]) {\r\n    const initialTasks = [\r\n      ...arr.filter(t => t.state === 'TASK_PINNED'),\r\n      ...arr.filter(t => t.state !== 'TASK_PINNED'),\r\n    ];\r\n    const filteredTasks = initialTasks.filter(\r\n      t => t.state === 'TASK_INBOX' || t.state === 'TASK_PINNED'\r\n    );\r\n    this.tasksInOrder = filteredTasks.filter(\r\n      t => t.state === 'TASK_INBOX' || t.state === 'TASK_PINNED'\r\n    );\r\n  }\r\n}\r\n","<div class=\"list-item {{ task?.state }}\">\r\n  <label [attr.aria-label]=\"'archiveTask-' + task.id\" for=\"checked-{{ task?.id }}\" class=\"checkbox\">\r\n    <input\r\n      type=\"checkbox\"\r\n      disabled=\"true\"\r\n      [defaultChecked]=\"task?.state === 'TASK_ARCHIVED'\"\r\n      name=\"checked-{{ task?.id }}\"\r\n      id=\"checked-{{ task?.id }}\"\r\n    />\r\n    <span class=\"checkbox-custom\" (click)=\"onArchive(task.id)\"></span>\r\n  </label>\r\n  <label [attr.aria-label]=\"task.title + ''\" for=\"title-{{ task?.id }}\" class=\"title\">\r\n    <input type=\"text\" [value]=\"task.title\" readonly=\"true\" id=\"title-{{ task?.id }}\" name=\"title-{{ task?.id }}\" placeholder=\"Input title\"/>\r\n  </label>\r\n  <button *ngIf=\"task?.state !== 'TASK_ARCHIVED'\" class=\"pin-button\" [attr.aria-label]=\"'pinTask-' + task.id\" (click)=\"onPin(task.id)\">\r\n    <span class=\"icon-star\"></span>\r\n  </button>\r\n</div>\r\n\r\n\r\n<div class=\"list-item {{ task?.state }}\">\r\n  <label [attr.aria-label]=\"'archiveTask-' + task.id\" for=\"checked-{{ task?.id }}\" class=\"checkbox\">\r\n    <input\r\n      type=\"checkbox\"\r\n      disabled=\"true\"\r\n      [defaultChecked]=\"task?.state === 'TASK_ARCHIVED'\"\r\n      name=\"checked-{{ task?.id }}\"\r\n      id=\"checked-{{ task?.id }}\"\r\n    />\r\n    <span class=\"checkbox-custom\" (click)=\"onArchive(task.id)\"></span>\r\n  </label>\r\n  <label [attr.aria-label]=\"task.title + ''\" for=\"title-{{ task?.id }}\" class=\"title\">\r\n    <input type=\"text\" [value]=\"task.title\" readonly=\"true\" id=\"title-{{ task?.id }}\" name=\"title-{{ task?.id }}\" placeholder=\"Input title\"/>\r\n  </label>\r\n  <button *ngIf=\"task?.state !== 'TASK_ARCHIVED'\" class=\"pin-button\" [attr.aria-label]=\"'pinTask-' + task.id\" (click)=\"onPin(task.id)\">\r\n    <span class=\"icon-star\"></span>\r\n  </button>\r\n</div>\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { Task } from './task.model';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-task',\r\n  templateUrl: './task.component.html',\r\n  styleUrls: ['./task.css']\r\n})\r\nexport class TaskComponent {\r\n  @Input() task!: Task;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onPinTask = new EventEmitter<Event>();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onArchiveTask = new EventEmitter<Event>();\r\n\r\n  /**\r\n   * Component method to trigger the onPin event\r\n   * @param id string\r\n   */\r\n  onPin(id: any) {\r\n    this.onPinTask.emit(id);\r\n  }\r\n  /**\r\n   * Component method to trigger the onArchive event\r\n   * @param id string\r\n   */\r\n  onArchive(id: any) {\r\n    this.onArchiveTask.emit(id);\r\n  }\r\n}\r\n"]}