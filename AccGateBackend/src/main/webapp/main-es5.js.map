{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/_helpers/auth.interceptor.ts","webpack:///src/app/_services/auth.service.ts","webpack:///src/app/_services/token-storage.service.ts","webpack:///src/app/_services/user.service.ts","webpack:///src/app/_shared/event-bus.service.ts","webpack:///src/app/_shared/event.class.ts","webpack:///src/app/app-routing.guard.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.config.ts","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login2/login-main/forgot-pass-form2/forgot-pass-form2.component.ts","webpack:///src/app/login2/login-main/forgot-pass-form2/forgot-pass-form2.component.html","webpack:///src/app/login2/login-main/login-main.component.ts","webpack:///src/app/login2/login-main/login-main.component.html","webpack:///src/app/login2/login-main/register-form2/register-form2.component.ts","webpack:///src/app/login2/login-main/register-form2/register-form2.component.html","webpack:///src/app/login2/login-main/replace-pass-form2/replace-pass-form2.component.ts","webpack:///src/app/login2/login-main/replace-pass-form2/replace-pass-form2.component.html","webpack:///src/app/login2/login-main/reset-pass-form2/reset-pass-form2.component.ts","webpack:///src/app/login2/login-main/reset-pass-form2/reset-pass-form2.component.html","webpack:///src/app/login2/login-main/verification-form2/verification-form2.component.ts","webpack:///src/app/login2/login-main/verification-form2/verification-form2.component.html","webpack:///src/app/login2/login2-routing.module.ts","webpack:///src/app/login2/login2.module.ts","webpack:///src/app/login2/profile2/board-admin2/board-admin2.component.ts","webpack:///src/app/login2/profile2/board-admin2/board-admin2.component.html","webpack:///src/app/login2/profile2/board-admin/board-admin.component.html","webpack:///src/app/login2/profile2/board-admin/board-admin.component.ts","webpack:///src/app/login2/profile2/board-moderator/board-moderator.component.ts","webpack:///src/app/login2/profile2/board-moderator/board-moderator.component.html","webpack:///src/app/login2/profile2/board-user/board-user.component.ts","webpack:///src/app/login2/profile2/board-user/board-user.component.html","webpack:///src/app/login2/profile2/my-account-form2/my-account-form2.component.ts","webpack:///src/app/login2/profile2/my-account-form2/my-account-form2.component.html","webpack:///src/app/login2/profile2/portal/portal.component.ts","webpack:///src/app/login2/profile2/portal/portal.component.html","webpack:///src/app/login2/profile2/profile2-routing.module.ts","webpack:///src/app/login2/profile2/profile2.module.ts","webpack:///src/app/pipes/api-error-message.pipe.ts","webpack:///src/app/pipes/login-error-message.pipe.ts","webpack:///src/app/storybook/pipes/api-error-message.pipe.ts","webpack:///src/app/storybook/pipes/api-error-message.service.ts","webpack:///src/app/storybook/storybook.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///src/stories/actions/action-avatar/action-avatar.component.ts","webpack:///src/stories/actions/action-avatar/action-avatar.component.html","webpack:///src/stories/actions/action-input/action-input.component.html","webpack:///src/stories/actions/action-input/action-input.component.ts","webpack:///src/stories/app-menu/app-menu.component.html","webpack:///src/stories/app-menu/app-menu.component.ts","webpack:///src/stories/avatars/avatar.component.html","webpack:///src/stories/avatars/avatar.component.ts","webpack:///src/stories/buttons/button-apps/button-apps.component.ts","webpack:///src/stories/buttons/button-apps/button-apps.component.html","webpack:///src/stories/buttons/button-configuration/button-configuration.component.ts","webpack:///src/stories/buttons/button-configuration/button-configuration.component.html","webpack:///src/stories/buttons/button-continue/button-continue.component.ts","webpack:///src/stories/buttons/button-continue/button-continue.component.html","webpack:///src/stories/buttons/button-ex/button-ex.component.ts","webpack:///src/stories/buttons/button-ex/button-ex.component.html","webpack:///src/stories/buttons/button-example/button.component.ts","webpack:///src/stories/buttons/button-exclamation-mark/button-exclamation-mark.component.ts","webpack:///src/stories/buttons/button-exclamation-mark/button-exclamation-mark.component.html","webpack:///src/stories/buttons/button-fortest/button-fortest.component.ts","webpack:///src/stories/buttons/button-fortest/custom-directive/Highlight.directive.ts","webpack:///src/stories/buttons/button-globe/button-globe.component.ts","webpack:///src/stories/buttons/button-globe/button-globe.component.html","webpack:///src/stories/buttons/button-language/button-language.component.ts","webpack:///src/stories/buttons/button-language/button-language.component.html","webpack:///src/stories/buttons/button-successfully/button-successfully.component.ts","webpack:///src/stories/buttons/button-successfully/button-successfully.component.html","webpack:///src/stories/buttons/button-tadiran/button-tadiran.component.ts","webpack:///src/stories/cards/card-rugged/card-rugged.component.ts","webpack:///src/stories/cards/card-rugged/card-rugged.component.html","webpack:///src/stories/cards/card/card.component.ts","webpack:///src/stories/cards/card/card.component.html","webpack:///src/stories/directive/bubble-avatar/bubble-avatar.component.html","webpack:///src/stories/directive/bubble-avatar/bubble-avatar.component.ts","webpack:///src/stories/directive/bubble-avatar/popover.directive.ts","webpack:///src/stories/directive/bubble-input/bubble-input.component.html","webpack:///src/stories/directive/bubble-input/bubble-input.component.ts","webpack:///src/stories/directive/bubble-input/popover-input.directive.ts","webpack:///src/stories/directive/dynamic-comp.directive.ts","webpack:///src/stories/forms/configuration-form/configuration-form.component.html","webpack:///src/stories/forms/configuration-form/configuration-form.component.ts","webpack:///src/stories/forms/forgot-pass-form/forgot-pass-form.component.html","webpack:///src/stories/forms/forgot-pass-form/forgot-pass-form.component.ts","webpack:///src/stories/forms/login-form/login-form.component.html","webpack:///src/stories/forms/login-form/login-form.component.ts","webpack:///src/stories/forms/my-account-form/my-account-form.component.html","webpack:///src/stories/forms/my-account-form/my-account-form.component.ts","webpack:///src/stories/forms/registry-form/registry-form.component.html","webpack:///src/stories/forms/registry-form/registry-form.component.ts","webpack:///src/stories/forms/replace-pass-form/replace-pass-form.component.html","webpack:///src/stories/forms/replace-pass-form/replace-pass-form.component.ts","webpack:///src/stories/forms/reset-pass-form/reset-pass-form.component.html","webpack:///src/stories/forms/reset-pass-form/reset-pass-form.component.ts","webpack:///src/stories/forms/verification-form/verification-form.component.html","webpack:///src/stories/forms/verification-form/verification-form.component.ts","webpack:///src/stories/inputs/account-input/account-input.component.html","webpack:///src/stories/inputs/account-input/account-input.component.ts","webpack:///src/stories/inputs/code-input/code-input.component.config.ts","webpack:///src/stories/inputs/code-input/code-input.component.html","webpack:///src/stories/inputs/code-input/code-input.component.ts","webpack:///src/stories/inputs/configuration-input/configuration-input.component.html","webpack:///src/stories/inputs/configuration-input/configuration-input.component.ts","webpack:///src/stories/inputs/configuration-input/configuration-input.stories.ts","webpack:///src/stories/inputs/digitcode-input/digitcode-input.component.ts","webpack:///src/stories/inputs/digitcode-input/digitcode-input.component.html","webpack:///src/stories/inputs/input/story-input.component.html","webpack:///src/stories/inputs/input/story-input.component.ts","webpack:///src/stories/pages/background1/background1Component.ts","webpack:///src/stories/pages/background1/background1Component.html","webpack:///src/stories/pass-strength/pass-strength.component.ts","webpack:///src/stories/pass-strength/pass-strength.component.html","webpack:///src/stories/spinners/spinner1/spinner1.component.ts","webpack:///src/stories/spinners/spinner1/spinner1.component.html","webpack:///ignored|C:\\niv\\web\\AccGate2\\AccGateFrontend\\node_modules\\object-inspect|./util.inspect"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","TOKEN_HEADER_KEY","AuthInterceptor","tokenService","authService","isRefreshing","refreshTokenSubject","BehaviorSubject","next","authReq","token","getToken","url","includes","addTokenHeader","handle","pipe","catchError","error","HttpErrorResponse","status","handle401Error","throwError","request","getRefreshToken","refreshToken","switchMap","saveToken","accessToken","saveRefreshToken","err","signOut","filter","take","clone","headers","set","subscribe","data","authInterceptorProviders","provide","HTTP_INTERCEPTORS","useClass","multi","AUTH_API","AppConfig","httpOptions","HttpHeaders","AuthService","http","username","password","post","email","phone","responseType","oldPassword","confirmPassword","roles","webapp","webApp","get","changedProperties","prop","pinCodeToken","TOKEN_KEY","REFRESHTOKEN_KEY","PINCODETOKEN_KEY","USER_KEY","TokenStorageService","window","sessionStorage","clear","removeItem","setItem","user","getUser","saveUser","getItem","JSON","stringify","parse","toString","API_URL","UserService","EventBusService","subject$","Subject","event","eventName","action","name","map","EventData","value","jwtHelper","JwtHelperService","AppRoutingGuard","app","route","state","isApproved","childRoute","component","currentRoute","currentState","nextState","segments","console","log","isTokenExpired","routes","path","HomeComponent","loadChildren","m","Login2Module","redirectTo","pathMatch","AppRoutingModule","RouterModule","AppComponent","tokenStorageService","eventBusService","userService","router","isLoggedIn","showAdminBoard","showModeratorBoard","eventBusSub","on","logout","is2SVRequired","unsubscribe","navigate","isTowStepVerRequired","message","workingModeConfiguration","parsedUrl","URL","location","href","hostname","port","protocol","APP_CONFIG","InjectionToken","accServer","ACCWEBServers","endpoints","runMode","TSV","AppModule","LocationStrategy","HashLocationStrategy","BrowserModule","HttpClientModule","NgbDatepickerModule","MdbAccordionModule","MdbCarouselModule","MdbCheckboxModule","MdbCollapseModule","MdbDropdownModule","MdbFormsModule","MdbModalModule","MdbPopoverModule","MdbRadioModule","MdbRangeModule","MdbRippleModule","MdbScrollspyModule","MdbTabsModule","MdbTooltipModule","MdbValidationModule","BrowserAnimationsModule","ModalModule","ButtonsModule","MDBBootstrapModule","Profile2Module","StorybookModule","MatDialogModule","MatButtonModule","ApiErrorMessagePipe","LoginErrorMessagePipe","platformBrowser","bootstrapModule","ACC_VERSION","content","getPublicContent","getAccVersion","ForgotPassForm2Component","renderer","tokenStorage","dialogRef","isVerSuccess","isRecSuccess","isVerFailed","verErrorMessage","isLoading","submitted","empList","apiResponse","errorFieldSubmitted","closeResult","storyInputsInOrder","title","icon","type","placeholder","hide","forgotPassForm","FormGroup","FormControl","Validators","push","close","getRawValue","TSV_ValidateCodeByName","savePinCodeToken","errorResponse","ResetPassByMail","MAT_DIALOG_DATA","onSubmit","generateNewCodeFor2SV","LoginMainComponent","forgotPassFormDialog","registerFormDialog","replacePassFormDialog","verificationFormDialog","activatedRoute","isLoginFailed","loginErrorMessage","primary","label","loginForm","mode","forgotPassFormDialogRef","open","getUsernameCurrentFieldValue","afterClosed","result","toPromise","registerFormDialogRef","getPasswordCurrentFieldValue","replacePassFormDialogRef","ReplacePassForm2Component","beforeClosed","setUsernameCurrentFieldValue","setPasswordCurrentFieldValue","verificationFormDialogRef","emit","openVerificationForm","setValue","pass","warn","login","profile2","openRegisterForm","val","undefined","openReplacePassForm","reload","relativeTo","configuratin","openForgotPassForm","RegisterForm2Component","isRegSuccess","isRegFailed","validateMail","EventEmitter","registerForm","PasswordValidators","RegExp","requiresPhoneChars","regErrorMessage","isRepSuccess","isRepFailed","repErrorMessage","replacePassForm","userName","patternValidator","requiresDigit","requiresUppercase","requiresLowercase","requiresSpecialChars","changePassword","getPinCodeToken","TSV_ReplacePassForm","regex","control","valid","test","ResetPassForm2Component","VerificationForm2Component","verificationForm","TSV_GenerateCodeByName","canActivate","Login2RoutingModule","Prop","propName","propValue","BoardAdmin2Component","isConfigSuccess","isConfigFailed","properties","configurationForm","tadiran_gate_passExpDays","tadiran_gate_PreviousAlertPassExpDays","tadiran_gate_TSV","tadiran_gate_pinCodeLength","tadiran_gate_pinCodeValDura","getConfigurationData","replace","split","input","charAt","toUpperCase","substr","toLowerCase","join","configurationData","forEach","p","configInput","find","match","valueOf","pn","setConfigurationData","configErrorMessage","returnPortal","doLogout","openChangePassword","BoardAdminComponent","form","isSuccessful","isSignUpFailed","errorMessage","rolesList","getAdminBoard","register","BoardModeratorComponent","getModeratorBoard","BoardUserComponent","getUserBoard","MyAccountForm2Component","currentUser","getAccountDetails","accountDetails","setUsername","setEmail","setPhone","isSupervisorAdmin","openUser","PortalComponent","myAccountFormDialog","permittedWebAppList","realtime","scriptDesigner","agent","aeonixAdmin","admin","passExp","previousAlertPassExp","myAccountFormDialogRef","setPassExpAlertData","setPermittedWebAppList","portal","getPassExpireDate","getPermittedWebAppList","origin","windowObjectReference","document","getElementById","innerHTML","promise","reject","appRequest","values","webappURLPrefix","newAccessToken","newRefreshToken","newCurrentUser","timeout","prom","time","exception","timer","race","_r","rej","setTimeout","clearTimeout","webapptab","timeoutError","Symbol","openNewWinForApp","openNewTabForApp","Profile2RoutingModule","dataToArray","item","trim","apiErrorMessageService","args","language","apiErrorMessage","ApiErrorMessageService","languages","dictionary","languange","eng","key","TranslationSet","AvatarComponent","CommonModule","FormsModule","ReactiveFormsModule","ButtonGlobeComponent","ButtonTadiranComponent","ButtonLanguageComponent","ButtonFortestComponent","ButtonContinueComponent","ButtonExComponent","ButtonAppsComponent","ButtonSuccessfullyComponent","ButtonConfigurationComponent","AppMenuComponent","StoryInputComponent","DigitcodeInputComponent","CodeInputComponent","AccountInputComponent","ConfigurationInputComponent","HighlightDirective","DynamicCompDirective","ActionAvatarComponent","PopoverDirective","BubbleAvatarComponent","ActionInputComponent","PopoverInputDirective","BubbleInputComponent","ButtonExclamationMarkComponent","Spinner1Component","environment","production","enableProdMode","actionHeader","actionButton","bubbleOn","actionInputs","credentials","onPinInput","onArchiveInput","validationForm","arr","initialTasks","t","filteredTasks","popover","header","isNotify","size","onClick","isDisabled","application","gallery","galleryMode","ButtonComponent","eleRef","nativeElement","style","color","colorName","CardRuggedComponent","CardComponent","componentFactoryResolver","show","isDynamic","triggerDetectionChange","options","componentFactory","resolveComponentFactory","viewContainerRef","actionAvatarComponentRef","createComponent","instance","setHeader","setBubbleOn","$event","_viewContainerRef","carComponentRef","el","viewContainer","avatarButton","popoverComponentRef","showPopup","hidePopup","factory","comp","create","injector","display","classList","add","appendChild","hostView","detectChanges","actionInputComponentRef","setConditions","length","setData","ConfigurationFormComponent","onLogout","param","mForm","changeLog","saveChanges","clickXButton","changes","previousValue","currentValue","loadSuccessfullyLoggedIn","setProperty","mainHeader","ForgotPassFormComponent","codeLength","formButtonLabel","formButtonClick","sendVerificationReq","popoverOptions","movToVerifyState","formHeader","secondHeader","appDynamicComp","codeInputComponentRef","codeChanged","onCodeChanged","LoginFormComponent","sendLoginReq","openForgetPassForm","MyAccountFormComponent","displayToolButton","sendRegReq","RegistryFormComponent","ReplacePassFormComponent","ResetPassFormComponent","info","reset","VerificationFormComponent","codeInput","hideInput","isStrength","storyInput","isPasswordTextHide","conditionList","currentForm","controllerType","passConditions","condition","minLengthValid","formControler","requiresUppercaseValid","requiresLowercaseValid","requiresDigitValid","requiresSpecialCharsValid","requiresEmailValid","requiresPhoneValid","errors","hasError","CodeInputComponentConfigToken","defaultComponentConfig","inputType","inputMode","initialFocusField","isCharsCode","isCodeHidden","isPrevFocusableAfterClearing","isFocusingOnLastByClickIfFilled","disabled","autocapitalize","InputState","config","isNonDigitsCode","codeCompleted","placeholders","inputs","inputsStates","isFocusingAfterAppearingCompleted","isInitialFocusFieldEnabled","Object","assign","hasOwnProperty","isEmpty","onCodeLengthChanges","inputsListSubscription","inputsList","onInputsListChanges","bind","focusOnInputAfterAppearing","onInputCodeChanges","isChangesEmitting","focusOnField","emitChanges","index","_codeLength","focus","target","last","isFilled","getCurrentFilledCode","i","canInputValue","preventDefault","stopPropagation","setInputValue","setStateForInput","j","blur","clipboardData","getData","valIndex","isTargetEmpty","prev","isBackspaceKey","isDeleteKey","chars","isAllCharsAreAllowed","char","numbers","Array","fill","splice","list","inputsToAdd","states","ready","emitCode","isBackspace","keyCode","isReset","getStateForInput","selectionStart","valueClassCSS","emptyClassCSS","remove","parentElement","isDigitsValue","indexOf","selectedTeam","ddlauto","decorators","moduleMetadata","declarations","imports","componentWrapperDecorator","story","excludeStories","actionsData","Template","props","Default","PassExpDays","PreviousAlertPassExpDays","DdlAuto","PinCodeLength","PinCodeValDura","Phone","onPaste","onInput","onKeydown","Background1Component","PassStrengthComponent","strength","measureStrength","strengthColor","score","letters","variations","digits","lower","upper","nonWords","variationCount","check","Math","trunc"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { HTTP_INTERCEPTORS, HttpEvent, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\n\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\r\nimport { catchError, filter, switchMap, take } from 'rxjs/operators';\r\n\r\n const TOKEN_HEADER_KEY = 'Authorization';       // for Spring Boot back-end\r\n//const TOKEN_HEADER_KEY = 'x-access-token';   // for Node.js Express back-end\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  private isRefreshing = false;\r\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  constructor(private tokenService: TokenStorageService, private authService: AuthService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let authReq = req;\r\n    const token = this.tokenService.getToken();\r\n    if (token != null && !authReq.url.includes('test/')) {\r\n      authReq = this.addTokenHeader(req, token);\r\n      // for Spring Boot back-end\r\n      // authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\r\n\r\n      // for Node.js Express back-end\r\n      //authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, token) });\r\n    }\r\n    return next.handle(authReq).pipe(catchError(error => {\r\n      if (error instanceof HttpErrorResponse && !authReq.url.includes('auth/signin') && error.status === 401) {\r\n        return this.handle401Error(authReq, next);\r\n      }\r\n      return throwError(error);\r\n    }));\r\n  }\r\n\r\n\r\n  private handle401Error(request: HttpRequest<any>, next: HttpHandler) {\r\n    if (!this.isRefreshing) {\r\n      this.isRefreshing = true;\r\n      this.refreshTokenSubject.next(null);\r\n      const token = this.tokenService.getRefreshToken();\r\n      if (token)\r\n        return this.authService.refreshToken(token).pipe(\r\n          switchMap((token: any) => {\r\n            this.isRefreshing = false;\r\n            this.tokenService.saveToken(token.accessToken);\r\n            this.tokenService.saveRefreshToken(token.refreshToken);\r\n            this.refreshTokenSubject.next(token.accessToken);\r\n\r\n            return next.handle(this.addTokenHeader(request, token.accessToken));\r\n          }),\r\n          catchError((err) => {\r\n            this.isRefreshing = false;\r\n\r\n            this.tokenService.signOut();\r\n            return throwError(err);\r\n          })\r\n        );\r\n    }\r\n    return this.refreshTokenSubject.pipe(\r\n      filter(token => token !== null),\r\n      take(1),\r\n      switchMap((token) => next.handle(this.addTokenHeader(request, token)))\r\n    );\r\n  }\r\n  private addTokenHeader(request: HttpRequest<any>, token: string) {\r\n    /* for Spring Boot back-end */\r\n     return request.clone({ headers: request.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\r\n    /* for Node.js Express back-end */\r\n    //return request.clone({ headers: request.headers.set(TOKEN_HEADER_KEY, token) });\r\n  }\r\n/*\r\n  public forseRefreshToken2() {\r\n    const token = this.tokenService.getRefreshToken();\r\n    if (token)\r\n      this.authService.refreshToken(token).pipe(\r\n        switchMap((token: any) => {\r\n          this.isRefreshing = false;\r\n          this.tokenService.saveToken(token.accessToken);\r\n          this.refreshTokenSubject.next(token.accessToken);\r\n\r\n          filter(token => token !== null),\r\n            take(1),\r\n            switchMap((token) => next.handle(this.addTokenHeader(request, token)))\r\n        }),\r\n        catchError((err) => {\r\n          this.isRefreshing = false;\r\n\r\n          this.tokenService.signOut();\r\n          return throwError(err);\r\n        })\r\n      );\r\n  }\r\n*/\r\n  public forseRefreshToken(): void {\r\n    const token = this.tokenService.getRefreshToken();\r\n    if (token)\r\n      this.authService.refreshToken(token).subscribe(\r\n        data => {\r\n          this.isRefreshing = false;\r\n          this.tokenService.saveToken(data.accessToken);\r\n          this.refreshTokenSubject.next(data.accessToken);\r\n\r\n\r\n        },\r\n        (err) => {\r\n          this.isRefreshing = false;\r\n\r\n          this.tokenService.signOut();\r\n          return throwError(err);\r\n        }\r\n      );\r\n  }\r\n}\r\n\r\nexport const authInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {AppConfig} from \"../app.config\";\r\nimport {Prop} from \"../login2/profile2/board-admin2/board-admin2.component\";\r\n\r\n\r\n\r\nconst AUTH_API = AppConfig.accServer.ACCWEBServers+'/accGate/auth/';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signin', {\r\n      username,\r\n      password\r\n    }, httpOptions);\r\n  }\r\n\r\n  registerForm(username: string, email: string, password: string, phone: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'register-form', {\r\n      username,\r\n      email,\r\n      password,\r\n      phone,\r\n    }, {responseType: 'text'});\r\n  }\r\n\r\n  replacePassForm(username: string, oldPassword: string, password: string, confirmPassword: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'replace-pass-form', {\r\n      username,\r\n      oldPassword,\r\n      password,\r\n      confirmPassword,\r\n    }, {responseType: 'text'});\r\n  }\r\n\r\n  register(username: string, email: string, password: string, roles: Array<String>): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signup', {\r\n      username,\r\n      email,\r\n      password,\r\n      roles,\r\n    }, httpOptions);\r\n  }\r\n\r\n  getToken(url: string, username: string, email: string, password: string): Observable<any> {\r\n    return this.http.post(url, {\r\n      username,\r\n      email,\r\n      password\r\n    }, httpOptions);\r\n  }\r\n\r\n  // login, register\r\n  refreshToken(token: string): Observable<any>  {\r\n    return this.http.post(AUTH_API + 'refreshtoken', {\r\n      refreshToken: token\r\n    }, httpOptions);\r\n  }\r\n\r\n  // open app in a new browser tab\r\n  webapptab(token: string, webapp: string): Observable<any>  {\r\n    return this.http.post(AUTH_API + 'webapptab', {\r\n      refreshToken: token,\r\n      webApp: webapp\r\n    }, httpOptions);\r\n  }\r\n\r\n  getPassExpireDate(token: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'passexpdate', {\r\n      accessToken: token,\r\n    }, httpOptions);\r\n  }\r\n\r\n\r\n  getPermittedWebAppList(token: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'permitwebapplist', {\r\n      accessToken: token,\r\n    }, httpOptions);\r\n  }\r\n\r\n  getAccountDetails(token: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'accountdetails', {\r\n      accessToken: token,\r\n    }, httpOptions);\r\n  }\r\n\r\n  getConfigurationData(): Observable<any> {\r\n    return this.http.get(AUTH_API + 'getconfigurationdata', httpOptions);\r\n  }\r\n\r\n  setConfigurationData( changedProperties: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'setconfigurationdata', {\r\n      prop: changedProperties\r\n    }, httpOptions);\r\n  }\r\n\r\n  TSV_ValidateCodeByName(username: string, email: string, code: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'tsv_codevalidatebyname', {\r\n      username,\r\n      email,\r\n      code,\r\n    }, httpOptions);\r\n  }\r\n\r\n  TSV_ReplacePassForm(username: string, oldPassword: string, password: string,\r\n                      confirmPassword: string, pinCodeToken: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'tsv_replace-pass-form', {\r\n      username,\r\n      oldPassword,\r\n      password,\r\n      confirmPassword,\r\n      pinCodeToken,\r\n    }, httpOptions);\r\n  }\r\n\r\n\r\n  ResetPassByMail( username: string, email: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'forgotpassword', {\r\n      username,\r\n      email,\r\n    }, httpOptions);\r\n  }\r\n\r\n  TSV_GenerateCodeByName( username: string, email: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'tsv_codegeneratebyname', {\r\n      username,\r\n      email,\r\n    }, httpOptions);\r\n  }\r\n\r\n  TSV_GenerateCodeByEmail( username: string, email: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'tsv_codegeneratebyemail', {\r\n      username,\r\n      email,\r\n    }, httpOptions);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nconst TOKEN_KEY = 'token';\r\nconst REFRESHTOKEN_KEY = 'auth-refreshtoken';\r\nconst PINCODETOKEN_KEY = 'auth-pincodetoken';\r\nconst USER_KEY = 'user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenStorageService {\r\n  constructor() { }\r\n\r\n  signOut(): void {\r\n    window.sessionStorage.clear();\r\n  }\r\n\r\n  public saveToken(token: string): void {\r\n    window.sessionStorage.removeItem(TOKEN_KEY);\r\n    window.sessionStorage.setItem(TOKEN_KEY, token);\r\n    const user = this.getUser();\r\n    if (user.id) {\r\n      this.saveUser({ ...user, accessToken: token });\r\n    }\r\n  }\r\n\r\n  public getToken(): string | null {\r\n    return window.sessionStorage.getItem(TOKEN_KEY);\r\n  }\r\n\r\n  public saveRefreshToken(token: string): void {\r\n    window.sessionStorage.removeItem(REFRESHTOKEN_KEY);\r\n    window.sessionStorage.setItem(REFRESHTOKEN_KEY, token);\r\n    const user = this.getUser();\r\n    if (user.id) {\r\n      user.refreshToken = token;\r\n      this.saveUser(user);\r\n    }\r\n  }\r\n\r\n  public getRefreshToken(): string | null {\r\n    return window.sessionStorage.getItem(REFRESHTOKEN_KEY);\r\n  }\r\n\r\n  public savePinCodeToken(token: string): void {\r\n    window.sessionStorage.removeItem(PINCODETOKEN_KEY);\r\n    window.sessionStorage.setItem(PINCODETOKEN_KEY, token);\r\n  }\r\n\r\n  public getPinCodeToken(): string | null {\r\n    return window.sessionStorage.getItem(PINCODETOKEN_KEY);\r\n  }\r\n\r\n  public saveUser(user: any): void {\r\n    window.sessionStorage.removeItem(USER_KEY);\r\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\r\n  }\r\n\r\n  public getUser(): any {\r\n    const user = window.sessionStorage.getItem(USER_KEY);\r\n    if (user) {\r\n      return JSON.parse(user);\r\n    }\r\n    return {};\r\n  }\r\n\r\n  public getRoles(): any {\r\n    const user = this.getUser();\r\n    if (user.roles) {\r\n      return user.roles;\r\n    }\r\n    return {};\r\n  }\r\n\r\n  public getUsername(): string {\r\n    const user = this.getUser();\r\n    return user.username.toString();\r\n  }\r\n\r\n  public isSupervisorAdmin(): boolean {\r\n    const user = this.getUser();\r\n    return (user.roles.toString() === 'SupervisorAdmin');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {AppConfig} from \"../app.config\";\r\n\r\nconst API_URL = AppConfig.accServer.ACCWEBServers+'/accGate/test/';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getPublicContent(): Observable<any> {\r\n    return this.http.get(API_URL + 'all', { responseType: 'text' });\r\n  }\r\n\r\n  getAccVersion(): Observable<any> {\r\n    return this.http.get(API_URL + 'accversion', { responseType: 'text' });\r\n  }\r\n\r\n  isTowStepVerRequired(): Observable<any> {\r\n    return this.http.get(API_URL + 'istsvon', httpOptions);\r\n  }\r\n\r\n  getUserBoard(): Observable<any> {\r\n    return this.http.get(API_URL + 'user', { responseType: 'text' });\r\n  }\r\n\r\n  getModeratorBoard(): Observable<any> {\r\n    return this.http.get(API_URL + 'mod', { responseType: 'text' });\r\n  }\r\n\r\n  getAdminBoard(): Observable<any> {\r\n    return this.http.get(API_URL + 'admin', { responseType: 'text' });\r\n  }\r\n\r\n  getAccountDetails(): Observable<any> {\r\n    return this.http.get(API_URL + 'accountdetails', { responseType: 'text' });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { EventData } from './event.class';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventBusService {\r\n  private subject$ = new Subject<EventData>();\r\n  constructor() { }\r\n  emit(event: EventData) {\r\n    this.subject$.next(event);\r\n  }\r\n  on(eventName: string, action: any): Subscription {\r\n    return this.subject$.pipe(\r\n      filter((e: EventData) => e.name === eventName),\r\n      map((e: EventData) => e[\"value\"])).subscribe(action);\r\n  }\r\n}\r\n","export class EventData {\r\n  name: string;\r\n  value: any;\r\n  constructor(name: string, value: any) {\r\n    this.name = name;\r\n    this.value = value;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, CanDeactivate, CanLoad, Route, RouterStateSnapshot, UrlSegment, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AppComponent } from './app.component';\r\nimport {TokenStorageService} from \"./_services/token-storage.service\";\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n\r\nconst jwtHelper = new JwtHelperService();\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppRoutingGuard implements CanActivate, CanActivateChild, CanDeactivate<unknown>, CanLoad {\r\n\r\n  constructor(private app: AppComponent,\r\n              private tokenService: TokenStorageService) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return this.isApproved();\r\n  }\r\n  canActivateChild(\r\n    childRoute: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return this.isApproved();\r\n  }\r\n  canDeactivate(\r\n    component: unknown,\r\n    currentRoute: ActivatedRouteSnapshot,\r\n    currentState: RouterStateSnapshot,\r\n    nextState?: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return this.isApproved();\r\n  }\r\n  canLoad(\r\n    route: Route,\r\n    segments: UrlSegment[]): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return this.isApproved();\r\n  }\r\n\r\n\r\n  private isApproved(): boolean {\r\n\r\n    const token = this.tokenService.getToken();\r\n    console.log('guard check for authentication..' + !jwtHelper.isTokenExpired(this.tokenService.getToken()) );\r\n    return !jwtHelper.isTokenExpired(this.tokenService.getToken());\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home/home.component';\r\n\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'login2', loadChildren: () => import('./login2/login2.module').then(m => m.Login2Module), },\r\n\r\n  { path: '', redirectTo: 'login2', pathMatch: 'full' },\r\n  { path: '**', redirectTo: 'login2',  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes/*, {useHash: true}*/)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit, OnDestroy  } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { TokenStorageService } from './_services/token-storage.service';\r\nimport { EventBusService } from './_shared/event-bus.service';\r\nimport {Router} from \"@angular/router\";\r\nimport {workingModeConfiguration} from \"./app.config\";\r\nimport { UserService } from 'src/app/_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  private roles: string[] = [];\r\n  public isLoggedIn = false;\r\n  showAdminBoard = false;\r\n  showModeratorBoard = false;\r\n  username?: string;\r\n  eventBusSub?: Subscription;\r\n  title?: 'accGate';\r\n\r\n  constructor(private tokenStorageService: TokenStorageService,\r\n              private eventBusService: EventBusService,\r\n              private userService: UserService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\r\n\r\n    if (this.isLoggedIn) {\r\n      const user = this.tokenStorageService.getUser();\r\n      this.roles = user.roles;\r\n\r\n      this.showAdminBoard = (this.roles.includes('Admin') || this.roles.includes('SupervisorAdmin'));\r\n      this.showModeratorBoard = this.roles.includes('SupervisorMonitor');\r\n\r\n      this.username = user.username;\r\n    }\r\n\r\n    this.eventBusSub = this.eventBusService.on('logout', () => {\r\n      this.logout();\r\n    });\r\n\r\n    this.eventBusSub = this.eventBusService.on('is2SVRequired', () => {\r\n      this.is2SVRequired();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.eventBusSub)\r\n      this.eventBusSub.unsubscribe();\r\n  }\r\n\r\n  logout(): void {\r\n    console.log(\"logging out\")\r\n    this.tokenStorageService.signOut();\r\n    this.isLoggedIn = false;\r\n    this.roles = [];\r\n    this.showAdminBoard = false;\r\n    this.showModeratorBoard = false;\r\n    this.router.navigate(['/login2']);\r\n  }\r\n\r\n  is2SVRequired(): void {\r\n    console.log(\"is2SVRequired: \")\r\n    this.userService.isTowStepVerRequired().subscribe(\r\n      data => { console.log(\"data.data: \" + data.data);\r\n        console.log(\"data.message: \" + data.message);\r\n        workingModeConfiguration.runMode.TSV = (data.data);\r\n        console.log(\"workingModeConfiguration.runMode.TSV: \" + workingModeConfiguration.runMode.TSV.toString());},\r\n      err => { console.log(\"Can't detect 2SV operation mode:  \"+ err.error); }\r\n    );\r\n  }\r\n}\r\n","\r\n<router-outlet  id=\"app\" ></router-outlet>\r\n\r\n<!--div id=\"app\">\r\n  <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\r\n\r\n    <a href=\"#\" class=\"navbar-brand\">\r\n      <img _ngcontent-c0=\"accGate\" class=\"nav-img\" srcset=\"./assets/images/TadiranTelecom2.webp\"  width=\"56\"\r\n           height=\"56\"><label>accGate</label>\r\n    </a>\r\n    <ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\r\n      <li class=\"nav-item\">\r\n        <a href=\"/login-main\" class=\"nav-link\" routerLink=\"login-main\">Page </a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a href=\"/home\" class=\"nav-link\" routerLink=\"home\">Home </a>\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"showAdminBoard\">\r\n        <a href=\"/admin\" class=\"nav-link\" routerLink=\"admin\">Admin Board</a>\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"showModeratorBoard\">\r\n        <a href=\"/mod\" class=\"nav-link\" routerLink=\"mod\">Moderator Board</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a href=\"/user\" class=\"nav-link\" *ngIf=\"isConfigSuccess\" routerLink=\"user\">User</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"!isConfigSuccess\">\r\n      <li class=\"nav-item\">\r\n        <a href=\"/register\" class=\"nav-link\" routerLink=\"register\">Sign Up</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a href=\"/login\" class=\"nav-link\" routerLink=\"login\">Login</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"isConfigSuccess\">\r\n      <li class=\"nav-item\">\r\n        <a href=\"/profile\" class=\"nav-link\" routerLink=\"profile\">{{ username }}</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a href class=\"nav-link\" (click)=\"logout()\">LogOut</a>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div-->\r\n","import {InjectionToken} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n// parse ful url to ip,port, params\r\nvar parsedUrl = new URL(window.location.href);\r\nvar url = parsedUrl.hostname;\r\nvar port = parsedUrl.port; (parsedUrl.port=='4200' ?  '8445' : parsedUrl.port);\r\nvar protocol = parsedUrl.protocol;\r\nconst AUTH_API = protocol + \"//\" + url + \":\" + port;\r\n\r\nexport let APP_CONFIG = new InjectionToken('app.config');\r\nexport const AppConfig = {\r\n  accServer: {\r\n    ACCWEBServers: AUTH_API //'https://172.28.8.245:8445'\r\n  },\r\n  endpoints: {\r\n\r\n    TOKEN_KEY: 'token',\r\n    REFRESHTOKEN_KEY: 'auth-refreshtoken',\r\n    USER_KEY: 'user'\r\n  }\r\n};\r\nexport let workingModeConfiguration = {\r\n  runMode: {\r\n    TSV: false,\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\n\r\n//import { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { HomeComponent } from './home/home.component';\r\n\r\n\r\n\r\nimport { authInterceptorProviders } from './_helpers/auth.interceptor';\r\nimport {NgbDatepickerModule} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { MdbAccordionModule } from 'mdb-angular-ui-kit/accordion';\r\nimport { MdbCarouselModule } from 'mdb-angular-ui-kit/carousel';\r\nimport { MdbCheckboxModule } from 'mdb-angular-ui-kit/checkbox';\r\nimport { MdbCollapseModule } from 'mdb-angular-ui-kit/collapse';\r\nimport { MdbDropdownModule } from 'mdb-angular-ui-kit/dropdown';\r\nimport { MdbFormsModule } from 'mdb-angular-ui-kit/forms';\r\nimport { MdbModalModule } from 'mdb-angular-ui-kit/modal';\r\nimport { MdbPopoverModule } from 'mdb-angular-ui-kit/popover';\r\nimport { MdbRadioModule } from 'mdb-angular-ui-kit/radio';\r\nimport { MdbRangeModule } from 'mdb-angular-ui-kit/range';\r\nimport { MdbRippleModule } from 'mdb-angular-ui-kit/ripple';\r\nimport { MdbScrollspyModule } from 'mdb-angular-ui-kit/scrollspy';\r\nimport { MdbTabsModule } from 'mdb-angular-ui-kit/tabs';\r\nimport { MdbTooltipModule } from 'mdb-angular-ui-kit/tooltip';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ModalModule, ButtonsModule, MDBBootstrapModule } from 'angular-bootstrap-md';\r\n\r\nimport {ApiErrorMessagePipe} from \"./pipes/api-error-message.pipe\";\r\nimport {LoginErrorMessagePipe} from \"./pipes/login-error-message.pipe\";\r\n\r\n\r\nimport {Login2Module} from \"./login2/login2.module\";\r\nimport {StorybookModule} from \"./storybook/storybook.module\";\r\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\r\nimport {MdbValidationModule} from \"mdb-angular-ui-kit/validation\";\r\nimport {MatDialogModule} from \"@angular/material/dialog\";\r\nimport {MatButtonModule} from \"@angular/material/button\";\r\nimport ForgotPassForm2Component from \"./login2/login-main/forgot-pass-form2/forgot-pass-form2.component\";\r\nimport ResetPassForm2Component from \"./login2/login-main/reset-pass-form2/reset-pass-form2.component\";\r\nimport {AppRoutingModule} from \"./app-routing.module\";\r\nimport {Profile2Module} from \"./login2/profile2/profile2.module\";\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        HomeComponent,\r\n        ApiErrorMessagePipe,\r\n        LoginErrorMessagePipe,\r\n        ForgotPassForm2Component,\r\n        ResetPassForm2Component,\r\n\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        HttpClientModule,\r\n        NgbDatepickerModule,\r\n        MdbAccordionModule,\r\n        MdbCarouselModule,\r\n        MdbCheckboxModule,\r\n        MdbCollapseModule,\r\n        MdbDropdownModule,\r\n        MdbFormsModule,\r\n        MdbModalModule,\r\n        MdbPopoverModule,\r\n        MdbRadioModule,\r\n        MdbRangeModule,\r\n        MdbRippleModule,\r\n        MdbScrollspyModule,\r\n        MdbTabsModule,\r\n        MdbTooltipModule,\r\n        MdbValidationModule,\r\n        BrowserAnimationsModule,\r\n        ModalModule,\r\n        ButtonsModule,\r\n        MDBBootstrapModule.forRoot(),\r\n        Login2Module,\r\n        Profile2Module,\r\n        StorybookModule,\r\n        MatDialogModule,\r\n        MatButtonModule,\r\n\r\n\r\n    ],\r\n    providers: [\r\n        authInterceptorProviders,\r\n        AppComponent,\r\n        {provide: LocationStrategy, useClass: HashLocationStrategy}\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  public ACC_VERSION: string = 'ACC_VERSION';\r\n  content?: string = 'Aeonix | Tadiran Telecom';\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getPublicContent().subscribe(\r\n      data => { this.content = data; },\r\n      err => { this.content = JSON.parse(err.error).message; }\r\n    );\r\n    this.userService.getAccVersion().subscribe(\r\n      data => { this.ACC_VERSION = data; },\r\n      err => { this.ACC_VERSION = JSON.parse(err.error).message; }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container \">\r\n  <br>\r\n  <header class=\"background jumbotron  \">\r\n    <h1 class=\"font_0\">\r\n      <span class=\"\" style=\"font-size:44px;\">\r\n        <dl>\r\n          <dt><span>{{ content }}</span></dt>\r\n          <dd><span>{{ ACC_VERSION }}</span></dd>\r\n        </dl>\r\n      </span>\r\n    </h1>\r\n  </header>\r\n\r\n  <storybook-button-fortest></storybook-button-fortest>\r\n  <aside>\r\n    <!-- Card -->\r\n    <div class=\"fa-pull-right bg-image card shadow-1-strong card-img\">\r\n      <div class=\"card-body text-white\">\r\n        <h5 class=\"card-title\">Card title</h5>\r\n        <p class=\"card-text\">\r\n          Some quick example text to build on the card title and make up the bulk of the\r\n          card's content.\r\n        </p>\r\n        <a href=\"#!\" class=\"btn btn-outline-light\">Button</a>\r\n      </div>\r\n    </div>\r\n    <!-- Card -->\r\n  </aside>\r\n\r\n  <div class=\"alert alert-success  \" role=\"alert\">\r\n    <h4 class=\"alert-heading \">Well done!</h4>\r\n    <p>Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.</p>\r\n    <hr>\r\n    <p class=\"mb-0\">Whenever you need to, be sure to use margin utilities to keep things nice and tidy.</p>\r\n  </div>\r\n\r\n</div>\r\n","import {Component, ElementRef, Inject, OnInit, Renderer2, ViewChild} from '@angular/core';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport {StoryInput} from \"src/stories/inputs/input/story-input.model\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {TokenStorageService} from \"../../../_services/token-storage.service\";\r\nexport interface TSVData {\r\n  username: string;\r\n  email: string;\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'forgot-pass-form2',\r\n  templateUrl: './forgot-pass-form2.component.html',\r\n  styleUrls: ['./forgot-pass-form2.component.css']\r\n})\r\nexport default class ForgotPassForm2Component implements OnInit {\r\n  forgotPassForm: FormGroup;\r\n  status = {\r\n    isVerSuccess: false,\r\n    isRecSuccess: false,\r\n    isVerFailed: false,\r\n    verErrorMessage: {},\r\n  }\r\n\r\n  public isLoading = false;\r\n  submitted = false;\r\n  empList: Array<String> = [];\r\n  apiResponse = { message: '', error: false };\r\n  errorFieldSubmitted: any = {};\r\n  closeResult = '';\r\n\r\n  storyInputsInOrder: StoryInput[]  = [\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '2', title: 'username', state: 'USER NAME', icon: './assets/images/User2ldpi.png', type: 'text', placeholder: 'Ex.Saul Ramirez', hide: false  },\r\n  ];\r\n\r\n\r\n  constructor(private authService: AuthService,\r\n              private renderer: Renderer2,\r\n              private tokenStorage: TokenStorageService,\r\n              public dialogRef: MatDialogRef<ForgotPassForm2Component>,\r\n              @Inject(MAT_DIALOG_DATA) public data: TSVData) {\r\n    this.forgotPassForm = new FormGroup({\r\n      username: new FormControl(data.username.toString(), Validators.minLength(2)),\r\n    });/*Validators.pattern(new RegExp(\"[0-9 ]{12}\")*/\r\n    this.empList.push(\"admin\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //this.generateNewCodeFor2SV();\r\n  }\r\n\r\n  onSubmit(code: string): void {\r\n    if (this.status.isVerSuccess) {\r\n      this.dialogRef.close({message: 'Successful verification', data: this.data});\r\n    }\r\n    this.submitted = true;\r\n    const { username } = this.forgotPassForm.getRawValue();\r\n    this.data.username = username;\r\n\r\n    this.isLoading = true;\r\n    this.authService.TSV_ValidateCodeByName(username, this.data.email, code).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.tokenStorage.savePinCodeToken(data.pinCodeToken);\r\n        this.status.isVerSuccess = true;\r\n        this.status.isVerFailed = false;\r\n        this.errorFieldSubmitted = {} ;\r\n        this.apiResponse.error = false;\r\n        this.apiResponse.message = 'Successful verification';\r\n      },\r\n      error => {\r\n        const errorResponse = error.error;\r\n        this.apiResponse.error = true;\r\n        this.apiResponse.message = 'Verification error';\r\n        this.status.verErrorMessage = error.error.message;\r\n        this.status.isVerFailed = true;\r\n        this.errorFieldSubmitted = errorResponse.message;\r\n        console.log(errorResponse);\r\n        this.isLoading = false;\r\n      },\r\n      () => {\r\n        this.isLoading = false;\r\n        console.log(\"Validate Code Request Finished\");}\r\n    );\r\n  }\r\n\r\n  generateNewCodeFor2SV() {\r\n    const { username } = this.forgotPassForm.getRawValue();\r\n    this.isLoading = true;\r\n    this.authService.ResetPassByMail(username, this.data.email).subscribe(\r\n      data => {\r\n          if (data.message == \"Password successfully sent to email!\") {\r\n            this.status.isRecSuccess = true;\r\n          }\r\n        console.log(\"Generating Temporary Password Succeeded\", data);\r\n      },\r\n      error => {\r\n        this.isLoading = false;\r\n        console.log(\"Error: Can't generate temporary password for user \");\r\n      },\r\n      () => {\r\n        this.isLoading = false;\r\n        console.log(\"Sending generation temporary password request complete\");\r\n      });\r\n  }\r\n\r\n  get username(): AbstractControl {\r\n    return this.forgotPassForm.get('username')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.forgotPassForm.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.forgotPassForm.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.forgotPassForm.get('phone')!;\r\n  }\r\n}\r\n","\r\n<storybook-forgot-pass-form\r\n  [status]=\"status\"\r\n  [isLoading]=\"isLoading\"\r\n  [isVerSuccess]=\"status.isVerSuccess\"\r\n  [isRecSuccess]=\"status.isRecSuccess\"\r\n  [storyInputs]=\"storyInputsInOrder\"\r\n  [mForm]=\"forgotPassForm\"\r\n  (sendVerificationReq)=\"onSubmit($event)\"\r\n  (generateNewCodeFor2SV)=\"generateNewCodeFor2SV()\"\r\n  (clickXButton)=\"this.dialogRef.close({message: 'xbutton'})\">\r\n</storybook-forgot-pass-form>\r\n","import {Component, ElementRef, Inject, Input, OnInit, Renderer2, ViewChild} from '@angular/core';\nimport { StoryInput } from \"src/stories/inputs/input/story-input.model\";\nimport {AuthService} from \"src/app/_services/auth.service\";\nimport {AbstractControl, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {TokenStorageService} from \"src/app/_services/token-storage.service\";\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport RegisterForm2Component from \"./register-form2/register-form2.component\";\n//import * as mStoryInput from \"../../../stories/inputs/story-input.stories\";\nimport {ReplacePassForm2Component} from \"./replace-pass-form2/replace-pass-form2.component\";\nimport VerificationForm2Component from \"./verification-form2/verification-form2.component\";\nimport {UserService} from \"../../_services/user.service\";\nimport { workingModeConfiguration } from \"src/app/app.config\"\nimport {EventData} from \"../../_shared/event.class\";\nimport { EventBusService } from 'src/app/_shared/event-bus.service';\nimport {Subscription} from \"rxjs\";\nimport ForgotPassForm2Component from \"./forgot-pass-form2/forgot-pass-form2.component\";\n\n\nexport interface DialogData {\n  username: string;\n  password: string;\n}\n\n\n\n@Component({\n  selector: 'login-main',\n  templateUrl: './login-main.component.html',\n  styleUrls: ['./login-main.component.scss']\n})\nexport class LoginMainComponent implements OnInit {\n\n  public isLoggedIn = false;\n  isLoginFailed = false;\n  loginErrorMessage = '';\n  roles: string[] = [];\n  public isLoading = false;\n  eventBusSub?: Subscription;\n\n\n\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  storyInputsInOrder: StoryInput[]  = [\n    { /*...mStoryInput.Default.args?.['storyInput'],*/ id: '2', title: 'username', state: 'USER NAME', icon: './assets/images/User2ldpi.png', type: 'text', placeholder: 'Ex.Saul Ramirez' , hide: false },\n    { /*...mStoryInput.Default.args?.['storyInput'],*/ id: '3', title: 'password', state: 'PASSWORD', icon: './assets/images/LockIcon2ldpi.png', type: 'password', placeholder: 'your_password', hide: false   },\n  ];\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = true;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  background?: string;\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Login2Component';\n\n\n  loginForm: FormGroup;\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-page2--primary' : 'storybook-page2--secondary';\n\n    return ['storybook-page2', mode];\n  }\n\n  @ViewChild('formHeader', { static: false }) mainHeader?: ElementRef;\n\n\n  constructor(private renderer: Renderer2,\n              public forgotPassFormDialog: MatDialog,\n              public registerFormDialog: MatDialog,\n              public replacePassFormDialog: MatDialog,\n              public verificationFormDialog: MatDialog,\n              private eventBusService: EventBusService,\n              public authService: AuthService,\n              public userService: UserService,\n              private tokenStorage: TokenStorageService,\n              private router: Router,\n              private activatedRoute:ActivatedRoute) {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', Validators.minLength(2)),\n      password: new FormControl('', Validators.minLength(2)),\n    });\n\n  }\n\n\n  openForgotPassForm() {\n    const forgotPassFormDialogRef = this.forgotPassFormDialog.open(ForgotPassForm2Component, {\n      data: {username: this.getUsernameCurrentFieldValue, email: \"not@inuse.com\"},\n    });\n\n    forgotPassFormDialogRef.afterClosed().subscribe(result => {\n      console.log('The forget password form dialog was closed');\n      if (result.message === 'Successful verification') {\n        //this.setUsernameCurrentFieldValue(result.data.username);\n        //this.setPasswordCurrentFieldValue(result.data.password.toString());\n      }\n    });\n\n    return forgotPassFormDialogRef.afterClosed().toPromise();\n  }\n\n  openRegisterForm() {\n    const registerFormDialogRef = this.registerFormDialog.open(RegisterForm2Component, {\n      data: {username: this.getUsernameCurrentFieldValue , password: this.getPasswordCurrentFieldValue},\n    });\n\n    registerFormDialogRef.afterClosed().subscribe(result => {\n      console.log('The register form dialog was closed');\n      if (result.message === 'Registration Complete') {\n        //this.setUsernameCurrentFieldValue(result.username);\n        //this.setEmailCurrentFieldValue(result.email);\n      }\n    });\n\n    return registerFormDialogRef.afterClosed().toPromise();\n  }\n\n  openReplacePassForm() {\n    const replacePassFormDialogRef = this.replacePassFormDialog.open(ReplacePassForm2Component, {\n      data: {username: this.getUsernameCurrentFieldValue , password: this.getPasswordCurrentFieldValue},\n    });\n\n    replacePassFormDialogRef.beforeClosed().subscribe(result => {\n      console.log('The replace password form dialog before closed');\n    },\n      err => {\n        console.log(err.error.message);\n      });\n\n\n    replacePassFormDialogRef.afterClosed().subscribe(result => {\n      console.log('The replace password form dialog after closed');\n      if (result.message === 'Replace Password Complete') {\n        this.setUsernameCurrentFieldValue(result.data.username);\n        this.setPasswordCurrentFieldValue(result.data.password.toString());\n      }\n    });\n\n    return replacePassFormDialogRef.afterClosed().toPromise();\n  }\n\n  openVerificationForm() {\n    const verificationFormDialogRef = this.verificationFormDialog.open(VerificationForm2Component, {\n      data: {username: this.getUsernameCurrentFieldValue, email: \"not@inuse.com\"},\n    });\n\n    verificationFormDialogRef.afterClosed().subscribe(result => {\n      console.log('The register form dialog was closed');\n    });\n\n    return verificationFormDialogRef.afterClosed().toPromise();\n  }\n\n\n  ngOnInit(): void {\n    this.eventBusService.emit(new EventData('is2SVRequired', null));\n\n    this.eventBusSub = this.eventBusService.on('openVerification', () => {\n      this.openVerificationForm();\n    });\n  };\n\n\n\n  get getUsernameCurrentFieldValue(): AbstractControl {\n    return this.loginForm.get('username')?.value;\n  }\n\n  private setUsernameCurrentFieldValue(name: string) {\n    this.loginForm.get('username')?.setValue(name);\n  }\n\n  get getPasswordCurrentFieldValue(): AbstractControl {\n    return this.loginForm.get('password')?.value;\n  }\n\n  private setPasswordCurrentFieldValue(pass: string) {\n    this.loginForm.get('password')?.setValue(pass);\n  }\n\n\n  onSubmit(): void {\n    console.warn('Login Request from login-main!');\n    const { username, password } = this.loginForm.value;\n\n    this.isLoading = true;\n    this.authService.login(username, password).subscribe(\n      data => {\n        this.tokenStorage.saveToken(data.accessToken);\n        this.tokenStorage.saveRefreshToken(data.refreshToken);\n        this.tokenStorage.saveUser(data);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getUser().roles;\n        this.profile2();\n      },\n      err => {\n        switch (err.error.message) {\n          case \"Error: A registry process should be made!\":\n            //this.openRegisterForm().then(() => {this.openReplacePassword()});\n            //toPromise((data) => {this.openReplacePassword()});\n            this.openRegisterForm().then(\n              (val) => {\n                console.log(val);\n                switch (val) {\n                  case \"xbutton\":\n                    break;\n                  case \"Registration Complete\":\n                    this.onSubmit();\n                    break;\n                  case undefined:\n                    //this.openReplacePassword();\n                    break;\n                  default:\n                }\n                return 'done2';\n              },\n              (err) => console.error(err));\n            break;\n          case \"User credentials have expired\":\n            this.openReplacePassForm().then(\n              (val) => {\n                console.log(val);\n                switch (val.message) {\n                  case \"xbutton\":\n                    break;\n                  case \"Replace Password Complete\":\n                    this.onSubmit();\n                    break;\n                  case undefined:\n                    //Handle unknown response\n                    break;\n                  default:\n                }\n                return 'done2';\n              },\n              (err) => console.error(err));\n            break;\n          default:\n            this.loginErrorMessage = err.error.message;\n        }\n\n        this.isLoginFailed = true;\n        this.isLoading = false;\n      },\n      () => { this.isLoading = false; })\n  }\n\n\n  reloadPage(): void {\n    this.router.navigate(['/login-main']).then(() => {window.location.reload()});\n  }\n\n  profile2(): void {\n  this.router.navigate(['../profile2'], {relativeTo: this.activatedRoute});\n  }\n\n  configuratin(): void {\n    this.router.navigate(['../profile2/admin2'], {relativeTo: this.activatedRoute});\n  }\n\n  home2(): void {\n  this.router.navigate(['/home']);\n  }\n\n\n\n\n}\n\n/*\n@Component({\n  selector: 'dialog-overview-example-dialog',\n  templateUrl: 'dialog-overview-example-dialog.html',\n})\nexport class DialogOverviewExampleDialog {\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n*/\n\n/*\n@Component({\n  selector: 'password-dialog',\n  templateUrl: './password-dialog.html',\n})\nexport class ExtentionDialog {\n  constructor(\n    public dialogRef: MatDialogRef<ExtentionDialog>,\n    @Inject(MAT_DIALOG_DATA) public extensionData: {name: string, password: string;},\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n*/\n","\n<html>\n<head>\n  <style>\n\n  </style>\n  <title></title>\n</head>\n<body>\n\n<!--article><div class=\"Frame-1 relative\">\n<section class=\"relative \" Style=\"{ 'background': backgroundColor }\"-->\n\n<!--storybook-button-globe></storybook-button-globe-->\n\n<storybook-background1></storybook-background1>\n\n<!--button mat-raised-button (click)=\"openReplacePassForm()\">ReplacePassForm</button>\n<button mat-raised-button (click)=\"openRegisterForm()\">RegisterForm</button>\n<button mat-raised-button (click)=\"openVerificationForm()\">VerificationForm</button>\n<button mat-raised-button (click)=\"openForgotPassForm()\">forgotPassForm</button>\n\n<button mat-raised-button (click)=\"home2()\">home2</button-->\n<button mat-raised-button (click)=\"profile2()\">profile2</button>\n<button mat-raised-button (click)=\"configuratin()\">configuratin</button>\n\n<storybook-login-form\n  [isLoggedIn]=\"false\"\n  [isLoading]=\"isLoading\"\n  [isLoginFailed]=\"isLoginFailed\"\n  [loginErrorMessage]=\"loginErrorMessage\"\n  [mForm]=\"loginForm\"\n  [storyInputs]=\"storyInputsInOrder\"\n  (sendLoginReq)=\"onSubmit()\"\n  (openForgetPassForm)=\"openForgotPassForm()\"\n></storybook-login-form>\n\n\n<!--/section></div>\n</article-->\n\n</body>\n</html>\n\n\n","import {Component, ElementRef, EventEmitter, Inject, OnInit, Output, Renderer2, ViewChild} from '@angular/core';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport {StoryInput} from \"src/stories/inputs/input/story-input.model\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {DialogData} from \"../login-main.component\";\r\nimport {PasswordValidators} from \"../replace-pass-form2/replace-pass-form2.component\";\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'register-form2',\r\n  templateUrl: './register-form2.component.html',\r\n  styleUrls: ['./register-form2.component.css']\r\n})\r\nexport default class RegisterForm2Component implements OnInit {\r\n  registerForm: FormGroup;\r\n  isRegSuccess = false;\r\n  isRegFailed = false;\r\n  submitted = false;\r\n  regErrorMessage: any;\r\n  empList: Array<String> = [];\r\n  apiResponse = { message: '', error: false };\r\n  @ViewChild('form', { static: false }) form?: ElementRef;\r\n  errorFieldSubmitted: any = {};\r\n  closeResult = '';\r\n  public isLoading = false;\r\n\r\n\r\n  @Output() validateMail: EventEmitter<String> = new EventEmitter();\r\n\r\n  storyInputsInOrder: StoryInput[]  = [\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '2', title: 'username', state: 'USER NAME', icon: './assets/images/User2ldpi.png', type: 'text', placeholder: 'Ex.Saul Ramirez', hide: false  },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '3', title: 'password', state: 'PASSWORD', icon: './assets/images/LockIcon2ldpi.png', type: 'password', placeholder: 'your_password' , hide: true },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '5', title: 'phone', state: 'PHONE NUMBER FOR AUTHENTICATION', icon: './assets/images/Phone3ldpi.png', type: 'tel', placeholder: 'Ex: +972547762084', hide: false  },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '4', title: 'email', state: 'EMAIL', icon: './assets/images/AtSign3ldpi.png', type: 'email', placeholder: 'Ex: abc@example.com', hide: false   },\r\n\r\n  ];\r\n\r\n  constructor(private authService: AuthService,\r\n              private renderer: Renderer2,\r\n              public dialogRef: MatDialogRef<RegisterForm2Component>,\r\n              @Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n    this.registerForm = new FormGroup({\r\n      username: new FormControl(data.username.toString(), Validators.minLength(2)),\r\n      password: new FormControl(data.password.toString(), Validators.minLength(2)),\r\n      email: new FormControl('', Validators.email),\r\n      phone: new FormControl('', PasswordValidators.patternValidator(new RegExp(\"(?=.*[0-9 ]{8})\"), {requiresPhoneChars: true}))\r\n    });/*Validators.pattern(new RegExp(\"[0-9 ]{12}\")*/\r\n    this.empList.push(\"admin\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.isRegSuccess) {\r\n      this.dialogRef.close({message: 'Registration Complete', username: this.username.value, email: this.email.value});\r\n    }\r\n    else {\r\n      this.submitted = true;\r\n      const { username, password, email, phone } = this.registerForm.getRawValue();\r\n      this.isLoading = true;\r\n      this.authService.registerForm(username, email, password, phone).subscribe(\r\n        data => {\r\n          console.log(data);\r\n          this.isRegSuccess = true;\r\n          this.isRegFailed = false;\r\n          this.errorFieldSubmitted = {} ;\r\n          this.apiResponse.error = false;\r\n          this.apiResponse.message = 'Successful registration';\r\n        },\r\n        error => {\r\n          const errorResponse = JSON.parse(error.error);\r\n          this.apiResponse.error = true;\r\n          this.apiResponse.message = 'Registration error';\r\n          this.regErrorMessage = errorResponse;\r\n          this.isRegFailed = true;\r\n          if (errorResponse.error && errorResponse.message === 'VALIDATION_FAILED') {\r\n            this.errorFieldSubmitted = errorResponse.data;\r\n          }\r\n          this.isLoading = false;\r\n        },\r\n        () => {\r\n          this.isLoading = false;\r\n          console.log(\"Registration Complete\");}\r\n      );\r\n    }\r\n  }\r\n\r\n  get username(): AbstractControl {\r\n    return this.registerForm.get('username')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.registerForm.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.registerForm.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.registerForm.get('phone')!;\r\n  }\r\n}\r\n","\r\n<storybook-registry-form #form\r\n                  [isRegSuccess]=\"isRegSuccess\"\r\n                  [isRegFailed]=\"isRegFailed\"\r\n                  [regErrorMessage]=\"regErrorMessage\"\r\n                  [isLoading]=\"isLoading\"\r\n                  [storyInputs]=\"storyInputsInOrder\"\r\n                  [mForm]=\"registerForm\"\r\n                  (sendRegReq)=\"onSubmit()\"\r\n                  (clickXButton)=\"this.dialogRef.close('xbutton')\">\r\n</storybook-registry-form>\r\n","import {Component, Inject, Renderer2} from '@angular/core';\r\nimport { MdbModalRef } from 'mdb-angular-ui-kit/modal';\r\nimport {AuthService} from \"src/app/_services/auth.service\";\r\nimport {AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators} from \"@angular/forms\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {DialogData} from \"../login-main.component\";\r\nimport RegisterForm2Component from \"../register-form2/register-form2.component\";\r\nimport {StoryInput} from \"../../../../stories/inputs/input/story-input.model\";\r\nimport {EventData} from \"../../../_shared/event.class\";\r\nimport {workingModeConfiguration} from \"../../../app.config\";\r\nimport {EventBusService} from \"../../../_shared/event-bus.service\";\r\nimport {TokenStorageService} from \"../../../_services/token-storage.service\";\r\n\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: './replace-pass-form2.component.html',\r\n  styleUrls: ['./replace-pass-form2.component.css']\r\n})\r\nexport class ReplacePassForm2Component {\r\n  replacePassForm: FormGroup;\r\n  status = {\r\n    isRepSuccess: false,\r\n    isRepFailed: false,\r\n    submitted: false,\r\n    repErrorMessage: {},\r\n    apiResponse: { message: '', error: false },\r\n    errorFieldSubmitted: {},\r\n    closeResult: '',\r\n  };\r\n\r\n  public isLoading = false;\r\n\r\n  empList: Array<String> = [];\r\n\r\n  closeResult = '';\r\n\r\n  storyInputsInOrder: StoryInput[]  = [\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '1', title: 'oldPassword', state: 'INITIAL PASSWORD', icon: './assets/images/LockIcon2ldpi.png', type: 'password', placeholder: 'your_password' , hide: false },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '2', title: 'password', state: 'NEW PASSWORD', icon: './assets/images/LockIcon2ldpi.png', type: 'password', placeholder: 'your_password' , hide: false },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '3', title: 'confirmPassword', state: 'RE-ENTER NEW PASSWORD', icon: './assets/images/LockIcon2ldpi.png', type: 'password', placeholder: 'your_password' , hide: false },\r\n  ];\r\n\r\n\r\n\r\n\r\n  constructor(private authService: AuthService,\r\n              private renderer: Renderer2,\r\n              private eventBusService: EventBusService,\r\n              private tokenStorageService: TokenStorageService,\r\n              public dialogRef: MatDialogRef<ReplacePassForm2Component>,\r\n              @Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n    this.replacePassForm = new FormGroup({\r\n      userName: new FormControl(data.username, Validators.required),\r\n      oldPassword: new FormControl(data.password, Validators.minLength(1)),\r\n      password: new FormControl('', Validators.compose([\r\n        Validators.minLength(8),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.*[0-9])\"), {requiresDigit: true}),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.*[A-Z])\"), {requiresUppercase: true}),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.*[a-z])\"), {requiresLowercase: true} ),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.*[$@^!%*?&#><{}()+~])\"), {requiresSpecialChars: true})\r\n      ])),\r\n      confirmPassword: new FormControl('', [\r\n        Validators.minLength(8),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.*[0-9])\"), {requiresDigit: true}),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.*[A-Z])\"), {requiresUppercase: true}),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.*[a-z])\"), {requiresLowercase: true}),\r\n        PasswordValidators.patternValidator(new RegExp(\"(?=.*[$@^!%*?&#><{}()+~])\"), {requiresSpecialChars: true})\r\n      ])\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.status.isRepSuccess) {\r\n      this.dialogRef.close({message: 'Replace Password Complete', data: this.data});\r\n    }\r\n    //else if (workingModeConfiguration.runMode.TSV && this.tokenStorageService.getPinCodeToken() == null) {\r\n    //  this.eventBusService.emit(new EventData('openVerification', null));\r\n    //}\r\n    else {\r\n      this.status.submitted = true;\r\n      this.isLoading = true;\r\n      this.changePassword().subscribe(\r\n        data => {\r\n          console.log(data);\r\n          this.status.isRepSuccess = true;\r\n          this.status.isRepFailed = false;\r\n          this.status.errorFieldSubmitted = {};\r\n          this.status.apiResponse.error = false;\r\n          this.status.apiResponse.message = 'Successful registration';\r\n          this.data.password = this.password.value.toString();\r\n        },\r\n        error => {\r\n          switch (error.error.message) {\r\n            case \"Error: Invalidate Pin-Code! User Not Approved\":\r\n              this.eventBusService.emit(new EventData('openVerification', null));\r\n              break;\r\n            default:\r\n              const errorResponse = JSON.parse(error.error);\r\n              this.status.apiResponse.error = true;\r\n              this.status.apiResponse.message = 'Replace password error';\r\n              this.status.repErrorMessage = errorResponse;\r\n              this.status.isRepFailed = true;\r\n              if (errorResponse.error && errorResponse.message === 'VALIDATION_FAILED') {\r\n                this.status.errorFieldSubmitted = errorResponse.data;\r\n              }\r\n          }\r\n\r\n          this.isLoading = false;\r\n\r\n          //Error: Invalidate Pin-Code! User Not Approved\r\n        },\r\n        () => {\r\n          this.isLoading = false;\r\n          console.log('Replace Password closed');}\r\n      );\r\n    }\r\n  }\r\n\r\n  private changePassword() {\r\n    const { userName, oldPassword, password, confirmPassword } = this.replacePassForm.value;\r\n    let pinCodeToken = this.tokenStorageService.getPinCodeToken();\r\n\r\n    if (pinCodeToken == null) {\r\n      pinCodeToken = 'dismiss';\r\n    }\r\n    return this.authService.TSV_ReplacePassForm(userName, oldPassword, password, confirmPassword, pinCodeToken);\r\n  }\r\n\r\n\r\n  get userName(): AbstractControl {\r\n    return this.replacePassForm.get('username')!;\r\n  }\r\n\r\n  get oldPassword(): AbstractControl {\r\n    return this.replacePassForm.get('oldPassword')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.replacePassForm.get('password')!;\r\n  }\r\n\r\n  get confirmPassword(): AbstractControl {\r\n    return this.replacePassForm.get('confirmPassword')!;\r\n  }\r\n\r\n}\r\n\r\nexport class PasswordValidators {\r\n  constructor() {\r\n  }\r\n\r\n  static patternValidator(regex: RegExp, error: ValidationErrors): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } | null => {\r\n      if (!control.value) {\r\n        // if the control value is empty return no error.\r\n        return null;\r\n      }\r\n\r\n      // test the value of the control against the regexp supplied.\r\n      const valid = regex.test(control.value);\r\n\r\n      // if true, return no error, otherwise return the error object passed in the second parameter.\r\n      return valid ? null : error;\r\n    };\r\n  }\r\n}\r\n","<storybook-replace-pass-form #form\r\n                         [status]=\"status\"\r\n                         [isLoading]=\"isLoading\"\r\n                         [storyInputs]=\"storyInputsInOrder\"\r\n                         [mForm]=\"replacePassForm\"\r\n                         [isRepSuccess]=\"status.isRepSuccess\"\r\n                         (sendRegReq)=\"onSubmit()\"\r\n                         (clickXButton)=\"this.dialogRef.close({message: 'xbutton'})\"\r\n></storybook-replace-pass-form>\r\n","import {Component, ElementRef, Inject, OnInit, Renderer2, ViewChild} from '@angular/core';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport {StoryInput} from \"src/stories/inputs/input/story-input.model\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {TokenStorageService} from \"../../../_services/token-storage.service\";\r\nexport interface TSVData {\r\n  username: string;\r\n  email: string;\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'reset-pass-form2',\r\n  templateUrl: './reset-pass-form2.component.html',\r\n  styleUrls: ['./reset-pass-form2.component.css']\r\n})\r\nexport default class ResetPassForm2Component implements OnInit {\r\n  forgotPassForm: FormGroup;\r\n  status = {\r\n    isVerSuccess: false,\r\n    isRecSuccess: false,\r\n    isVerFailed: false,\r\n    verErrorMessage: {},\r\n  }\r\n\r\n  public isLoading = false;\r\n  submitted = false;\r\n  empList: Array<String> = [];\r\n  apiResponse = { message: '', error: false };\r\n  errorFieldSubmitted: any = {};\r\n  closeResult = '';\r\n\r\n  storyInputsInOrder: StoryInput[]  = [\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '2', title: 'username', state: 'USER NAME', icon: './assets/images/User2ldpi.png', type: 'text', placeholder: 'Ex.Saul Ramirez', hide: false  },\r\n  ];\r\n\r\n\r\n  constructor(private authService: AuthService,\r\n              private renderer: Renderer2,\r\n              private tokenStorage: TokenStorageService,\r\n              public dialogRef: MatDialogRef<ResetPassForm2Component>,\r\n              @Inject(MAT_DIALOG_DATA) public data: TSVData) {\r\n    this.forgotPassForm = new FormGroup({\r\n      username: new FormControl(data.username.toString(), Validators.minLength(2)),\r\n    });/*Validators.pattern(new RegExp(\"[0-9 ]{12}\")*/\r\n    this.empList.push(\"admin\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //this.generateNewCodeFor2SV();\r\n  }\r\n\r\n  onSubmit(code: string): void {\r\n    if (this.status.isVerSuccess) {\r\n      this.dialogRef.close({message: 'Successful verification', data: this.data});\r\n    }\r\n    this.submitted = true;\r\n    const { username } = this.forgotPassForm.getRawValue();\r\n    this.data.username = username;\r\n\r\n    this.isLoading = true;\r\n    this.authService.TSV_ValidateCodeByName(username, this.data.email, code).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.tokenStorage.savePinCodeToken(data.pinCodeToken);\r\n        this.status.isVerSuccess = true;\r\n        this.status.isVerFailed = false;\r\n        this.errorFieldSubmitted = {} ;\r\n        this.apiResponse.error = false;\r\n        this.apiResponse.message = 'Successful verification';\r\n      },\r\n      error => {\r\n        const errorResponse = error.error;\r\n        this.apiResponse.error = true;\r\n        this.apiResponse.message = 'Verification error';\r\n        this.status.verErrorMessage = error.error.message;\r\n        this.status.isVerFailed = true;\r\n        this.errorFieldSubmitted = errorResponse.message;\r\n        console.log(errorResponse);\r\n        this.isLoading = false;\r\n      },\r\n      () => {\r\n        this.isLoading = false;\r\n        console.log(\"Validate Code Request Finished\");}\r\n    );\r\n  }\r\n\r\n  generateNewCodeFor2SV() {\r\n    const { username } = this.forgotPassForm.getRawValue();\r\n    this.isLoading = true;\r\n    this.authService.ResetPassByMail(username, this.data.email).subscribe(\r\n      data => {\r\n          if (data.message == \"Password successfully sent to email!\") {\r\n            this.status.isRecSuccess = true;\r\n            this.status.isVerSuccess = true;\r\n          }\r\n        console.log(\"Generating Temporary Password Succeeded\", data);\r\n      },\r\n      error => {\r\n        this.isLoading = false;\r\n        console.log(\"Error: Can't generate temporary password for user \");\r\n      },\r\n      () => {\r\n        this.isLoading = false;\r\n        console.log(\"Sending generation temporary password request complete\");\r\n      });\r\n  }\r\n\r\n  get username(): AbstractControl {\r\n    return this.forgotPassForm.get('username')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.forgotPassForm.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.forgotPassForm.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.forgotPassForm.get('phone')!;\r\n  }\r\n}\r\n","\r\n<storybook-forgot-pass-form\r\n  [status]=\"status\"\r\n  [isLoading]=\"isLoading\"\r\n  [isVerSuccess]=\"status.isVerSuccess\"\r\n  [isRecSuccess]=\"status.isRecSuccess\"\r\n  [storyInputs]=\"storyInputsInOrder\"\r\n  [mForm]=\"forgotPassForm\"\r\n  (sendVerificationReq)=\"onSubmit($event)\"\r\n  (generateNewCodeFor2SV)=\"generateNewCodeFor2SV()\"\r\n  (clickXButton)=\"this.dialogRef.close({message: 'xbutton'})\">\r\n</storybook-forgot-pass-form>\r\n","import {Component, ElementRef, Inject, OnInit, Renderer2, ViewChild} from '@angular/core';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport {StoryInput} from \"src/stories/inputs/input/story-input.model\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {TokenStorageService} from \"../../../_services/token-storage.service\";\r\nexport interface TSVData {\r\n  username: string;\r\n  email: string;\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'verification-form2',\r\n  templateUrl: './verification-form2.component.html',\r\n  styleUrls: ['./verification-form2.component.css']\r\n})\r\nexport default class VerificationForm2Component implements OnInit {\r\n  verificationForm: FormGroup;\r\n  status = {\r\n    isVerSuccess: false,\r\n    isVerFailed: false,\r\n    verErrorMessage: {},\r\n  }\r\n\r\n  public isLoading = false;\r\n  submitted = false;\r\n  empList: Array<String> = [];\r\n  apiResponse = { message: '', error: false };\r\n  @ViewChild('form', { static: false }) form?: ElementRef;\r\n  errorFieldSubmitted: any = {};\r\n  closeResult = '';\r\n\r\n  storyInputsInOrder: StoryInput[]  = [\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '2', title: 'username', state: 'USER NAME', icon: './assets/images/User2ldpi.png', type: 'text', placeholder: 'Ex.Saul Ramirez', hide: false  },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '3', title: 'password', state: 'PASSWORD', icon: './assets/images/LockIcon2ldpi.png', type: 'password', placeholder: 'your_password' , hide: true },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '5', title: 'phone', state: 'PHONE NUMBER FOR AUTHENTICATION', icon: './assets/images/Phone3ldpi.png', type: 'tel', placeholder: 'Ex: +972547762084', hide: false  },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '4', title: 'email', state: 'EMAIL', icon: './assets/images/AtSign3ldpi.png', type: 'email', placeholder: 'Ex: abc@example.com', hide: false   },\r\n\r\n  ];\r\n\r\n  constructor(private authService: AuthService,\r\n              private renderer: Renderer2,\r\n              private tokenStorage: TokenStorageService,\r\n              public dialogRef: MatDialogRef<VerificationForm2Component>,\r\n              @Inject(MAT_DIALOG_DATA) public data: TSVData) {\r\n    this.verificationForm = new FormGroup({\r\n      username: new FormControl(data.username.toString(), Validators.minLength(2)),\r\n      email: new FormControl(data.email.toString(), Validators.email),\r\n    });/*Validators.pattern(new RegExp(\"[0-9 ]{12}\")*/\r\n    this.empList.push(\"admin\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.generateNewCodeFor2SV();\r\n  }\r\n\r\n  onSubmit(code: string): void {\r\n    this.submitted = true;\r\n\r\n    this.isLoading = true;\r\n    this.authService.TSV_ValidateCodeByName(this.data.username, this.data.email, code).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.tokenStorage.savePinCodeToken(data.pinCodeToken);\r\n        this.status.isVerSuccess = true;\r\n        this.status.isVerFailed = false;\r\n        this.errorFieldSubmitted = {} ;\r\n        this.apiResponse.error = false;\r\n        this.apiResponse.message = 'Successful verification';\r\n        this.dialogRef.close('User Validate');\r\n      },\r\n      error => {\r\n        const errorResponse = error.error;\r\n        this.apiResponse.error = true;\r\n        this.apiResponse.message = 'Verification error';\r\n        this.status.verErrorMessage = error.error.message;\r\n        this.status.isVerFailed = true;\r\n        this.errorFieldSubmitted = errorResponse.message;\r\n        console.log(errorResponse);\r\n        this.isLoading = false;\r\n      },\r\n      () => {\r\n        this.isLoading = false;\r\n        console.log(\"Validate Code Request Finished\");}\r\n    );\r\n  }\r\n\r\n  generateNewCodeFor2SV() {\r\n    this.isLoading = true;\r\n    this.authService.TSV_GenerateCodeByName(this.data.username, this.data.email).subscribe(\r\n      data => {\r\n        console.log(\"Generating Code Succeeded\", data);\r\n      },\r\n      error => {\r\n        this.isLoading = false;\r\n        console.log(\"Error: Can't generate code for user \");\r\n      },\r\n      () => {\r\n        this.isLoading = false;\r\n        console.log(\"Sending Generation Code Request Complete\");\r\n      });\r\n  }\r\n\r\n  get username(): AbstractControl {\r\n    return this.verificationForm.get('username')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.verificationForm.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.verificationForm.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.verificationForm.get('phone')!;\r\n  }\r\n}\r\n","\r\n<storybook-verification-form\r\n  [status]=\"status\"\r\n  [isLoading]=\"isLoading\"\r\n  (sendVerificationReq)=\"onSubmit($event)\"\r\n  (generateNewCodeFor2SV)=\"generateNewCodeFor2SV()\"\r\n  (clickXButton)=\"this.dialogRef.close({message: 'xbutton'})\">\r\n</storybook-verification-form>\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport RegisterForm2Component from \"./login-main/register-form2/register-form2.component\";\nimport {LoginMainComponent} from \"./login-main/login-main.component\";\nimport {AppRoutingGuard} from \"../app-routing.guard\";\n\n\n\n\n\n\nconst routes: Routes = [\n  { path: 'login-main', component: LoginMainComponent },\n  { path: 'register-form2', component: RegisterForm2Component },\n  {\n    path: 'profile2',\n    loadChildren: () => import('./profile2/profile2.module').then(m => m.Profile2Module),\n    canActivate: [AppRoutingGuard]\n  },\n  { path: '', redirectTo: 'login-main', pathMatch: 'full' },/**/\n  { path: '**', redirectTo: 'login-main', },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class Login2RoutingModule { }\n","import { NgModule } from '@angular/core';\n\nimport { Login2RoutingModule } from './login2-routing.module';\nimport RegisterForm2Component  from './login-main/register-form2/register-form2.component';\nimport {LoginMainComponent} from './login-main/login-main.component';\nimport {StorybookModule} from \"../storybook/storybook.module\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {ReplacePassForm2Component} from \"./login-main/replace-pass-form2/replace-pass-form2.component\";\nimport VerificationForm2Component from \"./login-main/verification-form2/verification-form2.component\";\nimport {Profile2Module} from \"./profile2/profile2.module\";\n\n\n\n\n@NgModule({\n  declarations: [\n    ReplacePassForm2Component,\n    RegisterForm2Component,\n    VerificationForm2Component,\n    LoginMainComponent,\n  ],\n  imports: [\n    Login2RoutingModule,\n    StorybookModule,\n    MatDialogModule,\n    MatButtonModule,\n    Profile2Module\n  ],\n  exports: [\n    ReplacePassForm2Component,\n    RegisterForm2Component\n  ],\n  providers: [ReplacePassForm2Component],\n  bootstrap: []\n})\nexport class Login2Module { }\n","import {Component, ElementRef, EventEmitter,Inject, OnInit, Output, Renderer2, ViewChild} from '@angular/core';\r\nimport { UserService } from 'src/app/_services/user.service';\r\nimport {AuthService} from \"src/app/_services/auth.service\";\r\nimport {AbstractControl, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {ConfigurationInput} from \"../../../../stories/inputs/configuration-input/configuration-input.model\";\r\nimport {EventBusService} from \"../../../_shared/event-bus.service\";\r\nimport {TokenStorageService} from \"../../../_services/token-storage.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport MyAccountFormComponent from \"../../../../stories/forms/my-account-form/my-account-form.component\";\r\nimport * as mStoryInput from \"../../../../stories/inputs/configuration-input/configuration-input.stories\";\r\nimport {PasswordValidators} from \"../../login-main/replace-pass-form2/replace-pass-form2.component\";\r\nimport {throwError} from \"rxjs\";\r\nimport {EventData} from \"../../../_shared/event.class\";\r\nimport {MyAccountData} from \"../my-account-form2/my-account-form2.component\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {PinCodeLength} from \"../../../../stories/inputs/configuration-input/configuration-input.stories\";\r\n\r\n\r\n\r\nexport class Prop {\r\n  propName: string= '';\r\n  propValue: string= '';\r\n\r\n  Prop(propName: string , propValue: string) {\r\n    this.propName = propName;\r\n    this.propValue = propValue;\r\n  }\r\n\r\n  getPropName(): string {\r\n  return this.propName;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-board-admin2',\r\n  templateUrl: './board-admin2.component.html',\r\n  styleUrls: ['./board-admin2.component.css']\r\n})\r\nexport class BoardAdmin2Component implements OnInit {\r\n  configurationForm: FormGroup;\r\n  isConfigSuccess = false;\r\n  isConfigFailed = false;\r\n  submitted = false;\r\n  configErrorMessage: any;\r\n  empList: Array<String> = [];\r\n  apiResponse = { message: '', error: false };\r\n  @ViewChild('form', { static: false }) form?: ElementRef;\r\n  @ViewChild('username', { static: false }) userField?: ElementRef;\r\n  configurationData: any;\r\n  closeResult = '';\r\n\r\n  properties: Array<Prop>= [];\r\n\r\n\r\n\r\n\r\n\r\n  @Output() validateMail: EventEmitter<String> = new EventEmitter();\r\n\r\n  storyInputsInOrder: ConfigurationInput[]  = [\r\n    {...mStoryInput.PassExpDays.args?.['storyInput'], id: '1'  },\r\n    {...mStoryInput.PreviousAlertPassExpDays.args?.['storyInput'], id: '2'  },\r\n    {...mStoryInput.TSV.args?.['storyInput'], id: '3'  },\r\n    {...mStoryInput.PinCodeLength.args?.['storyInput'], id: '4'  },\r\n    {...mStoryInput.PinCodeValDura.args?.['storyInput'], id: '5'  },\r\n  ];\r\n\r\n  constructor(private eventBusService: EventBusService,\r\n              private token: TokenStorageService,\r\n              private authService: AuthService,\r\n              private router: Router,\r\n              private activatedRoute:ActivatedRoute,\r\n              /*public dialogRef: MatDialogRef<MyAccountFormComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: MyAccountData*/) {\r\n    this.configurationForm = new FormGroup({\r\n      tadiran_gate_passExpDays: new FormControl(22),\r\n      tadiran_gate_PreviousAlertPassExpDays: new FormControl(15),\r\n      tadiran_gate_TSV: new FormControl(false),/**/\r\n      tadiran_gate_pinCodeLength: new FormControl(4),\r\n      tadiran_gate_pinCodeValDura: new FormControl(15),\r\n    });\r\n    this.empList.push(\"admin\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getConfigurationData();\r\n    /*this.userService.getAccountDetails().subscribe(\r\n      data => { this.accountDetails = data; },\r\n      err => { this.accountDetails = JSON.parse(err.error).message; }\r\n    );*/\r\n  }\r\n\r\n\r\n  // Change name of property Ex. \"tadiran.gate.pass-exp-days\" => \"tadiran_gate_passExpDays\"\r\n  changeNameToField(propName: string) {\r\n    return propName.replace(/\\./gi,'_')\r\n      .split(\"-\").map(function(input){return (!!input) ? input.charAt(0).toUpperCase() + input.substr(1).toLowerCase() : ''}).join(\"\");\r\n  }\r\n\r\n  getConfigurationData(): void {\r\n    //let prop: any;\r\n    const token = this.token.getToken();\r\n    if (token)\r\n      this.authService.getConfigurationData().subscribe(configurationData => {\r\n        this.configurationData=configurationData;\r\n\r\n        this.properties = (this.configurationData.prop as Array<Prop>);\r\n        this.properties.forEach((p ) => {\r\n          //console.log(\"propName: \"+p.propName+\"     propValue: \"+p.propValue);\r\n          let configInput = this.storyInputsInOrder.find(configInput => configInput.type.match(p.propName.valueOf().toString()));\r\n          if (configInput != null) {\r\n            let pn = p.propName.replace(/\\./gi,'_');\r\n            this.configurationForm.get(configInput.name)?.setValue(p.propValue);\r\n            console.log(\"propValue:   \"+p.propValue);\r\n          }\r\n          //let prop: new Prop\r\n        });\r\n\r\n        console.log('Account Details is received from server.');\r\n      }, (err) => {\r\n        console.log('Can not get user account details');\r\n        return throwError(err);\r\n      });\r\n\r\n  }\r\n\r\n  doLogout(): void {\r\n    console.log(\"logging out\");\r\n    this.eventBusService.emit(new EventData('logout', null));\r\n  }\r\n\r\n  openChangePassword() {\r\n    this.eventBusService.emit(new EventData('openChangePassword', null));\r\n  }\r\n\r\n  returnPortal() {\r\n    //todo: display warn message to user - changes will not be saved!\r\n    console.log(\"openPortal\");\r\n    this.router.navigate(['../'], {relativeTo: this.activatedRoute});\r\n    //this.eventBusService.emit(new EventData('openPortal', null));\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.isConfigSuccess) {\r\n      //todo: Display confirmation message - changes have been applied!\r\n    }\r\n    else {\r\n      this.submitted = true;\r\n      let changedProperties: Array<Prop>=[] ;\r\n\r\n      this.properties.forEach((p ) => {\r\n        //console.log(\"propName: \"+p.propName+\"     propValue: \"+p.propValue);\r\n        let configInput = this.storyInputsInOrder.find(configInput => configInput.type.match(p.propName.valueOf().toString()));\r\n        if (configInput != null) {\r\n          p.propValue = this.configurationForm.get(configInput.name)?.value;\r\n          console.log(\"propValue:   \"+p.propValue);\r\n          changedProperties.push(p);\r\n        }\r\n      });\r\n\r\n\r\n      this.authService.setConfigurationData(JSON.stringify(changedProperties)).subscribe(\r\n        data => {\r\n          console.log(data);\r\n          this.isConfigSuccess = true;\r\n          this.isConfigFailed = false;\r\n          this.apiResponse.error = false;\r\n          this.apiResponse.message = 'Successful configuration';\r\n        },\r\n        error => {\r\n          const errorResponse = JSON.parse(error.error);\r\n          this.apiResponse.error = true;\r\n          this.apiResponse.message = 'Configuration error';\r\n          this.configErrorMessage = errorResponse;\r\n          this.isConfigFailed = true;\r\n        },\r\n        () => {\r\n          console.log(\"Configuration Saved\");}\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n","<storybook-background1></storybook-background1>\r\n\r\n<storybook-configuration-form  #form\r\n                               [isRegSuccess]=\"isConfigSuccess\"\r\n                               [isRegFailed]=\"isConfigFailed\"\r\n                               [regErrorMessage]=\"configErrorMessage\"\r\n                               [storyInputs]=\"storyInputsInOrder\"\r\n                               [mForm]=\"configurationForm\"\r\n                               (saveChanges)=\"onSubmit()\"\r\n                               (clickXButton)=\"returnPortal()\"\r\n                               (onLogout)=\"doLogout()\"\r\n                               (changePassword)=\"openChangePassword()\">\r\n</storybook-configuration-form>\r\n\r\n\r\n","<storybook-background1></storybook-background1>\r\n\r\n<storybook-configuration-form>\r\n\r\n</storybook-configuration-form>\r\n\r\n<div class=\"container\">\r\n\r\n  <header class=\"jumbotron\">\r\n    <p>{{ content }}</p>\r\n  </header>\r\n\r\n\r\n  <!--storybook-card-rugged  ></storybook-card-rugged-->\r\n    <div class=\"col-md-12\">\r\n\r\n      <!--div class=\"card\"-->\r\n\r\n\r\n      <form\r\n        *ngIf=\"!isSuccessful\"\r\n        name=\"form\"\r\n        (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n        #f=\"ngForm\"\r\n        novalidate\r\n        style=\"bottom: 2px;\"\r\n      >\r\n        <div class=\"form-group input-box\">\r\n          <label for=\"userName\" class=\"input-label\">Time for password to be expired </label>\r\n\r\n          <input type=\"number\" style=\"width: 70px;\" class=\"form-control input-field\" name=\"userName\" [(ngModel)]=\"form.userName\"\r\n                 required minlength=\"3\" maxlength=\"20\" #userName=\"ngModel\"/>\r\n          <div class=\"alert-danger\" *ngIf=\"userName.errors && f.submitted\">\r\n            <div *ngIf=\"userName.errors.required\">Username is required</div>\r\n            <div *ngIf=\"userName.errors.minlength\">\r\n              Username must be at least 3 characters\r\n            </div>\r\n            <div *ngIf=\"userName.errors.maxlength\">\r\n              Username must be at most 20 characters\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group input-box\">\r\n          <label for=\"email\" class=\"input-label\">Alert duration before for pass expired</label>\r\n          <input type=\"number\" class=\"form-control input-field\" name=\"email\" [(ngModel)]=\"form.email\"\r\n                 required email #email=\"ngModel\"/>\r\n          <div class=\"alert-danger\" *ngIf=\"email.errors && f.submitted\">\r\n            <div *ngIf=\"email.errors.required\">Email is required</div>\r\n            <div *ngIf=\"email.errors.email\">\r\n              Email must be a valid email address\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group input-box\">\r\n          <label for=\"password\" class=\"input-label\">Password</label>\r\n          <input type=\"password\" class=\"form-control input-field\" name=\"password\" [(ngModel)]=\"form.password\"\r\n                 required minlength=\"6\" #password=\"ngModel\"/>\r\n          <div class=\"alert-danger\" *ngIf=\"password.errors && f.submitted\">\r\n            <div *ngIf=\"password.errors.required\">Password is required</div>\r\n            <div *ngIf=\"password.errors.minlength\">\r\n              Password must be at least 6 characters\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group input-box\">\r\n          <label for=\"privilege\" class=\"input-label\">Privilege Level</label>\r\n          <select type=\"privilege\" class=\"form-control  input-field\" name=\"privilege\" id=\"pet-select\"\r\n                  [(ngModel)]=\"form.roles\" required #roles=\"ngModel\">\r\n            <option value=\"\">--Please choose an option--</option>\r\n            <option value=\"admin\">Admin</option>\r\n            <option value=\"mod\">Moderator</option>\r\n            <option value=\"user\">User</option>\r\n          </select>\r\n        </div>\r\n        <br>\r\n        <div class=\"form-group\" style=\"position: static; display: flex; justify-content: center;\">\r\n          <button class=\"btn btn-primary btn-block save-changes-button \">Save Changes</button>\r\n        </div>\r\n\r\n        <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\r\n          Signup failed!<br />{{ errorMessage }}\r\n        </div>\r\n      </form>\r\n\r\n      <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\r\n        Your registration is successful!\r\n      </div>\r\n\r\n    </div>\r\n  <!--/div-->\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/_services/user.service';\r\nimport {AuthService} from \"src/app/_services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-board-admin',\r\n  templateUrl: './board-admin.component.html',\r\n  styleUrls: ['./board-admin.component.css']\r\n})\r\nexport class BoardAdminComponent implements OnInit {\r\n  content?: string;\r\n  form: any = {\r\n    username: null,\r\n    email: null/*new FormControl('', Validators.email)*/,\r\n    password: null,\r\n    roles: null,\r\n  };\r\n  isSuccessful = false;\r\n  isSignUpFailed = false;\r\n  errorMessage = '';\r\n  rolesList: Array<String> = [];\r\n\r\n  constructor(private userService: UserService, private authService: AuthService) {\r\n\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getAdminBoard().subscribe(\r\n      data => {\r\n        this.content = data;\r\n      },\r\n      err => {\r\n        this.content = JSON.parse(err.error).message;\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const { username, email, password, roles } = this.form;\r\n    this.rolesList.push(roles);\r\n\r\n    this.authService.register(username, email, password, this.rolesList).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.isSuccessful = true;\r\n        this.isSignUpFailed = false;\r\n      },\r\n      err => {\r\n        this.errorMessage = err.error.message;\r\n        this.isSignUpFailed = true;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-board-moderator',\r\n  templateUrl: './board-moderator.component.html',\r\n  styleUrls: ['./board-moderator.component.css']\r\n})\r\nexport class BoardModeratorComponent implements OnInit {\r\n  content?: string;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getModeratorBoard().subscribe(\r\n      data => {\r\n        this.content = data;\r\n      },\r\n      err => {\r\n        this.content = JSON.parse(err.error).message;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <header class=\"jumbotron\">\r\n    <p>{{ content }}</p>\r\n  </header>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/_services/user.service';\r\nimport { EventBusService } from 'src/app/_shared/event-bus.service';\r\nimport { EventData } from 'src/app/_shared/event.class';\r\n\r\n@Component({\r\n  selector: 'app-board-user',\r\n  templateUrl: './board-user.component.html',\r\n  styleUrls: ['./board-user.component.css']\r\n})\r\nexport class BoardUserComponent implements OnInit {\r\n  content?: string;\r\n\r\n  constructor(private userService: UserService, private eventBusService: EventBusService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getUserBoard().subscribe(\r\n      data => {\r\n        this.content = data;\r\n      },\r\n      err => {\r\n        this.content = err.error.message || err.error || err.message;\r\n        if (err.status === 403)\r\n          this.eventBusService.emit(new EventData('logout', null));\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <br>\r\n  <header class=\"background jumbotron  \">\r\n    <h1 class=\"font_0\">\r\n      <span class=\"\" style=\"font-size:44px;\">\r\n        <span>{{ content }}</span>\r\n      </span>\r\n    </h1>\r\n  </header>\r\n\r\n  <embed type=\"text/html\" src=\"https://www.tadirantele.com/\" height=\"300px\" width=\"100%\" >\r\n\r\n  <h2>Iframe - Target for a Link</h2>\r\n.\r\n  <iframe src=\"https://localhost:8445/accRealTime\" sandbox=\"allow-top-navigation-by-user-activation allow-same-origin allow-scripts allow-popups allow-forms\"  name=\"iframe_a\" height=\"300px\" width=\"100%\" title=\"Iframe Example\">\r\n  </iframe>\r\n\r\n\r\n\r\n\r\n  <p><a href=\"https://172.28.8.245:8443/aeonix/mainForm.jsf\" target=\"iframe_a\">aeonix</a></p>\r\n  <p><a href=\"https://en.wikipedia.org/wiki/Avocado\" id=\"testid\" target=\"iframe_a\">wikipedia</a></p>\r\n  <p><a href=\"https://172.28.1.130:8445/accRealTime\" target=\"iframe_a\">accRealTime</a></p>\r\n  <p>When the target attribute of a link matches the name of an iframe, the link will open in the iframe.</p>\r\n\r\n    <!--iframe src=\"https://172.28.1.130:8445/accRealTime\" name=\"iframe_a\" height=\"300px\" width=\"100%\" title=\"Iframe Example\">\r\n  </iframe-->\r\n</div>\r\n","import {Component, ElementRef, EventEmitter, Inject, OnInit, Output, Renderer2, ViewChild} from '@angular/core';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {PasswordValidators} from \"../../login-main/replace-pass-form2/replace-pass-form2.component\";\r\nimport MyAccountFormComponent from \"src/stories/forms/my-account-form/my-account-form.component\";\r\nimport {AccountInput} from \"src/stories/inputs/account-input/account-input.model\";\r\nimport {EventData} from \"src/app/_shared/event.class\";\r\nimport {EventBusService} from \"src/app/_shared/event-bus.service\";\r\nimport {throwError} from \"rxjs\";\r\nimport {TokenStorageService} from \"src/app/_services/token-storage.service\";\r\nimport {UserService} from \"src/app/_services/user.service\";\r\n\r\n\r\nexport interface MyAccountData {\r\n  currentUser: any;\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'my-account-form2',\r\n  templateUrl: './my-account-form2.component.html',\r\n  styleUrls: ['./my-account-form2.component.css']\r\n})\r\nexport default class MyAccountForm2Component implements OnInit {\r\n  registerForm: FormGroup;\r\n  isRegSuccess = false;\r\n  isRegFailed = false;\r\n  submitted = false;\r\n  regErrorMessage: any;\r\n  empList: Array<String> = [];\r\n  apiResponse = { message: '', error: false };\r\n  @ViewChild('form', { static: false }) form?: ElementRef;\r\n  @ViewChild('username', { static: false }) userField?: ElementRef;\r\n  errorFieldSubmitted: any = {};\r\n  accountDetails: any;\r\n  closeResult = '';\r\n\r\n\r\n\r\n  @Output() validateMail: EventEmitter<String> = new EventEmitter();\r\n\r\n  storyInputsInOrder: AccountInput[]  = [\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '1', title: this.data.currentUser.username, state: 'USER NAME', icon: '', type: 'enable-profile-picture', placeholder: '', hide: false  },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '2', title: 'phone', state: 'PHONE NUMBER FOR AUTHENTICATION', icon: './assets/images/Phone3ldpi.png', type: 'tel', placeholder: 'Ex: +972547762084', hide: false  },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '3', title: 'email', state: 'EMAIL', icon: './assets/images/AtSign3ldpi.png', type: 'email', placeholder: 'Ex: abc@example.com', hide: false   },\r\n    {/*...mStoryInput.Default.args?.['storyInput'],*/ id: '4', title: 'password', state: 'PASSWORD', icon: './assets/images/LockIcon2ldpi.png', type: 'password', placeholder: 'your_password' , hide: false },\r\n  ];\r\n\r\n  constructor(private eventBusService: EventBusService,\r\n              private token: TokenStorageService,\r\n              private authService: AuthService,\r\n              private tokenStorageService: TokenStorageService,\r\n              private renderer: Renderer2,\r\n              public dialogRef: MatDialogRef<MyAccountFormComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: MyAccountData) {\r\n    this.registerForm = new FormGroup({\r\n      username: new FormControl(''),\r\n      email: new FormControl('email', Validators.email),\r\n      phone: new FormControl('0544444444', PasswordValidators.patternValidator(new RegExp(\"(?=.*[0-9 ]{8})\"), {requiresPhoneChars: true}))\r\n    });/*Validators.pattern(new RegExp(\"[0-9 ]{12}\")*/\r\n    this.empList.push(\"admin\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAccountDetails();\r\n    /*this.userService.getAccountDetails().subscribe(\r\n      data => { this.accountDetails = data; },\r\n      err => { this.accountDetails = JSON.parse(err.error).message; }\r\n    );*/\r\n  }\r\n\r\n  getAccountDetails(): void {\r\n\r\n    const token = this.token.getToken();\r\n    if (token)\r\n      this.authService.getAccountDetails(token).subscribe(accountDetails => {\r\n        this.accountDetails=(accountDetails);\r\n        this.setUsername(accountDetails.username);\r\n        this.setEmail(accountDetails.email);\r\n        this.setPhone(accountDetails.phone);\r\n        console.log('Account Details is received from server.');\r\n      }, (err) => {\r\n        console.log('Can not get user account details');\r\n        return throwError(err);\r\n      });\r\n\r\n  }\r\n\r\n  doLogout(): void {\r\n    console.log(\"logging out\")\r\n    this.eventBusService.emit(new EventData('logout', null));\r\n  }\r\n\r\n  openChangePassword() {\r\n    this.eventBusService.emit(new EventData('openChangePassword', null));\r\n  }\r\n\r\n  openUser() {\r\n    this.eventBusService.emit(new EventData('openConfiguration', null));\r\n    this.dialogRef.close('Open Configuration Tools');\r\n  }\r\n\r\n  displayConfigButton(): boolean {\r\n    return this.tokenStorageService.isSupervisorAdmin();\r\n  }\r\n\r\n\r\n  onSubmit(): void {\r\n    if (this.isRegSuccess) {\r\n      this.dialogRef.close('Registration Complete');\r\n    }\r\n    else {\r\n      this.submitted = true;\r\n      const { username, password, email, phone } = this.registerForm.getRawValue();\r\n\r\n      this.authService.registerForm(username, email, password, phone).subscribe(\r\n        data => {\r\n          console.log(data);\r\n          this.isRegSuccess = true;\r\n          this.isRegFailed = false;\r\n          this.errorFieldSubmitted = {} ;\r\n          this.apiResponse.error = false;\r\n          this.apiResponse.message = 'Successful registration';\r\n        },\r\n        error => {\r\n          const errorResponse = JSON.parse(error.error);\r\n          this.apiResponse.error = true;\r\n          this.apiResponse.message = 'Registration error';\r\n          this.regErrorMessage = errorResponse;\r\n          this.isRegFailed = true;\r\n          if (errorResponse.error && errorResponse.message === 'VALIDATION_FAILED') {\r\n            this.errorFieldSubmitted = errorResponse.data;\r\n          }\r\n        },\r\n        () => {\r\n          console.log(\"Registration Complete\");}\r\n      );\r\n    }\r\n  }\r\n\r\n  get username(): AbstractControl {\r\n    return this.registerForm.get('username')!;\r\n  }\r\n\r\n\r\n  setUsername(name: string): void {\r\n    this.registerForm.get('username')?.setValue(name)!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.registerForm.get('email')!;\r\n  }\r\n\r\n  setEmail(email: string): void {\r\n    return this.registerForm.get('email')?.setValue(email);\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.registerForm.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.registerForm.get('phone')!;\r\n  }\r\n\r\n  setPhone(phone: string): void {\r\n    return this.registerForm.get('phone')?.setValue(phone);\r\n  }\r\n\r\n}\r\n","\r\n<storybook-my-account-form #form\r\n  [isRegSuccess]=\"isRegSuccess\"\r\n  [isRegFailed]=\"isRegFailed\"\r\n  [regErrorMessage]=\"regErrorMessage\"\r\n  [storyInputs]=\"storyInputsInOrder\"\r\n  [displayToolButton]=\"displayConfigButton()\"\r\n  [mForm]=\"registerForm\"\r\n  (sendRegReq)=\"onSubmit()\"\r\n  (clickXButton)=\"this.dialogRef.close('xbutton')\"\r\n  (onLogout)=\"doLogout()\"\r\n  (changePassword)=\"openChangePassword()\"\r\n  (openUser)=\"openUser()\"\r\n></storybook-my-account-form>\r\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"src/app/_services/auth.service\";\nimport {TokenStorageService} from \"src/app/_services/token-storage.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {AppConfig, workingModeConfiguration} from \"src/app/app.config\";\nimport {BehaviorSubject, Subscription, throwError} from \"rxjs\";\nimport {UserService} from \"src/app/_services/user.service\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {ReplacePassForm2Component} from  \"src/app/login2/login-main/replace-pass-form2/replace-pass-form2.component\";\nimport {EventBusService} from \"src/app/_shared/event-bus.service\";\nimport MyAccountForm2Component from \"../my-account-form2/my-account-form2.component\";\nimport VerificationForm2Component from \"../../login-main/verification-form2/verification-form2.component\";\nimport {EventData} from \"src/app/_shared/event.class\";\n\n\n\n\nexport interface DialogData {\n  username: string;\n  password: string;\n}\n\n\n\n@Component({\n  selector: 'profile2',\n  templateUrl: './portal.component.html',\n  styleUrls: ['./portal.component.scss']\n})\nexport default class PortalComponent implements OnInit {\n\n  currentUser: any;\n  accessToken: any;\n  refreshToken: any;\n  windowObjectReference: any;\n  refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n  public isLoading = false;\n  public appConfig: any;\n  private TOKEN_KEY: string;\n  eventBusSub?: Subscription;\n  permittedWebAppList = {\n    realtime: false,\n    scriptDesigner: false,\n    agent: false,\n    aeonixAdmin: false,\n    admin: false\n  };\n\n\n  isNotify(): boolean {\n   return (this.passExp < this.previousAlertPassExp);\n  }\n\n\n  constructor(private authService: AuthService,\n              private userService: UserService,\n              private token: TokenStorageService,\n              private eventBusService: EventBusService,\n              private router: Router,\n              private activatedRoute:ActivatedRoute,\n              public myAccountFormDialog: MatDialog,\n              public replacePassFormDialog: MatDialog,\n              public verificationFormDialog: MatDialog) {\n    this.TOKEN_KEY = AppConfig.endpoints.TOKEN_KEY;\n  }\n\n\n  openMyAccountForm() {\n    const myAccountFormDialogRef = this.myAccountFormDialog.open(MyAccountForm2Component, {\n      data: {currentUser: this.currentUser},\n    });\n\n    myAccountFormDialogRef.afterClosed().subscribe(result => {\n      console.log('The register form dialog was closed');\n    });\n\n    return myAccountFormDialogRef.afterClosed().toPromise();\n  }\n\n  openReplacePassForm() {\n    const replacePassFormDialogRef = this.replacePassFormDialog.open(ReplacePassForm2Component, {\n      data: {username: this.currentUser.username , password: ''},\n    });\n\n    replacePassFormDialogRef.beforeClosed().subscribe(result => {\n        console.log('The replace password form dialog before closed');\n      },\n      err => {\n        console.log(err.error.message);\n      });\n\n\n    replacePassFormDialogRef.afterClosed().subscribe(result => {\n      console.log('The replace password form dialog after closed');\n      if (result.message === 'Replace Password Complete') {\n        console.log('Replace Password Complete');\n        this.setPassExpAlertData();\n      }\n    });\n\n    return replacePassFormDialogRef.afterClosed().toPromise();\n  }\n\n  openVerificationForm() {\n    const verificationFormDialogRef = this.verificationFormDialog.open(VerificationForm2Component, {\n      data: {username: this.currentUser.username , email: this.currentUser.email},\n    });\n\n    verificationFormDialogRef.afterClosed().subscribe(result => {\n      console.log('The register form dialog was closed');\n    });\n\n    return verificationFormDialogRef.afterClosed().toPromise();\n  }\n\n\n\n  public passExp: number = 0; // By Days\n  public previousAlertPassExp: number = 0; // By Days\n\n\n  ngOnInit(): void {\n    this.currentUser = this.token.getUser();\n    this.accessToken = this.currentUser.accessToken;\n    this.refreshToken = this.currentUser.refreshToken;\n    this.setPassExpAlertData();\n    this.setPermittedWebAppList();\n    this.is2SVRequired();\n\n    this.eventBusSub = this.eventBusService.on('openChangePassword', () => {\n      this.openReplacePassForm();\n    });\n\n    this.eventBusSub = this.eventBusService.on('openVerification', () => {\n      this.openVerificationForm();\n    });\n\n    this.eventBusSub = this.eventBusService.on('openConfiguration', () => {\n      this.configuratin();\n    });\n\n    this.eventBusSub = this.eventBusService.on('openPortal', () => {\n      this.portal();\n    });\n\n  }\n\n  is2SVRequired() {\n    this.eventBusService.emit(new EventData('is2SVRequired', null));\n  }\n\n  setPassExpAlertData(): void {\n\n    const token = this.token.getToken();\n    if (token)\n      this.authService.getPassExpireDate(token).subscribe(data => {\n        this.passExp = data.passExp;\n        this.previousAlertPassExp = data.previousAlertPassExp;\n        console.log('Password Expire Date: '+this.passExp);\n        console.log('previous Alert To Password Expire Date: '+this.previousAlertPassExp);\n      }, (err) => {\n        console.log('Password Expire Date: update failed');\n        return throwError(err);\n      });\n\n  }\n\n  setPermittedWebAppList(): void {\n    const token = this.token.getToken();\n    if (token)\n      this.authService.getPermittedWebAppList(token).subscribe(permittedWebAppList => {\n        this.permittedWebAppList=(permittedWebAppList);\n        console.log('Permitted web apps list is received from server.');\n      }, (err) => {\n        console.log('Can not get server data defining permitted web apps for user');\n        return throwError(err);\n      });\n  }\n\n  openapp(): void {\n    console.log('window.location.origin.toString():  '+window.location.origin.toString());\n\n    this.router.navigate([]).then(result => { this.windowObjectReference = window.open(AppConfig.accServer.ACCWEBServers+'/accGCCS/'/*window.location.origin.toString()+\"/profile\"*/); });\n    console.log('window.location.origin.toString():  '+ this.windowObjectReference.window.document.getElementById(\"profile_title\").innerHTML);\n    var promise = new Promise((resolve, reject) => {this.windowObjectReference.window.document.getElementById(\"profile_title\").innerHTML = \"new title\";});\n\n    console.log('window.location.origin.toString():  '+ this.windowObjectReference.window.document.getElementById(\"profile_title\").innerHTML);\n\n  }\n\n  public forseRefreshToken(): void {\n\n    if (!this.isLoading) {\n      this.isLoading = true;\n      const token = this.token.getRefreshToken();\n      if (token)\n        this.authService.refreshToken(token).subscribe(\n          data => {\n            this.isLoading = false;\n            this.token.saveToken(data.accessToken);\n            this.token.saveRefreshToken(data.refreshToken);\n            this.refreshTokenSubject.next(data.accessToken);\n            this.currentUser = this.token.getUser();\n            this.accessToken = this.token.getToken();\n            this.refreshToken = this.token.getRefreshToken();\n          },\n          (err) => {\n            this.isLoading = false;\n\n            this.token.signOut();\n            return throwError(err);\n          }\n        );\n    }\n  }\n\n  public async openNewTabForApp(appRequest: string[]) {\n    const [webapp, webappURLPrefix] = appRequest.values();\n    var newAccessToken = \"\";\n    var newRefreshToken = \"\";\n    var newCurrentUser = \"\";\n\n\n    if (!this.isLoading) {\n      const token = this.token.getRefreshToken();\n      if (token) {\n\n        //const timeout = new Promise((res) => setTimeout(() => res(\"openNewTabForApp - timeout!\"), 5000));\n        const timeout = (prom: Promise<any>, time: number, exception: Symbol) => {\n          let timer: any;\n          return Promise.race([\n            prom,\n            new Promise((_r, rej) => timer = setTimeout(rej, time, exception))\n          ]).finally(() => clearTimeout(timer));\n        }\n\n\n        const promise = async () => {\n          new Promise<any>((resolve, reject) => {\n            console.log('Spinner Start.');\n            this.isLoading = true;\n            return this.authService.webapptab(token, webapp).toPromise()\n              .then((val: any) => {\n                console.log('Request approved by the server.');\n                newAccessToken = (val.accessToken);\n                newRefreshToken = (val.refreshToken);\n                newCurrentUser = (val);\n              })\n              .then((result) => {\n                  this.router.navigate([])\n                    .then(result => {\n                      this.windowObjectReference = window.open(AppConfig.accServer.ACCWEBServers + webappURLPrefix);\n                    })\n                    .then((result) => {\n                        console.log('Plant the secret ingredient.');\n                        this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.TOKEN_KEY, newAccessToken);\n                        this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.REFRESHTOKEN_KEY, newRefreshToken);\n                        this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.USER_KEY, JSON.stringify(newCurrentUser));\n                      },\n                      (err) => {\n                        console.log('failed loading the app webpage.');\n                        reject(throwError(err));\n                      })\n                },\n                (err) => {\n                  console.log('cant get a server request appropriate response for opening this webpage ')\n                  reject(throwError(err));\n                })\n              .then(() => {\n                  console.log('Spinner Stop.');\n                  this.isLoading = false;\n                  resolve(\"Success\");\n                },\n                (err) => {reject(throwError(err))});\n\n          });\n        }\n\n        const timeoutError = Symbol();\n        try {\n\n          await timeout(promise(), 5000, timeoutError)\n            .then(() => {\n              this.isLoading = false;\n              console.log('openNewTabForApp: open tab app successfully finished');\n            });\n        }catch (e) {\n          if (e === timeoutError) {\n            // handle timeout\n            console.log('timeoutError: '+e.error);\n          }else {\n            // other error\n            console.log('Error: '+e.error);\n            throw e;\n          }\n        }\n\n      }\n    }\n  }\n\n  public async openNewWinForApp(appRequest: string[]) {\n    const [webapp, webappURLPrefix] = appRequest.values();\n    var newAccessToken = \"\";\n    var newRefreshToken = \"\";\n    var newCurrentUser = \"\";\n\n\n    if (!this.isLoading) {\n      const token = this.token.getRefreshToken();\n      if (token) {\n\n\n        const timeout = (prom: Promise<any>, time: number, exception: Symbol) => {\n          let timer: any;\n          return Promise.race([\n            prom,\n            new Promise((_r, rej) => timer = setTimeout(rej, time, exception))\n          ]).finally(() => clearTimeout(timer));\n        }\n\n\n        const promise = async () => {\n          new Promise<any>((resolve, reject) => {\n            console.log('Spinner Start.');\n            this.isLoading = true;\n            return this.authService.webapptab(token, webapp).toPromise()\n              .then((val: any) => {\n                console.log('Request approved by the server.');\n                newAccessToken = (val.accessToken);\n                newRefreshToken = (val.refreshToken);\n                newCurrentUser = (val);\n              })\n              .then((result) => {\n                  console.log('Opening new tab/win for the requested page.');\n                  this.router.navigate([])\n                    .then(result => {\n                      console.log('Insert url and loading the page.');\n                      this.windowObjectReference = window.open(AppConfig.accServer.ACCWEBServers+webappURLPrefix+'start.html',\n                        'C-Sharpcorner', 'scrollbars=no');\n                    })\n                    .then((result) => {\n                        console.log('Plant the secret ingredient.');\n                        this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.TOKEN_KEY, newAccessToken);\n                        this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.REFRESHTOKEN_KEY, newRefreshToken);\n                        this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.USER_KEY, JSON.stringify(newCurrentUser));\n                      },\n                      (err) => {\n                        console.log('failed loading the app webpage.');\n                        reject(throwError(err));\n                      })\n                },\n                (err) => {\n                  console.log('cant get a server request appropriate response for opening this webpage ')\n                  reject(throwError(err));\n                })\n              .then(() => {\n                  console.log('Spinner Stop.');\n                  this.isLoading = false;\n                  resolve(\"Success\");\n                },\n                (err) => {reject(throwError(err))});\n          });\n        }\n\n\n        const timeoutError = Symbol();\n        try {\n          await timeout(promise(), 5000, timeoutError)\n        }catch (e) {\n          if (e === timeoutError) {\n            // handle timeout\n            console.log('timeoutError: ' + e.error);\n          } else {\n            // other error\n            console.log('Error: ' + e.error);\n            throw e;\n          }\n        }finally {\n          console.log('openNewTabForApp: open tab app successfully finished');\n        }\n\n\n\n      }\n    }\n  }\n\n  /*public openNewWinForApp(appRequest: string[]): void {\n    //webapp: string, webappURLPrefix: string\n    const [ webapp, webappURLPrefix ] = appRequest.values();\n    var newAccessToken = \"\";\n    var newRefreshToken = \"\";\n    var newCurrentUser = \"\";\n\n    if (!this.isLoading) {\n      this.isLoading = true;\n      const token = this.token.getRefreshToken();\n      if (token)\n        this.authService.webapptab(token, webapp)\n          .subscribe(\n            data => {\n              let promise = new Promise<void>((resolve, reject) => {\n                newAccessToken = (data.accessToken);\n                newRefreshToken = (data.refreshToken);\n                newCurrentUser = (data);\n                setTimeout(() => {\n                  console.log(\"Failed open new window\");\n                  resolve();//() => {resolve();}\n                }, 5000);\n              })\n              promise.then(result => { this.windowObjectReference = window.open(AppConfig.accServer.ACCWEBServers+webappURLPrefix+'start.html',\n                  'C-Sharpcorner', 'scrollbars=no');})\n                .then(result => { this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.TOKEN_KEY, newAccessToken);\n                    this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.REFRESHTOKEN_KEY, newRefreshToken);\n                    this.windowObjectReference.window.sessionStorage.setItem(AppConfig.endpoints.USER_KEY, JSON.stringify(newCurrentUser));},\n            (err) => { this.isLoading = false;\n              return throwError(err);})\n    },\n    (error) => {\n              this.isLoading = false;\n              return throwError(error.error);\n            }, () => {this.isLoading = false;})\n    }\n  }*/\n\n  configuratin(): void {\n    this.router.navigate(['../admin2'], {relativeTo: this.activatedRoute});\n  }\n\n  portal(): void {\n    console.log(this.activatedRoute.toString())\n    this.router.navigate(['../'], {relativeTo: this.activatedRoute});\n  }\n\n\n}\n\n","<html>\r\n<head>\r\n  <style>\r\n\r\n  </style>\r\n  <title></title>\r\n</head>\r\n<body>\r\n<storybook-background1></storybook-background1>\r\n\r\n<!--button mat-raised-button (click)=\"openVerificationForm()\">VerificationForm</button>\r\n<button mat-raised-button (click)=\"is2SVRequired()\">is2SVRequired</button-->\r\n<!--button mat-raised-button (click)=\"setPassExpAlertData()\">setPassExpAlertData</button-->\r\n\r\n\r\n<storybook-avatar\r\n  id=\"avatar\"\r\n  [label]=\"this.currentUser.username\"\r\n  [isNotify]=\"this.isNotify()\"\r\n  header=\"{{'Your password will expire in ' + this.passExp +' Days.'}}\"\r\n  (actionButton)=\"openReplacePassForm()\"\r\n  (click)=\"this.openMyAccountForm()\">\r\n</storybook-avatar>\r\n\r\n<!--this.setPassExpAlertData() -->\r\n\r\n\r\n<storybook-app-menu\r\n  [profileApps]=\"permittedWebAppList\"\r\n  [isLoading]=\"isLoading\"\r\n  (openNewWinForApp)=\"openNewWinForApp($event)\"\r\n  (openNewTabForApp)=\"openNewTabForApp($event)\">\r\n</storybook-app-menu>\r\n\r\n</body>\r\n</html>\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport PortalComponent from \"./portal/portal.component\";\nimport {AppRoutingGuard} from \"../../app-routing.guard\";\nimport {BoardUserComponent} from \"./board-user/board-user.component\";\nimport {BoardModeratorComponent} from \"./board-moderator/board-moderator.component\";\nimport {BoardAdminComponent} from \"./board-admin/board-admin.component\";\nimport {BoardAdmin2Component} from \"./board-admin2/board-admin2.component\";\n\n\n\n\n\n\n\nconst routes: Routes = [\n  { path: 'user', component: BoardUserComponent },\n  { path: 'mod', component: BoardModeratorComponent },\n  { path: 'admin', component: BoardAdminComponent },\n  { path: 'admin2', component: BoardAdmin2Component },\n  { path: 'profile2', component: PortalComponent, canActivate: [AppRoutingGuard] },\n  { path: '', redirectTo: 'profile2', pathMatch: 'full' },/**/\n  { path: '**', redirectTo: 'profile2', },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class Profile2RoutingModule { }\n","import { NgModule } from '@angular/core';\n\nimport { Profile2RoutingModule } from './profile2-routing.module';\nimport PortalComponent from './portal/portal.component';\nimport {StorybookModule} from \"src/app/storybook/storybook.module\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport MyAccountForm2Component from \"./my-account-form2/my-account-form2.component\";\nimport { BoardUserComponent } from './board-user/board-user.component';\nimport { BoardAdminComponent } from './board-admin/board-admin.component';\nimport { BoardAdmin2Component } from './board-admin2/board-admin2.component';\nimport { BoardModeratorComponent } from './board-moderator/board-moderator.component';\n\n\n\n@NgModule({\n  declarations: [\n    PortalComponent,\n    MyAccountForm2Component,\n    BoardUserComponent, BoardAdminComponent, BoardModeratorComponent, BoardAdmin2Component\n  ],\n  imports: [\n    Profile2RoutingModule,\n    StorybookModule,\n    MatDialogModule,\n    MatButtonModule,\n  ],\n  exports: [\n    PortalComponent,\n    MyAccountForm2Component\n  ],\n  bootstrap: []\n})\nexport class Profile2Module { }\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'apiErrorMessage'\r\n})\r\nexport class ApiErrorMessagePipe implements PipeTransform {\r\n\r\n  transform(message: string, ...args: unknown[]): unknown {\r\n    const dataToArray = message.split(',').map(item => item.trim());\r\n    // convert array to string replacing comma with new line\r\n    return dataToArray.join('\\n');\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'loginErrorMessage'\r\n})\r\nexport class LoginErrorMessagePipe implements PipeTransform {\r\n\r\n  transform(message: string, ...args: unknown[]): unknown {\r\n    const dataToArray = message.split(',').map(item => item.trim());\r\n    // convert array to string replacing comma with new line\r\n    return dataToArray.join('\\n');\r\n  }\r\n\r\n}\r\n","import {Injectable, Pipe, PipeTransform} from '@angular/core';\r\nimport {ApiErrorMessageService} from \"./api-error-message.service\";\r\n\r\n@Pipe({\r\n  name: 'apiErrorMessage',\r\n  pure: false,\r\n})\r\nexport class ApiErrorMessagePipe implements PipeTransform {\r\n    constructor(private apiErrorMessageService: ApiErrorMessageService) {}\r\n\r\n    transform(value: any, args?: any): any {\r\n      this.apiErrorMessageService.language = args.language;\r\n      return this.apiErrorMessageService.apiErrorMessage(value)    }\r\n\r\n/*    transform(message: string, ...args: unknown[]): unknown {\r\n      const dataToArray = message.split(',').map(item => {item.trim();\r\n        console.log('ApiErrorMessagePipe: '+item.toString() +'   '+ item.trim().toString());\r\n      });\r\n\r\n      // convert array to string replacing comma with new line\r\n      return dataToArray.join('\\n');\r\n    }\r\n*/\r\n}\r\n\r\n\r\n\r\n","import {Injectable} from \"@angular/core\";\r\nimport {first} from \"rxjs/operators\";\r\n\r\n\r\n@Injectable()\r\nexport class ApiErrorMessageService {\r\n  public languages = ['login-main', 'eng']\r\n\r\n  public language  = 'login-main'\r\n\r\n  private dictionary: { [key: string]: TranslationSet } = {\r\n    'login-main': {\r\n      languange: 'login-main',\r\n      values: {\r\n        \"example\": \"Beispiel\",\r\n        \"must be a well-formed email address\": \"must be a well-formed email address\",\r\n        \"Error: A registry process should be made!\": \"Error: A registry process should be made!\",\r\n        \"Error: A registry process un valid!\": \"Incorrect user name\",\r\n        \"VALIDATION_FAILED\": \"* A registry process un valid!\",\r\n        \"Bad credentials\": \"Incorrect user name or password\",\r\n        \"Password matches one of %1$s previous passwords.\": \"Try again with a password you haven’t used before\",\r\n        \"Passwords do not match!\": \"* Passwords do not match!\",\r\n        \"Error: Email is already in use!\": \"Email is already in use!\",\r\n        \"Error: Invalidate Pin-Code! User Not Approved\": \"* The Verification Code does not match\",\r\n        \"Error: Unable to save your changes\": \"* Unable to save your changes\",\r\n      },\r\n    },\r\n    eng: {\r\n      languange: 'eng',\r\n      values: {\r\n        \"example\": \"Example\",\r\n      },\r\n    },\r\n\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  apiErrorMessage(key: string): any {\r\n    if (this.dictionary[this.language ] != null) {\r\n      return this.dictionary[this.language ].values[key];\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport class TranslationSet {\r\n  public languange?: any;\r\n  public values: { [key: string]: any } = {}\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n//import { BrowserModule } from '@angular/platform-browser';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n\nimport {ButtonLanguageComponent} from \"../../stories/buttons/button-language/button-language.component\";\nimport {ButtonFortestComponent} from '../../stories/buttons/button-fortest/button-fortest.component';\nimport {ButtonGlobeComponent} from \"../../stories/buttons/button-globe/button-globe.component\";\nimport Background1Component from \"../../stories/pages/background1/background1Component\";\nimport {ButtonTadiranComponent} from \"../../stories/buttons/button-tadiran/button-tadiran.component\";\nimport CardComponent from \"../../stories/cards/card/card.component\";\nimport CardRuggedComponent from \"../../stories/cards/card-rugged/card-rugged.component\";\nimport LoginFormComponent from \"../../stories/forms/login-form/login-form.component\";\nimport RegistryFormComponent from \"../../stories/forms/registry-form/registry-form.component\";\nimport {ButtonContinueComponent} from \"../../stories/buttons/button-continue/button-continue.component\";\nimport {ButtonExComponent} from \"../../stories/buttons/button-ex/button-ex.component\";\nimport {ButtonAppsComponent} from \"../../stories/buttons/button-apps/button-apps.component\";\nimport {ButtonSuccessfullyComponent} from \"../../stories/buttons/button-successfully/button-successfully.component\";\nimport Button from \"../../stories/buttons/button-example/button.component\";\nimport {AppMenuComponent} from \"../../stories/app-menu/app-menu.component\";\nimport {StoryInputComponent} from \"../../stories/inputs/input/story-input.component\";\nimport {HighlightDirective} from \"src/stories/buttons/button-fortest/custom-directive/Highlight.directive\";\nimport ReplacePassFormComponent from \"../../stories/forms/replace-pass-form/replace-pass-form.component\";\nimport PassStrengthComponent from \"../../stories/pass-strength/pass-strength.component\";\nimport {ApiErrorMessagePipe} from \"./pipes/api-error-message.pipe\";\nimport {AvatarComponent} from \"../../stories/avatars/avatar.component\";\nimport {AppComponent} from \"../app.component\";\nimport { DynamicCompDirective } from '../../stories/directive/dynamic-comp.directive';\nimport {PopoverDirective} from \"../../stories/directive/bubble-avatar/popover.directive\";\nimport { BubbleAvatarComponent } from '../../stories/directive/bubble-avatar/bubble-avatar.component';\nimport { ActionAvatarComponent } from '../../stories/actions/action-avatar/action-avatar.component';\nimport {PopoverInputDirective} from \"../../stories/directive/bubble-input/popover-input.directive\";\nimport { BubbleInputComponent } from '../../stories/directive/bubble-input/bubble-input.component';\nimport { ActionInputComponent } from '../../stories/actions/action-input/action-input.component';\nimport {MdbPopoverModule} from \"mdb-angular-ui-kit/popover\";\n\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {ButtonExclamationMarkComponent} from \"../../stories/buttons/button-exclamation-mark/button-exclamation-mark.component\"\nimport {ApiErrorMessageService} from \"./pipes/api-error-message.service\";\nimport {Spinner1Component} from \"../../stories/spinners/spinner1/spinner1.component\";\nimport VerificationFormComponent from \"../../stories/forms/verification-form/verification-form.component\";\nimport {DigitcodeInputComponent} from \"../../stories/inputs/digitcode-input/digitcode-input.component\";\nimport {CodeInputComponent} from \"../../stories/inputs/code-input/code-input.component\";\nimport MyAccountFormComponent from \"../../stories/forms/my-account-form/my-account-form.component\";\nimport {AccountInputComponent} from \"../../stories/inputs/account-input/account-input.component\";\nimport ForgotPassFormComponent from \"../../stories/forms/forgot-pass-form/forgot-pass-form.component\";\nimport ResetPassFormComponent from \"../../stories/forms/reset-pass-form/reset-pass-form.component\";\nimport {ButtonConfigurationComponent} from \"../../stories/buttons/button-configuration/button-configuration.component\";\nimport ConfigurationFormComponent from \"../../stories/forms/configuration-form/configuration-form.component\";\nimport {ConfigurationInputComponent} from \"../../stories/inputs/configuration-input/configuration-input.component\";\n\n\n\n\n\n\n\n@NgModule({\n    declarations: [\n        ButtonGlobeComponent, Background1Component, ButtonTadiranComponent, ButtonLanguageComponent,\n        ButtonFortestComponent,\n        CardComponent, CardRuggedComponent,\n        LoginFormComponent, LoginFormComponent, RegistryFormComponent, VerificationFormComponent,\n        MyAccountFormComponent, ForgotPassFormComponent, ResetPassFormComponent, ConfigurationFormComponent,\n        ButtonContinueComponent, ButtonExComponent, ButtonAppsComponent, ButtonSuccessfullyComponent, Button,\n        ButtonConfigurationComponent,\n        AppMenuComponent,\n        StoryInputComponent, DigitcodeInputComponent, CodeInputComponent, AccountInputComponent, ConfigurationInputComponent,\n        HighlightDirective,\n        ReplacePassFormComponent,\n        PassStrengthComponent,\n        ApiErrorMessagePipe,\n        AvatarComponent,\n        DynamicCompDirective,\n        ActionAvatarComponent, PopoverDirective, BubbleAvatarComponent,\n        ActionInputComponent, PopoverInputDirective, BubbleInputComponent,\n        ButtonExclamationMarkComponent,\n        Spinner1Component,\n\n\n    ],\n  imports: [\n    CommonModule,\n    FormsModule, ReactiveFormsModule, MdbPopoverModule, MatButtonModule,\n  ],\n  providers: [ ApiErrorMessageService],\n  exports: [\n    ButtonGlobeComponent, Background1Component, ButtonTadiranComponent, ButtonLanguageComponent,\n    ButtonFortestComponent,\n    CardComponent, CardRuggedComponent,\n    LoginFormComponent, LoginFormComponent, RegistryFormComponent, VerificationFormComponent,\n    MyAccountFormComponent, ForgotPassFormComponent,  ResetPassFormComponent, ConfigurationFormComponent,\n    ButtonContinueComponent, ButtonExComponent, ButtonAppsComponent, ButtonSuccessfullyComponent, Button,\n    ButtonConfigurationComponent,\n    AppMenuComponent,\n    StoryInputComponent, DigitcodeInputComponent, CodeInputComponent, AccountInputComponent, ConfigurationInputComponent,\n    CommonModule,\n    FormsModule, ReactiveFormsModule,\n    HighlightDirective,\n    ReplacePassFormComponent,\n    PassStrengthComponent,\n    AvatarComponent,\n    DynamicCompDirective,\n    ActionAvatarComponent   , PopoverDirective, BubbleAvatarComponent,\n    ActionInputComponent, PopoverInputDirective, BubbleInputComponent,\n    ButtonExclamationMarkComponent,\n    Spinner1Component,\n\n\n\n  ],\n  bootstrap: [AvatarComponent, ]\n})\nexport class StorybookModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {ActionInput} from \"../action-input/action-input.interface\";\r\n\r\n@Component({\r\n  selector: 'action-avatar',\r\n  templateUrl: './action-avatar.component.html',\r\n  styleUrls: ['./action-avatar.component.css']\r\n})\r\nexport class ActionAvatarComponent implements OnInit {\r\n\r\n  bubbleOn?: boolean;\r\n  actionHeader?: string = \"Your password will expire in 3 Days.\";\r\n\r\n  @Output() actionButton = new EventEmitter<any>();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public setHeader(actionHeader: string) {\r\n    this.actionHeader = actionHeader;\r\n  }\r\n\r\n  public setBubbleOn(bubbleOn: boolean) {\r\n    this.bubbleOn = bubbleOn;\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"password-alert-text\">\r\n<p>\r\n  {{this.actionHeader}}\r\n</p>\r\n<a [highlight]=\"'red'\" [colorName]=\"'red'\" (click)=\"this.actionButton.emit()\" class=\"action-text\" >Change it now ></a>\r\n</div>\r\n","<div class=\"password-alert-text\" Style=\"text-indent: 27px; padding-bottom: 15px\">\r\n<tr><strong>{{this.actionHeader}}</strong></tr>\r\n</div>\r\n<div >\r\n\r\n  <table >\r\n\r\n    <!--thead>\r\n\r\n    </thead-->\r\n    <tbody>\r\n      <tr *ngFor=\"let actionInput of actionInputs\">\r\n        <td  *ngIf=\"actionInput.isFulfilled\" Style=\"color: green\">✔</td>\r\n        <td  *ngIf=\"!actionInput.isFulfilled\" Style=\"color: red\">X</td>\r\n        <td Style=\"text-indent: 7px\">{{ actionInput.presentingMessage }}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ActionInput} from \"./action-input.interface\";\r\n\r\n\r\ninterface USERS {\r\n  conditionName: String;\r\n  presentingMessage: String;\r\n  isFulfilled: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'action-input',\r\n  templateUrl: './action-input.component.html',\r\n  styleUrls: ['./action-input.component.css']\r\n})\r\nexport class ActionInputComponent implements OnInit {\r\n\r\n  actionInputs?: ActionInput[];\r\n  actionHeader?: string = \"The password must contain:\";\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public setConditions(actionInputs: ActionInput[]) {\r\n    this.actionInputs = actionInputs;\r\n  }\r\n\r\n  public setHeader(actionHeader: string) {\r\n    this.actionHeader = actionHeader;\r\n  }\r\n}\r\n","\r\n\r\n\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <storybook-card class=\"card-container\" ></storybook-card>\r\n  <div  class=\"h-100 d-flex align-items-center justify-content-center\">\r\n    <div class=\"Aeonix-App-Center\">\r\n      <a>Aeonix App Center</a>\r\n    </div>\r\n    <div><storybook-spinner1  *ngIf=\"isLoading\"></storybook-spinner1></div>\r\n\r\n    <div class=\"grid-container\">\r\n      <div class=\"item1\"><storybook-button-apps application=\"Agent\" label=\"Continue\" type=\"button\" [isDisabled]=\"!profileApps?.agent\"\r\n        id=\"openNewAgentTab\" (click)='this.openNewWinForApp.emit([\"AGENT\",\"/accAgent/\"])'  ></storybook-button-apps></div>\r\n      <div class=\"item2\"><storybook-button-apps application=\"WebRT\" label=\"Continue\" type=\"button\" [isDisabled]=\"!profileApps?.realtime\"\r\n        id=\"openNewWebRTTab\" (click)='this.openNewTabForApp.emit([\"ACCREALTIME\",\"/accRealTime/\"])' ></storybook-button-apps></div>\r\n      <div class=\"item3\"><storybook-button-apps application=\"Script-Designer\" label=\"Continue\" type=\"button\" [isDisabled]=\"!profileApps?.scriptDesigner\"\r\n        id=\"openNewGccsTab\" (click)='this.openNewTabForApp.emit([\"GCCS\",\"/accGCCS/\"])' ></storybook-button-apps></div>\r\n      <div class=\"item4\"><storybook-button-apps application=\"Admin\" label=\"Continue\" type=\"button\" [isDisabled]=\"!profileApps?.admin\"\r\n        ></storybook-button-apps></div>\r\n      <div class=\"item5\"><storybook-button-apps application=\"Aeonix-Admin\" label=\"Continue\" type=\"button\" [isDisabled]=\"!profileApps?.aeonixAdmin\"\r\n        id=\"openNewGccsTab2\" (click)='this.openNewTabForApp.emit([\"GCCS\",\"/accGCCS/\"])' ></storybook-button-apps></div>\r\n    </div>\r\n\r\n\r\n\r\n  </div>\r\n</div>\r\n\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { StoryInput } from \"../inputs/input/story-input.model\";\r\nimport { AuthService } from '../../app/_services/auth.service';\r\nimport {MdbModalRef} from \"mdb-angular-ui-kit/modal\";\r\n//import {Profile2Expose} from \"src/app/profile2/profile2.interface\";\r\n\r\nexport interface Profile2Expose {\r\n  agent: boolean;\r\n  realtime: boolean;\r\n  scriptDesigner: boolean;\r\n  admin: boolean;\r\n  aeonixAdmin: boolean;\r\n}\r\n\r\nexport interface AeonixAppCenterForm {\r\n  username: null, //new FormControl('ea2', Validators.min(2)),\r\n  password: null  //new FormControl('zaqwsx', Validators.min(2))\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-app-menu',\r\n  templateUrl: './app-menu.component.html',\r\n  styleUrls: ['./app-menu.css'],\r\n})\r\nexport class AppMenuComponent implements OnInit {\r\n\r\n  /*form: AeonixAppCenterForm = {\r\n    username: null,     //new FormControl('ea2', Validators.min(2)),\r\n    password: null      //new FormControl('zaqwsx', Validators.min(2))\r\n  };*/\r\n\r\n\r\n\r\n  @Input() formService!: AuthService;\r\n\r\n  credentials: any = {\r\n    username: null,\r\n    password: null\r\n  };\r\n\r\n  isLoginFailed = false;\r\n  loginErrorMessage = '';\r\n\r\n  openReplacePassword() {\r\n    //this.replacePassFormService.open(ReplacePassForm2Component);\r\n  }\r\n\r\n  constructor() {\r\n    this.validationForm = new FormGroup({\r\n      username: new FormControl('Telecom2', Validators.minLength(2)),\r\n      //email: new FormControl(null, Validators.email),\r\n      password: new FormControl('T@diran2022', Validators.minLength(2)),\r\n      //phone: new FormControl(null, Validators.pattern(new RegExp(\"[0-9 ]{12}\")))\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * Component property to define ordering of tasks\r\n   */\r\n  storyInputsInOrder: StoryInput[] = [];\r\n\r\n  validationForm: FormGroup;\r\n\r\n  @Input() isLoggedIn = false;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onPinInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onArchiveInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() openNewWinForApp = new EventEmitter<any>();\r\n\r\n  @Output() openNewTabForApp = new EventEmitter<any>();\r\n\r\n  @Input() profileApps?: any;\r\n\r\n  @Input() isLoading: boolean = false;\r\n\r\n\r\n  @Input()\r\n  set storyInputs(arr: StoryInput[]) {\r\n    const initialTasks = [\r\n      ...arr.filter(t => t.state === 'USER NAME'),\r\n      ...arr.filter(t => t.state !== 'USER NAME'),\r\n    ];\r\n    const filteredTasks = initialTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME'\r\n    );\r\n    this.storyInputsInOrder = filteredTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME'\r\n    );\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.warn('Login Request!');\r\n    this.credentials.username=this.validationForm.get('username')?.value;\r\n    this.credentials.password=this.validationForm.get('password')?.value;\r\n\r\n    this.openNewWinForApp.emit(this.credentials);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  get userName(): AbstractControl {\r\n    return this.validationForm.get('username')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.validationForm.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.validationForm.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.validationForm.get('phone')!;\r\n  }\r\n\r\n\r\n}\r\n\r\n","\r\n<div [twPopover] = \"this.popover\" header=\"{{this.header}}\" [bubbleOn]=\"this.isNotify\" (actionButton)=\"this.actionButton.emit($event)\">\r\n<!-- a (mouseover)=\"popover.show()\" (mouseleave)=\"popover.hide()\"\r\n   class=\"form-check-label white-text\"   mdbPopoverTitle=\"Account recovery\" #popover=\"mdbPopover\"\r\n   mdbPopover=\"To help keep your account safe, we will make sure that it’s really you trying to sign in\">\r\n</a\r\n  Forgot password?-->\r\n\r\n\r\n<button class=\"main\" highlight=\"blue\" colorName=\"blue\"\r\n        type=\"button\"\r\n        (click)=\"onClick.emit($event)\"\r\n        [ngClass]=\"classes\"\r\n        [ngStyle]=\"{ 'background-color': backgroundColor }\">\r\n\r\n  <div class=\"circle\">\r\n\r\n    <img src=\"./assets/images/ProfileIcon-70.svg\" srcset=\"./assets/images/ProfileIcon-70@2x.png, ./assets/images/ProfileIcon-70@3x.png\"\r\n         class=\"Avatar-Icon\"  alt=\"profile-image\">\r\n\r\n  </div>\r\n  <storybook-button-exclamation-mark  *ngIf=\"this.isNotify\" class=\"exclamation-mark\" size=\"small\" ></storybook-button-exclamation-mark>\r\n  <div class=\"Avatar-Label\"><a class=\"font\">{{ label }}</a></div>\r\n</button>\r\n\r\n</div>\r\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n} from '@angular/core';\nimport {PopoverOptions} from \"../directive/popover.interface\";\nimport {ActionAvatarComponent} from \"../actions/action-avatar/action-avatar.component\";\n/**/\n@Component({\n  selector: 'storybook-avatar',\n  templateUrl: './avatar.component.html',\n  styleUrls: ['./avatar.scss'],\n})\nexport  class AvatarComponent {\n  popover: PopoverOptions = {\n    content: ActionAvatarComponent\n  };\n\n\n  @Output() actionButton: EventEmitter<any> = new EventEmitter<any> ();\n\n  /**\n   * Header contents\n   *\n   * @required\n   */\n  @Input()\n  header? = 'header';\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  isNotify: boolean = false;\n\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-avatar--primary' : 'storybook-avatar--secondary';\n\n    return ['storybook-avatar', `storybook-avatar--${this.size}`, mode];\n  }\n\n  ngOnInit(): void {\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-apps',\n  templateUrl: './button-apps.component.html',\n  styleUrls: ['./button-apps.component.scss']\n})\nexport class ButtonAppsComponent {\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  isDisabled: boolean = false;\n\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * What application should the button linked to?\n   */\n  @Input()\n  application: 'Agent' | 'WebRT' | 'Script-Designer' | 'Admin' | 'Aeonix-Admin' = 'Admin';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-apps--primary' : 'storybook-button-apps--secondary';\n\n    return ['storybook-button-apps', `storybook-button-apps--${this.application}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<button id=\"button-apps\" class=\"container\"  [disabled]=\"isDisabled\"  >\n<div id=\"circle\" class=\"circle\"   >\n\n<img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n   src=\"./assets/images/{{application?.toString()}}.png\" class=\"Apps-Button-Icon center\"  alt=\"apps-button-icon\"/>\n</div>\n\n<div class=\"Button-App-Label \">\n  <div class=\"center mfont\">\n\n    {{ application.toString() }}\n\n  </div>\n</div>\n\n</button>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-configuration',\n  templateUrl: './button-configuration.component.html',\n  styleUrls: ['./button-configuration.component.css']\n})\nexport class ButtonConfigurationComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-form--primary' : 'storybook-button-form--secondary';\n\n    return ['storybook-button-form', `storybook-language-icon--${this.size}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<button class=\"Vector\" (click)=\"onClick.emit($event)\" >\n  <label class=\"EnableProfilePicture\">Tools</label>\n<img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n   src=\"./assets/images/AacConfiguration.png\"\n       srcset=\"./assets/images/language-desktop-icon@2x.png 2x,\n             /assets/images/language-desktop-icon@3x.png 3x\"\n       class=\"Language-Desktop-Icon\"  alt=\"form-desktop-icon\"/>\n\n</button>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-continue',\n  templateUrl: './button-continue.component.html',\n  /*template: `<div class=\"storybook-button-continue\">\n    <img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n         src=\"./assets/images/img_2.png\" class=\"Language-Desktop-Icon\"  alt=\"form-desktop-icon\"/>\n  </div>`,*/\n  styleUrls: ['./button-continue.component.scss'],\n})\nexport class ButtonContinueComponent {\n\n  /**\n   * Is this gallery attribute are set?\n   */\n  @Input()\n  gallery = false;\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Continue';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-continue--primary' : 'storybook-button-continue--secondary';\n    const galleryMode = this.gallery ? 'storybook-button-continue--set-in' : 'storybook-button-continue--set-out';\n\n    return ['storybook-button-continue', `storybook-button-continue--${this.size}`, mode, galleryMode];\n  }\n\n\n}\n","<button id=\"login-button\" class=\"login-button\" (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\" >\n{{label}}\n</button>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-ex',\n  templateUrl: './button-ex.component.html',\n  styleUrls: ['./button-ex.component.css']\n})\nexport class ButtonExComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-ex--primary' : 'storybook-button-ex--secondary';\n\n    return ['storybook-button-ex', `storybook-button-ex--${this.size}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<button class=\"Vector\" (click)=\"onClick.emit($event)\" >\n\n    <img  [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n       src=\"./assets/images/x_close.png\"\n           class=\"Ex-Icon\"  alt=\"Ex-Icon\"/>\n\n</button>\n\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-exclamation-mark',\n  templateUrl: './button-exclamation-mark.component.html',\n  styleUrls: ['./button-exclamation-mark.component.scss']\n})\nexport class ButtonExclamationMarkComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-exclamation-mark--primary' : 'storybook-button-exclamation-mark--secondary';\n\n    return ['storybook-button-exclamation-mark', `storybook-button-exclamation-mark--${this.size}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"button-exclamation-mark\" class=\"container\">\n<div id=\"button-exclamation-mark-circle\" class=\"circle\" (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\">\n\n<img\n     src=\"./assets/images/Exclamation.png\" class=\"Exclamation-Mark-Icon center\" alt=\"exclamation-mark-button-icon\"/>\n</div>\n\n\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-fortest',\n  template: ` <p >Highlight Directive</p>\n    <button highlight=\"blue\" colorName=\"blue\"\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button-fortest.css'],\n})\nexport  class ButtonFortestComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[highlight]',\r\n})\r\nexport class HighlightDirective {\r\n  constructor(private eleRef: ElementRef) {}\r\n\r\n  @Input() highlight: any;\r\n  @Input() colorName: any;\r\n\r\n\r\n  @HostListener('mouseover') onMouseOver() {\r\n    this.eleRef.nativeElement.style.color = this.colorName;\r\n  }\r\n  @HostListener('mouseleave') onMouseLeave() {\r\n    this.eleRef.nativeElement.style.color = 'black';\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-globe',\n  templateUrl: './button-globe.component.html',\n  styleUrls: ['./button-globe.component.css']\n})\nexport class ButtonGlobeComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-tadiran--primary' : 'storybook-button-tadiran--secondary';\n\n    return ['storybook-button-tadiran', `storybook-tadiran-icon--${this.size}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"Vector\">\n<img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n   src=\"./assets/images/GlobeIcon.png\" class=\"Language-Desktop-Icon\"  alt=\"form-desktop-icon\"/>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-language',\n  templateUrl: './button-language.component.html',\n  styleUrls: ['./button-language.component.css']\n})\nexport class ButtonLanguageComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-form--primary' : 'storybook-button-form--secondary';\n\n    return ['storybook-button-form', `storybook-language-icon--${this.size}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"Vector\">\n<img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n   src=\"./assets/images/language-desktop-icon.png\"\n       srcset=\"./assets/images/language-desktop-icon@2x.png 2x,\n             /assets/images/language-desktop-icon@3x.png 3x\"\n       class=\"Language-Desktop-Icon\"  alt=\"form-desktop-icon\"/>\n\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-successfully',\n  templateUrl: './button-successfully.component.html',\n  styleUrls: ['./button-successfully.component.css']\n})\nexport class ButtonSuccessfullyComponent {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-successfully--primary' : 'storybook-button-successfully--secondary';\n\n    return ['storybook-button-successfully', `storybook-button-successfully--${this.size}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"button-successfully\" class=\"container\">\n<div class=\"circle\">\n\n<img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n     src=\"./assets/images/Vee.png\" class=\"Vee-Icon center\" alt=\"successfully-button-icon\"/>\n</div>\n\n\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button-tadiran',\n  /*templateUrl: './button-continue.component.html',*/\n  template: `<div class=\"storybook-button-tadiran\">\n    <img (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n         src=\"./assets/images/img_2.png\" class=\"Language-Desktop-Icon\"  alt=\"language-desktop-icon\"/>\n  </div>`,\n  styleUrls: ['./button-tadiran.component.scss'],\n})\nexport class ButtonTadiranComponent {\n\n  /**\n   * Is this gallery attribute are set?\n   */\n  @Input()\n  gallery = false;\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-tadiran--primary' : 'storybook-button-tadiran--secondary';\n    const galleryMode = this.gallery ? 'storybook-button-tadiran--set-in' : 'storybook-button-tadiran--set-out';\n\n    return ['storybook-button-tadiran', `storybook-button-tadiran--${this.size}`, mode, galleryMode];\n  }\n\n\n}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-card-rugged',\r\n  templateUrl: './card-rugged.component.html',\r\n  styleUrls: ['./card-rugged.css']\r\n})\r\nexport default class CardRuggedComponent {\r\n\r\n\r\n\r\n  /**\r\n   * Is this the principal call to action on the login-main?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large'  = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-card--primary' : 'storybook-card--secondary';\r\n\r\n    return ['storybook-card', `storybook-card--${this.size}`, mode];\r\n  }\r\n\r\n\r\n\r\n}\r\n","\r\n  <div class=\"card\">\r\n\r\n\r\n  </div>\r\n\r\n\r\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.css']\r\n})\r\nexport default class CardComponent  {\r\n\r\n\r\n\r\n  /**\r\n   * Is this the principal call to action on the login-main?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large'  = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-card--primary' : 'storybook-card--secondary';\r\n\r\n    return ['storybook-card', `storybook-card--${this.size}`, mode];\r\n  }\r\n\r\n\r\n\r\n}\r\n","\r\n  <div class=\"card\">\r\n\r\n  </div>\r\n\r\n\r\n","<div class=\"tooltip\" [ngClass]=\"{'tooltip-display' : show}\">\r\n  <!--button (click)=\"loadCarComponent()\">Load Car Component</button-->\r\n  <span *ngIf=\"!isDynamic\">{{popover}}</span>\r\n  <ng-template    appDynamicComp>\r\n  </ng-template>\r\n\r\n</div>\r\n\r\n","import {\r\n  Component,\r\n  Input,\r\n  ViewChild,\r\n  OnInit,\r\n  AfterViewInit,\r\n  ComponentFactoryResolver,\r\n  ChangeDetectionStrategy,\r\n  ApplicationRef,\r\n  Output,\r\n  EventEmitter,\r\n  Type, ComponentRef\r\n} from '@angular/core';\r\nimport { DynamicCompDirective } from '../dynamic-comp.directive';\r\nimport { PopoverOptions } from '../popover.interface'\r\nimport {ActionAvatarComponent} from \"src/stories/actions/action-avatar/action-avatar.component\";\r\n\r\n\r\n@Component({\r\n  selector: 'bubble-avatar',\r\n    templateUrl: './bubble-avatar.component.html',\r\n  styleUrls: ['./bubble-avatar.component.scss']\r\n})\r\nexport class BubbleAvatarComponent implements OnInit, AfterViewInit{\r\n  @Input() display: any;\r\n  @Input() popover: any;\r\n  @Input() bubbleOn?: boolean;\r\n  @Input() header?: string;\r\n  @Input()  options?: PopoverOptions;\r\n  show: boolean = false;\r\n  isDynamic: boolean = false;\r\n  @ViewChild(DynamicCompDirective, {static: true}) content!: DynamicCompDirective;\r\n  @Output() triggerDetectionChange: EventEmitter<void> = new EventEmitter<void> ();\r\n  @Output() actionButton: EventEmitter<any> = new EventEmitter<any> ();\r\n  actionAvatarComponentRef?: ComponentRef<any>;\r\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    if (this.options && typeof this.options.content !== \"string\") {\r\n      this.isDynamic = true;\r\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(<Type<any>>this.options.content);\r\n      const viewContainerRef = this.content.viewContainerRef;\r\n      viewContainerRef.clear();\r\n      this.actionAvatarComponentRef = viewContainerRef.createComponent(componentFactory);\r\n      this.actionAvatarComponentRef.instance.setHeader(this.header);\r\n      this.actionAvatarComponentRef.instance.setBubbleOn(this.bubbleOn);\r\n      this.actionAvatarComponentRef.instance.actionButton.subscribe(($event: any) => {\r\n        this.actionButton.emit($event);\r\n        console.log(\"Click: Change it now\");\r\n      });\r\n    }\r\n  }\r\n  ngAfterViewInit(): void {}\r\n\r\n  showPopup() {\r\n    if (this.bubbleOn) {\r\n      this.show = true;\r\n      this.triggerDetectionChange.emit();\r\n    }\r\n  }\r\n\r\n  hidePopup() {\r\n    this.show = false;\r\n    this.triggerDetectionChange.emit();\r\n  }\r\n\r\n  setHeader(header: string) {\r\n    this.header = header;\r\n    this.actionAvatarComponentRef?.instance.setHeader(this.header);\r\n  }\r\n\r\n  setBubbleOn(bubbleOn: boolean) {\r\n    this.bubbleOn = bubbleOn;\r\n  }\r\n\r\n  loadCarComponent(){\r\n    const _viewContainerRef = this.content.viewContainerRef;\r\n\r\n    //removes all views in that container\r\n    _viewContainerRef.clear();\r\n\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(<Type<any>>this.options?.content);\r\n\r\n    //Create an instance of the component\r\n    const carComponentRef = _viewContainerRef.createComponent<ActionAvatarComponent>(componentFactory);\r\n/*\r\n    //Pass data to the component\r\n    carComponentRef.instance.image = 'https://images.unsplash.com/photo-1494976388531-d1058494cdd8?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80';\r\n*/\r\n  }\r\n}\r\n","import {\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Directive,\r\n  ElementRef, EventEmitter,\r\n  HostListener,\r\n  Input, Output,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { PopoverOptions } from '../popover.interface';\r\nimport {BubbleAvatarComponent} from \"./bubble-avatar.component\";\r\n\r\n@Directive({\r\n  selector: '[twPopover]',\r\n})\r\nexport class PopoverDirective {\r\n  @Input(\"twPopover\") popover?: PopoverOptions;\r\n\r\n  popoverComponentRef?: ComponentRef<BubbleAvatarComponent>;\r\n  @HostListener('mouseover', ['$event']) onMouseOver($event: any){\r\n    this.popoverComponentRef?.instance.setHeader(this.header);\r\n    this.popoverComponentRef?.instance.setBubbleOn(this.bubbleOn);\r\n    this.popoverComponentRef?.instance.showPopup();\r\n    //this.eleRef.nativeElement.style.color = 'blue';\r\n  }\r\n\r\n  @HostListener('mouseleave', ['$event']) onLeave($event: any){\r\n    this.popoverComponentRef?.instance.hidePopup();\r\n  }\r\n\r\n  @HostListener('click', ['$event']) onClick($event: any){\r\n    this.popoverComponentRef?.instance.setHeader(this.header);\r\n    this.popoverComponentRef?.instance.setBubbleOn(this.bubbleOn);\r\n    this.popoverComponentRef?.instance.showPopup();\r\n  }\r\n\r\n\r\n\r\n\r\n  constructor(private eleRef: ElementRef,\r\n              private el: ElementRef,\r\n              private viewContainer: ViewContainerRef,\r\n              private componentFactoryResolver: ComponentFactoryResolver) {}\r\n\r\n  @Input() highlight: any;\r\n  @Input() header: string = '';\r\n  @Input() bubbleOn: boolean = false;\r\n  @Output() actionButton: EventEmitter<any> = new EventEmitter<any> ();\r\n  @Output() avatarButton: EventEmitter<any> = new EventEmitter<any> ();\r\n\r\n\r\n/*\r\n  @HostListener('mouseover') onMouseOver() {\r\n    this.popoverComponentRef?.instance.showPopup();\r\n    this.eleRef.nativeElement.style.color = this.colorName;\r\n  }*/\r\n\r\n\r\n  ngOnInit(): void {\r\n    const factory =  this.componentFactoryResolver.resolveComponentFactory(BubbleAvatarComponent);\r\n\r\n    const comp = factory.create(this.viewContainer.injector);\r\n    comp.instance.display = \"I test some content\";\r\n    comp.instance.popover = this.popover?.content;\r\n    comp.instance.options = this.popover;\r\n    comp.instance.header = this.header;\r\n    comp.instance.bubbleOn = this.bubbleOn;\r\n\r\n    this.popoverComponentRef = comp;\r\n    this.el.nativeElement.classList.add(\"wrapper\");\r\n    this.el.nativeElement.appendChild(comp.location.nativeElement);\r\n\r\n    comp.hostView.detectChanges();\r\n\r\n    comp.instance.triggerDetectionChange.subscribe(() =>  {\r\n      comp.hostView.detectChanges();\r\n    });\r\n\r\n    comp.instance.actionButton.subscribe(($event: any) => {\r\n      this.actionButton.emit($event);\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"tooltip\" [ngClass]=\"{'tooltip-display' : show}\">\r\n  <!--button (click)=\"loadCarComponent()\">Load Car Component</button-->\r\n  <span *ngIf=\"!isDynamic\">{{popover}}</span>\r\n  <ng-template appDynamicComp>\r\n  </ng-template>\r\n\r\n</div>\r\n\r\n","import {\r\n  Component,\r\n  Input,\r\n  ViewChild,\r\n  OnInit,\r\n  AfterViewInit,\r\n  ComponentFactoryResolver,\r\n  ChangeDetectionStrategy,\r\n  ApplicationRef,\r\n  Output,\r\n  EventEmitter,\r\n  Type, ComponentRef\r\n} from '@angular/core';\r\nimport { DynamicCompDirective } from '../dynamic-comp.directive';\r\nimport { PopoverOptions } from '../popover.interface'\r\nimport {ActionInputComponent} from \"src/stories/actions/action-input/action-input.component\";\r\nimport {ActionInput} from \"../../actions/action-input/action-input.interface\";\r\n\r\n\r\n@Component({\r\n  selector: 'bubble-input',\r\n    templateUrl: './bubble-input.component.html',\r\n  styleUrls: ['./bubble-input.component.scss']\r\n})\r\nexport class BubbleInputComponent implements OnInit, AfterViewInit{\r\n  @Input() display: any;\r\n  @Input() popover: any;\r\n  @Input() data?: ActionInput[];\r\n  @Input() header?: string;\r\n  @Input()  options?: PopoverOptions;\r\n  show: boolean = false;\r\n  isDynamic: boolean = false;\r\n  @ViewChild(DynamicCompDirective, {static: true}) content!: DynamicCompDirective;\r\n  @Output() triggerDetectionChange: EventEmitter<void> = new EventEmitter<void> ();\r\n  actionInputComponentRef?: ComponentRef<any>;\r\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    if (this.options && typeof this.options.content !== \"string\") {\r\n      this.isDynamic = true;\r\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(<Type<any>>this.options.content);\r\n      const viewContainerRef = this.content.viewContainerRef;\r\n      viewContainerRef.clear();\r\n      this.actionInputComponentRef = viewContainerRef.createComponent(componentFactory);\r\n      this.actionInputComponentRef.instance.setConditions(this.data);\r\n      this.actionInputComponentRef.instance.setHeader(this.header);\r\n    }\r\n\r\n  }\r\n  ngAfterViewInit(): void {}\r\n\r\n  showPopup() {\r\n    if (this.data != undefined && this.data?.length > 0) {\r\n      this.show = true;\r\n      this.triggerDetectionChange.emit();\r\n    }\r\n  }\r\n\r\n  hidePopup() {\r\n    this.show = false;\r\n    this.triggerDetectionChange.emit();\r\n  }\r\n\r\n  setData(data: ActionInput[]) {\r\n    this.data = data;\r\n    this.actionInputComponentRef?.instance.setConditions(this.data);\r\n  }\r\n\r\n  setHeader(header: string) {\r\n    this.header = header;\r\n    this.actionInputComponentRef?.instance.setHeader(this.header);\r\n  }\r\n\r\n  /*   loadCarComponent(){\r\n     const _viewContainerRef = this.content.viewContainerRef;\r\n\r\n     //removes all views in that container\r\n     _viewContainerRef.clear();\r\n\r\n     const componentFactory = this.componentFactoryResolver.resolveComponentFactory(<Type<any>>this.options?.content);\r\n\r\n     //Create an instance of the compo\r\n     /*    const carComponentRef = _viewContainerRef.createComponent<ActionInputComponent>(componentFactory);\r\n\r\n         //Pass data to the component\r\n         carComponentRef.instance.image = 'https://images.unsplash.com/photo-1494976388531-d1058494cdd8?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80';\r\n\r\n   }*/\r\n}\r\n","import {\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Directive,\r\n  ElementRef,\r\n  HostListener,\r\n  Input,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { PopoverOptions } from '../popover.interface';\r\nimport {BubbleInputComponent} from \"./bubble-input.component\";\r\nimport {ActionInput} from \"../../actions/action-input/action-input.interface\";\r\n\r\n@Directive({\r\n  selector: '[inputPopover]',\r\n})\r\nexport class PopoverInputDirective {\r\n  @Input(\"inputPopover\") popover?: PopoverOptions;\r\n\r\n  popoverComponentRef?: ComponentRef<BubbleInputComponent>;\r\n  @HostListener('mouseover', ['$event']) onMouseOver($event: any){\r\n    this.popoverComponentRef?.instance.setData(this.data!);\r\n    this.popoverComponentRef?.instance.showPopup();\r\n    //this.eleRef.nativeElement.style.color = 'blue';\r\n  }\r\n\r\n  @HostListener('mouseleave', ['$event']) onLeave($event: any){\r\n    this.popoverComponentRef?.instance.hidePopup();\r\n  }\r\n\r\n  @HostListener('click', ['$event']) onClick($event: any){\r\n    this.popoverComponentRef?.instance.setData(this.data!);\r\n    this.popoverComponentRef?.instance.showPopup();\r\n  }\r\n\r\n  @HostListener('keyup', ['$event']) onDataChange($event: any) {\r\n    this.popoverComponentRef?.instance.setData(this.data!);\r\n    this.popoverComponentRef?.instance.showPopup();\r\n  }\r\n\r\n\r\n  constructor(private eleRef: ElementRef,\r\n              private el: ElementRef,\r\n              private viewContainer: ViewContainerRef,\r\n              private componentFactoryResolver: ComponentFactoryResolver) {}\r\n\r\n  @Input() highlight: any;\r\n  @Input() data?: ActionInput[] | undefined;\r\n  @Input() header?: string = '';\r\n\r\n/*\r\n  @HostListener('mouseover') onMouseOver() {\r\n    this.popoverComponentRef?.instance.showPopup();\r\n    this.eleRef.nativeElement.style.color = this.colorName;\r\n  }*/\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    const factory =  this.componentFactoryResolver.resolveComponentFactory(BubbleInputComponent);\r\n\r\n    const comp = factory.create(this.viewContainer.injector);\r\n    comp.instance.display = \"I test some content\";\r\n    comp.instance.popover = this.popover?.content;\r\n    comp.instance.options = this.popover;\r\n    comp.instance.data = this.data;\r\n    comp.instance.header = this.header;\r\n\r\n    this.popoverComponentRef = comp;\r\n    this.el.nativeElement.classList.add(\"wrapper\");\r\n    this.el.nativeElement.appendChild(comp.location.nativeElement);\r\n\r\n    comp.hostView.detectChanges();\r\n\r\n    comp.instance.triggerDetectionChange.subscribe(() =>  {\r\n      comp.hostView.detectChanges();\r\n    });\r\n  }\r\n\r\n}\r\n","import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appDynamicComp]'\r\n})\r\nexport class DynamicCompDirective {\r\n\r\n  constructor(public viewContainerRef: ViewContainerRef) {}\r\n\r\n}\r\n","\r\n\r\n\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <storybook-card-rugged class=\"\"></storybook-card-rugged>\r\n  <div  class=\"h-100 d-flex align-items-center justify-content-center\">\r\n    <storybook-button-ex id=\"button-ex\" (click)=\"this.clickXButton.emit()\" ></storybook-button-ex>\r\n    <button id=\"button-log-out\" (click)=\"this.doLogout($event)\" >Reset</button>\r\n    <div class=\"form-header\">\r\n      <img\r\n        id=\"profile-img\"\r\n        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n        class=\"profile-img-card\"\r\n      />\r\n      <a class=\"main-form-header\" #formHeader>Board-Admin</a>\r\n\r\n\r\n      <br>\r\n\r\n    <br>\r\n    <!--form name=\"form\"  (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate --> <!-- *ngIf=\"!isConfigSuccess\"-->\r\n      <form name=\"currentForm\"   [formGroup]=\"mForm\">\r\n      <div class=\"Vector\">\r\n\r\n        <div class=\"login-button\">\r\n        <div *ngIf=\"isRegSuccess\" id=\"button-successfully\" style=\"\">\r\n          <storybook-button-successfully   ></storybook-button-successfully>\r\n        </div>\r\n\r\n\r\n            <div *ngIf=\"!isRegSuccess\">\r\n              <storybook-configuration-input\r\n                [storyInput]=\"storyInputsInOrder[0]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\">\r\n              </storybook-configuration-input>\r\n              <div class=\"thematic-break\"></div>\r\n              <storybook-configuration-input\r\n                [storyInput]=\"storyInputsInOrder[1]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\">\r\n              </storybook-configuration-input>\r\n              <div class=\"thematic-break\"></div>\r\n              <storybook-configuration-input\r\n                [storyInput]=\"storyInputsInOrder[2]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\">\r\n              </storybook-configuration-input>\r\n              <div class=\"thematic-break\"></div>\r\n              <storybook-configuration-input\r\n                [storyInput]=\"storyInputsInOrder[3]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (changePassword)=\"changePassword.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\">\r\n              </storybook-configuration-input>\r\n              <div class=\"thematic-break\"></div>\r\n              <storybook-configuration-input\r\n                [storyInput]=\"storyInputsInOrder[4]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (changePassword)=\"changePassword.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\">\r\n              </storybook-configuration-input>\r\n              <div class=\"thematic-break\"></div>\r\n\r\n            </div>\r\n\r\n            <div class=\"login-failed-message\" role=\"alert\" >\r\n              <p *ngIf=\"isRegFailed\">*  {{ this.regErrorMessage['message'] | apiErrorMessage: param }}</p>\r\n            </div>\r\n\r\n\r\n            <storybook-button-continue [label]=\"'Save Changes'\" size=\"small\" style=\"position: relative; align-items: end; display: flex; flex-direction: row-reverse;\"\r\n                                       label=\"Continue\" type=\"button\" (click)=\"onSubmit()\" >\r\n            </storybook-button-continue>\r\n\r\n      </div>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n","import {\r\n  AfterViewChecked,\r\n  Component, Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input, OnChanges,\r\n  OnInit,\r\n  Output,\r\n  QueryList,\r\n  Renderer2, SimpleChanges, Type, ViewChild,\r\n  ViewChildren\r\n} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport {ApiErrorMessageService} from \"../../../app/storybook/pipes/api-error-message.service\";\r\nimport {ConfigurationInput} from \"../../inputs/configuration-input/configuration-input.model\";\r\nimport {typeofExpr} from \"@angular/compiler/src/output/output_ast\";\r\n//import {BehaviorSubject} from \"rxjs\";\r\n//import {AccountInputComponent} from \"../inputs/input/story-input.component\";\r\n\r\n/*\r\n@Directive({selector: 'storybook-input'})\r\nexport class AccountInput {\r\n  @Input() storyInput!: AccountInput;\r\n}\r\n*/\r\n@Component({\r\n  selector: 'storybook-configuration-form',\r\n  templateUrl: './configuration-form.component.html',\r\n  styleUrls: ['./configuration-form.css'],\r\n})\r\nexport default class ConfigurationFormComponent implements OnInit, AfterViewChecked, OnChanges {\r\n\r\n  @Output() onLogout = new EventEmitter<Event>();\r\n\r\n  @Output() openUser = new EventEmitter<Event>();\r\n\r\n  doLogout(event: Event) {\r\n    this.onLogout.emit(event);\r\n    this.clickXButton.emit();\r\n  }\r\n\r\n  @Input() formService!: AuthService;\r\n\r\n  credentials: any = {\r\n    username: null,\r\n    password: null\r\n  };\r\n\r\n  @Input() isRegFailed = false;\r\n  @Input() regErrorMessage: any = {};\r\n\r\n\r\n  openReplacePassword() {\r\n    //this.replacePassFormService.open(ReplacePassForm2Component);\r\n  }\r\n\r\n  @ViewChild('formHeader', { static: false }) mainHeader?: ElementRef;\r\n  @ViewChild('storybook-input', { static: false }) storybookInput?: ElementRef;\r\n\r\n\r\n  param = {language: 'login-main'};\r\n\r\n  constructor(private renderer: Renderer2) {\r\n  }\r\n\r\n  storyInputsInOrder: ConfigurationInput[] = [];\r\n\r\n  @Input() mForm: FormGroup  = new FormGroup({});\r\n  /*username: new FormControl('', Validators.minLength(2)),\r\n  password: new FormControl('T@diran2022', Validators.minLength(2)),\r\n  email: new FormControl('', Validators.email),\r\n  phone: new FormControl(null, Validators.pattern(new RegExp(\"[0-9 ]{12}\")))*/\r\n\r\n  changeLog: string[] = [];\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.isRegSuccess) {\r\n      if (!changes.isRegSuccess.previousValue &&  changes.isRegSuccess.currentValue) {\r\n        console.warn('Register Request Succeeded!');\r\n        this.loadSuccessfullyLoggedIn();\r\n      }\r\n    }\r\n    /*if (changes.isConfigFailed || changes.configErrorMessage) {\r\n      console.log('isConfigFailed' + this.configErrorMessage['message'])\r\n    }*/\r\n  }\r\n\r\n\r\n\r\n  @Input() isRegSuccess = false;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onPinInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onArchiveInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() saveChanges: EventEmitter<void> = new EventEmitter();\r\n\r\n  @Output() clickXButton: EventEmitter<void> = new EventEmitter();\r\n\r\n  @Output() changePassword: EventEmitter<void> = new EventEmitter();\r\n\r\n\r\n\r\n  @Input()\r\n  set storyInputs(arr: ConfigurationInput[]) {\r\n    const initialTasks = [\r\n      ...arr.filter(t => t.state === 'USER NAME'),\r\n      ...arr.filter(t => t.state !== 'USER NAME'),\r\n    ];\r\n    const filteredTasks = initialTasks.filter(\r\n      t =>  t.state == t.state || t.state === 'USER NAME1' || t.state === 'EMAIL' || t.state === 'PHONE NUMBER FOR AUTHENTICATION'\r\n    );\r\n    this.storyInputsInOrder = filteredTasks.filter(\r\n      t =>  t.state == t.state || t.state === 'PASSWORD' || t.state === 'USER NAME' || t.state === 'EMAIL' || t.state === 'PHONE NUMBER FOR AUTHENTICATION');\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.warn('Registry Request Sent!');\r\n    this.saveChanges.emit();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n  get userName(): AbstractControl {\r\n    return this.mForm?.get('username')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.mForm?.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.mForm?.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.mForm?.get('phone')!;\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    //console.log(this.childComp?.length)\r\n  }\r\n\r\n  loadSuccessfullyLoggedIn(){\r\n    this.renderer.setProperty(this.mainHeader?.nativeElement ,'innerHTML','You have successfully complete your registeration!');\r\n\r\n\r\n  }\r\n\r\n}\r\n\r\n","\r\n\r\n\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <storybook-card class=\"card-container\"></storybook-card>\r\n  <div  class=\"h-100 d-flex align-items-center justify-content-center\">\r\n    <storybook-button-ex id=\"button-ex\" (click)=\"this.clickXButton.emit()\" ></storybook-button-ex>\r\n    <div  #formHeader class=\"form-header\">\r\n      Forgot Password?\r\n    </div>\r\n\r\n    <br>\r\n    <!--form name=\"form\"  (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate --> <!-- *ngIf=\"!isConfigSuccess\"-->\r\n    <form name=\"currentForm\" [formGroup]=\"mForm\">\r\n      <div  class=\"Vector\">\r\n\r\n\r\n\r\n        <div class=\"second-header\" style=\"top: 5px;\">\r\n          <p class=\"second-header-text\"  #secondHeader href=\"#/login\" style=\"position: relative; top: 5px; text-align: left\">\r\n            {{ 'Please enter your User Name:'}}<br>\r\n          </p>\r\n        </div>\r\n\r\n\r\n        <div #formFields id=\"button-successfully\" style=\"\">\r\n          <storybook-button-successfully  *ngIf=\"status.isRecSuccess\"  style=\"position: relative; top: 15px\"></storybook-button-successfully>\r\n          <ng-template  *ngIf=\"status.isVerSuccess\"  appDynamicComp>\r\n\r\n          </ng-template>\r\n\r\n          <storybook-input  style=\"\" *ngIf=\"!status.isRecSuccess\"\r\n                           [storyInput]=\"storyInputsInOrder[0]\"\r\n                           (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                           (onPinInput)=\"onPinInput.emit($event)\"\r\n                           [currentForm]=\"mForm\">\r\n          </storybook-input>\r\n          <!--code-input *ngIf=\"!status.isVerSuccess\"\r\n                      #codeInput\r\n                      [codeLength]=\"codeLength\"\r\n                      (codeChanged)=\"onCodeChanged($event)\"\r\n                      (codeCompleted)=\"onCodeCompleted($event)\">\r\n          </code-input-->\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        <div class=\"login-button\">\r\n          <div class=\"login-failed-message\" role=\"alert\" style=\"position: relative; top: 15px\">\r\n            <table *ngIf=\"this.status?.isVerFailed\">\r\n              <tr>{{ this.status?.verErrorMessage.toString()  | apiErrorMessage: param }}</tr>\r\n              <tr  *ngFor=\"let message of this.status?.verErrorMessage.data?.confirmPassword.split(', ')\">{{message.trim() | apiErrorMessage: param }}</tr>\r\n            </table>\r\n          </div>\r\n\r\n          <storybook-button-continue #formButton size=\"small\" [label]=\"this.formButtonLabel\" type=\"button\"\r\n                                     (onClick)=\"this.onSubmit()\" style=\"position: relative; top: 15px\"></storybook-button-continue>\r\n\r\n\r\n          <a *ngIf=\"status.isRecSuccess && !status.isVerSuccess\" class=\"resend-verification\"  (click)=\"generateNewCodeFor2SV.emit()\" style=\"position: relative; top: 40px;\">\r\n            {{ 'Send me a reset password once again'  }}\r\n          </a>\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n      </div>\r\n\r\n\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n","import {\r\n  Component, ComponentFactoryResolver, ComponentRef,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n  SimpleChanges, Type,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { StoryInput } from \"src/stories/inputs/input/story-input.model\";\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport {CodeInputComponent} from \"../../inputs/code-input/code-input.component\";\r\nimport {DynamicCompDirective} from \"../../directive/dynamic-comp.directive\";\r\nimport {PopoverOptions} from \"../../directive/popover.interface\";\r\n\r\n\r\nexport interface AdComponent {\r\n  content: any;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-forgot-pass-form',\r\n  templateUrl: './forgot-pass-form.component.html',\r\n  styleUrls: ['./forgot-pass-form.component.scss'],\r\n})\r\nexport default class ForgotPassFormComponent implements OnInit {\r\n\r\n  codeLength: number = 4;\r\n  code: string = '';\r\n  param = {language: 'login-main'};\r\n  formButtonLabel: string = 'Send me a Verification Code';\r\n  formButtonClick: string = 'generateNewCodeFor2SV.emit()';\r\n\r\n  @Input() status?: any;\r\n\r\n  @Input() isLoading: boolean = false;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onPinInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onArchiveInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() sendVerificationReq: EventEmitter<string> = new EventEmitter();\r\n\r\n  @Output() generateNewCodeFor2SV: EventEmitter<void> = new EventEmitter();\r\n\r\n  @ViewChild(DynamicCompDirective, {static: true}) appDynamicComp!: DynamicCompDirective;\r\n  //@ViewChild('codeInput') codeInput!: CodeInputComponent;\r\n\r\n  @Output() clickXButton: EventEmitter<void> = new EventEmitter();\r\n\r\n  @ViewChild('secondHeader', { static: false }) secondHeader?: ElementRef;\r\n\r\n  @ViewChild('formHeader', { static: false }) formHeader?: ElementRef;\r\n\r\n  @ViewChild('formFields', { static: false }) formFields?: ElementRef;\r\n\r\n  @ViewChild('formButton', { static: false }) formButton?: ElementRef;\r\n\r\n  @Input() isVerSuccess = false;\r\n\r\n  @Input() isRecSuccess = false;\r\n\r\n  constructor(private renderer: Renderer2,\r\n              private componentFactoryResolver: ComponentFactoryResolver) {}\r\n\r\n  changeLog: string[] = [];\r\n\r\n\r\n  @Input()\r\n  set storyInputs(arr: StoryInput[]) {\r\n    const initialTasks = [\r\n      ...arr.filter(t => t.state === 'USER NAME'),\r\n      ...arr.filter(t => t.state !== 'USER NAME'),\r\n    ];\r\n    const filteredTasks = initialTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME'\r\n    );\r\n    this.storyInputsInOrder = filteredTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME'\r\n    );\r\n  }\r\n\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.isRecSuccess) {\r\n      if (!changes.isRecSuccess.previousValue &&  changes.isRecSuccess.currentValue) {\r\n        console.warn('Identify Request Succeeded!');\r\n        this.movToVerifyState();\r\n      }\r\n    }\r\n\r\n    if (changes.isVerSuccess) {\r\n      if (!changes.isVerSuccess.previousValue &&  changes.isVerSuccess.currentValue) {\r\n        console.warn('Verify Request Succeeded!');\r\n        //this.changeFormToPinCodeState();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  onSubmit(): void {\r\n    if (!this.isRecSuccess) {this.generateNewCodeFor2SV.emit();}\r\n    /*else if (!this.isVerSuccess) {\r\n      console.info('Send Verification Request!');\r\n      this.sendVerificationReq.emit(this.code);\r\n      if (!this.status.isVerSuccess) {this.codeInputComponentRef?.instance.reset();}\r\n    }*/\r\n    else {this.clickXButton.emit();}\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * Component property to define ordering of Inputs\r\n   */\r\n  storyInputsInOrder: StoryInput[] = [];\r\n\r\n  @Input() mForm: FormGroup = new FormGroup({});\r\n\r\n  // this called every time when user changed the code\r\n  onCodeChanged(code: string) {\r\n    this.code = code;\r\n    //console.log('code entered: '+ this.code);\r\n  }\r\n\r\n  // this called only if user entered full code\r\n  onCodeCompleted(code: string) {\r\n    //\r\n  }\r\n\r\n  popoverOptions: AdComponent = {\r\n    content: CodeInputComponent\r\n  };\r\n\r\n  codeInputComponentRef?: ComponentRef<any>;\r\n\r\n  movToVerifyState(){\r\n    this.renderer.setProperty(this.formHeader?.nativeElement ,'innerHTML',\r\n      'Reset Password');\r\n\r\n    this.renderer.setProperty(this.secondHeader?.nativeElement ,'innerHTML',\r\n      'A new temporary password has been sent to<br>your email address'); //+\r\n      //'Once received, use the temporary password to log in<br>' +\r\n      //'You will be required to create a new secure password once logged in<br>'\r\n\r\n    this.formButtonLabel = 'Continue';\r\n\r\n    this.formButtonClick = '\"onSubmit()\"';\r\n\r\n\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(<Type<any>>this.popoverOptions.content);\r\n    const viewContainerRef = this.appDynamicComp.viewContainerRef;\r\n    viewContainerRef.clear();\r\n    this.codeInputComponentRef = viewContainerRef.createComponent(componentFactory);\r\n    this.codeInputComponentRef.instance.codeChanged.subscribe(($event: string) => {\r\n      this.onCodeChanged($event);\r\n      console.log(\"Code Changed\");\r\n    });\r\n\r\n\r\n  }\r\n}\r\n\r\n","\r\n\r\n\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <storybook-card class=\"card-container\"></storybook-card>\r\n  <div  class=\"h-100 d-flex align-items-center justify-content-center\">\r\n    <div class=\"form-header\">\r\n      <a>Aeonix App Center</a>\r\n    </div>\r\n    <div><storybook-spinner1  *ngIf=\"isLoading\"></storybook-spinner1></div>\r\n\r\n    <br>\r\n    <!--form name=\"form\"  (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate --> <!-- *ngIf=\"!isConfigSuccess\"-->\r\n      <form name=\"currentForm\"   [formGroup]=\"mForm\">\r\n      <div  *ngIf=\"!isLoggedIn\" class=\"Vector\">\r\n\r\n        <div class=\"login-button\">\r\n\r\n            <div *ngIf=\"isLoggedIn\">isConfigSuccess</div>\r\n            <div *ngIf=\"!isLoggedIn && storyInputsInOrder.length === 0\">empty</div>\r\n            <storybook-input\r\n              [storyInput]=\"storyInputsInOrder[0]\"\r\n              (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n              (onPinInput)=\"onPinInput.emit($event)\"\r\n              [currentForm]=\"mForm\">\r\n            </storybook-input>\r\n\r\n            <storybook-input\r\n              [storyInput]=\"storyInputsInOrder[1]\"\r\n              (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n              (onPinInput)=\"onPinInput.emit($event)\"\r\n              [currentForm]=\"mForm\">\r\n            </storybook-input>\r\n\r\n\r\n            <br>\r\n            <div class=\"thematic-break\"></div>\r\n            <div class=\"login-failed-message\" role=\"alert\" >\r\n              <p *ngIf=\"isLoginFailed\">*  {{ loginErrorMessage | apiErrorMessage: param }}</p>\r\n            </div>\r\n\r\n\r\n            <a (click)=\"this.openForgetPassForm.emit();\" class=\"forgot-password\"  >\r\n              {{ 'Forgot password?'  }}\r\n            </a>\r\n\r\n            <storybook-button-continue size=\"medium\" label=\"Continue \" type=\"button\" (click)=\"onSubmit()\" ></storybook-button-continue>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n","import {Component, ElementRef, EventEmitter, Input, OnInit, Output, Renderer2, ViewChild} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { StoryInput } from \"../../inputs/input/story-input.model\";\r\nimport { AuthService } from '../../../app/_services/auth.service';\r\n//import {ApiErrorMessageService} from \"../../../app/storybook/pipes/api-error-message.service\";\r\n//import {ApiErrorMessageService} from \"../../../app/storybook/pipes/api-error-message.service\";\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-login-form',\r\n  templateUrl: './login-form.component.html',\r\n  styleUrls: ['./login-form.css'],\r\n})\r\nexport default class LoginFormComponent implements OnInit {\r\n\r\n\r\n  param = {language: 'login-main'};\r\n\r\n  @Input() formService!: AuthService;\r\n\r\n  @Input() isLoginFailed = false;\r\n\r\n  @Input() loginErrorMessage = '';\r\n\r\n  @Input() isLoading: boolean = false;\r\n\r\n\r\n  openReplacePassword() {\r\n    //this.replacePassFormService.open(ReplacePassForm2Component);\r\n  }\r\n\r\n  constructor(/*private apiErrorMessage: ApiErrorMessageService*/) {\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * @ignore\r\n   * Component property to define ordering of Inputs\r\n   */\r\n  storyInputsInOrder: StoryInput[] = [];\r\n\r\n  @Input() mForm: FormGroup = new FormGroup({});\r\n\r\n  @Input() isLoggedIn = false;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onPinInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onArchiveInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() sendLoginReq = new EventEmitter();\r\n\r\n  @Output() openForgetPassForm = new EventEmitter();\r\n\r\n\r\n  @Input()\r\n  set storyInputs(arr: StoryInput[]) {\r\n    const initialTasks = [\r\n      ...arr.filter(t => t.state === 'USER NAME'),\r\n      ...arr.filter(t => t.state !== 'USER NAME'),\r\n    ];\r\n    const filteredTasks = initialTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME'\r\n    );\r\n    this.storyInputsInOrder = filteredTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME'\r\n    );\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.warn('Login Request!');\r\n\r\n    this.sendLoginReq.emit();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  get userName(): AbstractControl {\r\n    return this.mForm?.get('username')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.mForm?.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.mForm?.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.mForm?.get('phone')!;\r\n  }\r\n\r\n\r\n}\r\n\r\n","\r\n\r\n\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <storybook-card class=\"card-container\"></storybook-card>\r\n  <div  class=\"h-100 d-flex align-items-center justify-content-center\">\r\n    <storybook-button-ex id=\"button-ex\" (click)=\"this.clickXButton.emit()\" ></storybook-button-ex>\r\n    <button id=\"button-log-out\" (click)=\"this.doLogout($event)\" >Log out</button>\r\n    <label style=\"top: 1px; display: inline;\">Log out</label>\r\n    <div class=\"form-header\">\r\n      <a class=\"main-form-header\" #formHeader>My Account</a>\r\n      <br>\r\n\r\n    <br>\r\n    <!--form name=\"form\"  (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate --> <!-- *ngIf=\"!isConfigSuccess\"-->\r\n      <form name=\"currentForm\"   [formGroup]=\"mForm\">\r\n      <div class=\"Vector\">\r\n\r\n\r\n        <div *ngIf=\"isRegSuccess\" id=\"button-successfully\" style=\"\">\r\n          <storybook-button-successfully   style=\"position: relative; margin-bottom: 50px;\"></storybook-button-successfully>\r\n        </div>\r\n\r\n        <div class=\"login-button\">\r\n            <div *ngIf=\"!isRegSuccess && storyInputsInOrder.length === 0\">empty</div>\r\n            <div *ngIf=\"!isRegSuccess\">\r\n              <storybook-account-input\r\n                [storyInput]=\"storyInputsInOrder[0]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\">\r\n              </storybook-account-input>\r\n              <div class=\"thematic-break\"></div>\r\n              <storybook-account-input\r\n                [storyInput]=\"storyInputsInOrder[1]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\"\r\n                [conditionList]=\"['requiresPhone']\">\r\n              </storybook-account-input>\r\n              <div class=\"thematic-break\"></div>\r\n              <storybook-account-input\r\n                [storyInput]=\"storyInputsInOrder[2]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\"\r\n                [conditionList]=\"['requiresEmail']\">\r\n              </storybook-account-input>\r\n              <div class=\"thematic-break\"></div>\r\n              <storybook-account-input\r\n                [storyInput]=\"storyInputsInOrder[3]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (changePassword)=\"changePassword.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\">\r\n              </storybook-account-input>\r\n\r\n            </div>\r\n\r\n            <div class=\"login-failed-message\" role=\"alert\" >\r\n              <p *ngIf=\"isRegFailed\">*  {{ this.regErrorMessage['message'] | apiErrorMessage: param }}</p>\r\n            </div>\r\n\r\n            <!--storybook-button-continue  hidden size=\"small\"\r\n                                       label=\"Continue\" type=\"button\" (click)=\"onSubmit()\" >\r\n            </storybook-button-continue-->\r\n\r\n            <storybook-button-configuration *ngIf=\"displayToolButton\" class=\"button-configuration\" size=\"large\"\r\n                                            (click)=\"this.openUser.emit()\">\r\n            </storybook-button-configuration>\r\n        </div>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n","import {\r\n  AfterViewChecked,\r\n  Component, Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input, OnChanges,\r\n  OnInit,\r\n  Output,\r\n  QueryList,\r\n  Renderer2, SimpleChanges, ViewChild,\r\n  ViewChildren\r\n} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport {ApiErrorMessageService} from \"../../../app/storybook/pipes/api-error-message.service\";\r\nimport {AccountInput} from \"../../inputs/account-input/account-input.model\";\r\n//import {BehaviorSubject} from \"rxjs\";\r\n//import {AccountInputComponent} from \"../inputs/input/story-input.component\";\r\n\r\n/*\r\n@Directive({selector: 'storybook-input'})\r\nexport class AccountInput {\r\n  @Input() storyInput!: AccountInput;\r\n}\r\n*/\r\n@Component({\r\n  selector: 'storybook-my-account-form',\r\n  templateUrl: './my-account-form.component.html',\r\n  styleUrls: ['./my-account-form.css'],\r\n})\r\nexport default class MyAccountFormComponent implements OnInit, AfterViewChecked, OnChanges {\r\n\r\n  @Output() onLogout = new EventEmitter<Event>();\r\n\r\n  @Output() openUser = new EventEmitter<Event>();\r\n\r\n  doLogout(event: Event) {\r\n    this.onLogout.emit(event);\r\n    this.clickXButton.emit();\r\n  }\r\n\r\n  @Input() formService!: AuthService;\r\n\r\n  credentials: any = {\r\n    username: null,\r\n    password: null\r\n  };\r\n\r\n  @Input() isRegFailed = false;\r\n  @Input() regErrorMessage: any = {};\r\n  @Input() displayToolButton: boolean = false;\r\n\r\n  openReplacePassword() {\r\n    //this.replacePassFormService.open(ReplacePassForm2Component);\r\n  }\r\n\r\n  @ViewChild('formHeader', { static: false }) mainHeader?: ElementRef;\r\n  @ViewChild('storybook-input', { static: false }) storybookInput?: ElementRef;\r\n\r\n\r\n  param = {language: 'login-main'};\r\n\r\n  constructor(private renderer: Renderer2) {\r\n  }\r\n\r\n  storyInputsInOrder: AccountInput[] = [];\r\n\r\n  @Input() mForm: FormGroup  = new FormGroup({});\r\n  /*username: new FormControl('', Validators.minLength(2)),\r\n  password: new FormControl('T@diran2022', Validators.minLength(2)),\r\n  email: new FormControl('', Validators.email),\r\n  phone: new FormControl(null, Validators.pattern(new RegExp(\"[0-9 ]{12}\")))*/\r\n\r\n  changeLog: string[] = [];\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.isRegSuccess) {\r\n      if (!changes.isRegSuccess.previousValue &&  changes.isRegSuccess.currentValue) {\r\n        console.warn('Register Request Succeeded!');\r\n        this.loadSuccessfullyLoggedIn();\r\n      }\r\n    }\r\n    /*if (changes.isConfigFailed || changes.configErrorMessage) {\r\n      console.log('isConfigFailed' + this.configErrorMessage['message'])\r\n    }*/\r\n  }\r\n\r\n\r\n\r\n  @Input() isRegSuccess = false;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onPinInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onArchiveInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() sendRegReq: EventEmitter<void> = new EventEmitter();\r\n\r\n  @Output() clickXButton: EventEmitter<void> = new EventEmitter();\r\n\r\n  @Output() changePassword: EventEmitter<void> = new EventEmitter();\r\n\r\n\r\n\r\n  @Input()\r\n  set storyInputs(arr: AccountInput[]) {\r\n    const initialTasks = [\r\n      ...arr.filter(t => t.state === 'USER NAME'),\r\n      ...arr.filter(t => t.state !== 'USER NAME'),\r\n    ];\r\n    const filteredTasks = initialTasks.filter(\r\n      t =>  t.state === 'PASSWORD' || t.state === 'USER NAME' || t.state === 'EMAIL' || t.state === 'PHONE NUMBER FOR AUTHENTICATION'\r\n    );\r\n    this.storyInputsInOrder = filteredTasks.filter(\r\n      t => t.state === 'PASSWORD' || t.state === 'USER NAME' || t.state === 'EMAIL' || t.state === 'PHONE NUMBER FOR AUTHENTICATION');\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.warn('Registry Request Sent!');\r\n    this.sendRegReq.emit();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n  get userName(): AbstractControl {\r\n    return this.mForm?.get('username')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.mForm?.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.mForm?.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.mForm?.get('phone')!;\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    //console.log(this.childComp?.length)\r\n  }\r\n\r\n  loadSuccessfullyLoggedIn(){\r\n    this.renderer.setProperty(this.mainHeader?.nativeElement ,'innerHTML','You have successfully complete your registeration!');\r\n\r\n\r\n  }\r\n\r\n}\r\n\r\n","\r\n\r\n\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <storybook-card class=\"card-container\"></storybook-card>\r\n  <div  class=\"h-100 d-flex align-items-center justify-content-center\">\r\n    <storybook-button-ex id=\"button-ex\" (click)=\"this.clickXButton.emit()\" ></storybook-button-ex>\r\n    <div class=\"form-header\">\r\n      <a class=\"main-form-header\" #formHeader>Complete Registration</a>\r\n      <br>\r\n      <a *ngIf=\"!isRegSuccess\" class=\"sub-form-header\">complete the registration by filling the missing info:</a>\r\n\r\n    <br>\r\n    <!--form name=\"form\"  (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate --> <!-- *ngIf=\"!isConfigSuccess\"-->\r\n      <form name=\"currentForm\"   [formGroup]=\"mForm\">\r\n      <div class=\"Vector\">\r\n\r\n\r\n        <div *ngIf=\"isRegSuccess\" id=\"button-successfully\" style=\"\">\r\n          <storybook-button-successfully   style=\"position: relative; margin-bottom: 50px;\"></storybook-button-successfully>\r\n        </div>\r\n\r\n        <div class=\"login-button\">\r\n            <div *ngIf=\"!isRegSuccess && storyInputsInOrder.length === 0\">empty</div>\r\n            <div *ngIf=\"!isRegSuccess\">\r\n              <storybook-input\r\n                [storyInput]=\"storyInputsInOrder[0]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\">\r\n              </storybook-input>\r\n              <storybook-input\r\n                [storyInput]=\"storyInputsInOrder[1]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\">\r\n              </storybook-input>\r\n              <storybook-input\r\n                [storyInput]=\"storyInputsInOrder[2]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\"\r\n                [conditionList]=\"['requiresPhone']\">\r\n              </storybook-input>\r\n              <storybook-input\r\n                [storyInput]=\"storyInputsInOrder[3]\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\"\r\n                [conditionList]=\"['requiresEmail']\">\r\n              </storybook-input>\r\n              <!--storybook-input\r\n                *ngFor=\"let storyInput of storyInputsInOrder\"\r\n                [storyInput]=\"storyInput\"\r\n                (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                (onPinInput)=\"onPinInput.emit($event)\"\r\n                [currentForm]=\"mForm\">\r\n              </storybook-input-->\r\n            </div>\r\n\r\n            <div *ngIf=\"!isRegSuccess\" class=\"thematic-break\"></div>\r\n            <div class=\"login-failed-message\" role=\"alert\" >\r\n              <p *ngIf=\"isRegFailed\">*  {{ this.regErrorMessage['message'] | apiErrorMessage: param }}</p>\r\n            </div>\r\n\r\n            <storybook-button-continue [label]=\"isRegSuccess ? 'Continue' :'Complete Rgistration'\"  size=\"small\"\r\n                                       label=\"Continue\" type=\"button\" (click)=\"onSubmit()\" >\r\n            </storybook-button-continue>\r\n        </div>\r\n        </div>\r\n\r\n    </form>\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n","import {\r\n  AfterViewChecked,\r\n  Component, Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input, OnChanges,\r\n  OnInit,\r\n  Output,\r\n  QueryList,\r\n  Renderer2, SimpleChanges, ViewChild,\r\n  ViewChildren\r\n} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { StoryInput } from \"src/stories/inputs/input/story-input.model\";\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport {ApiErrorMessageService} from \"../../../app/storybook/pipes/api-error-message.service\";\r\n//import {BehaviorSubject} from \"rxjs\";\r\n//import {AccountInputComponent} from \"../inputs/input/story-input.component\";\r\n\r\n/*\r\n@Directive({selector: 'storybook-input'})\r\nexport class AccountInput {\r\n  @Input() storyInput!: AccountInput;\r\n}\r\n*/\r\n@Component({\r\n  selector: 'storybook-registry-form',\r\n  templateUrl: './registry-form.component.html',\r\n  styleUrls: ['./registry-form.css'],\r\n})\r\nexport default class RegistryFormComponent implements OnInit, AfterViewChecked, OnChanges {\r\n\r\n/*\r\n  @ViewChild('storybook-input')\r\n  set mStoryInput(v: AccountInput) {\r\n    setTimeout(() => {\r\n      this.selectedPane = v.id;\r\n      console.log('this.selectedPane'+this.selectedPane.toString())\r\n    }, 30);\r\n  }\r\n  selectedPane: string = '';\r\n  shouldShow = true;\r\n  toggle() {\r\n    this.shouldShow = !this.shouldShow;\r\n  }\r\n*/\r\n\r\n  @Input() formService!: AuthService;\r\n\r\n  credentials: any = {\r\n    username: null,\r\n    password: null\r\n  };\r\n\r\n  @Input() isRegFailed = false;\r\n\r\n  @Input() regErrorMessage: any = {};\r\n\r\n  @Input() isLoading: boolean = false;\r\n\r\n  openReplacePassword() {\r\n    //this.replacePassFormService.open(ReplacePassForm2Component);\r\n  }\r\n\r\n  @ViewChild('formHeader', { static: false }) mainHeader?: ElementRef;\r\n  @ViewChild('storybook-input', { static: false }) storybookInput?: ElementRef;\r\n\r\n\r\n  param = {language: 'login-main'};\r\n\r\n  constructor(private renderer: Renderer2) {\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * Component property to define ordering of tasks\r\n   */\r\n  storyInputsInOrder: StoryInput[] = [];\r\n\r\n  @Input() mForm: FormGroup  = new FormGroup({});\r\n  /*username: new FormControl('', Validators.minLength(2)),\r\n  password: new FormControl('T@diran2022', Validators.minLength(2)),\r\n  email: new FormControl('', Validators.email),\r\n  phone: new FormControl(null, Validators.pattern(new RegExp(\"[0-9 ]{12}\")))*/\r\n\r\n  changeLog: string[] = [];\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.isRegSuccess) {\r\n      if (!changes.isRegSuccess.previousValue &&  changes.isRegSuccess.currentValue) {\r\n        console.warn('Register Request Succeeded!');\r\n        this.loadSuccessfullyLoggedIn();\r\n      }\r\n    }\r\n    /*if (changes.isConfigFailed || changes.configErrorMessage) {\r\n      console.log('isConfigFailed' + this.configErrorMessage['message'])\r\n    }*/\r\n  }\r\n\r\n\r\n\r\n  @Input() isRegSuccess = false;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onPinInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onArchiveInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() sendRegReq: EventEmitter<void> = new EventEmitter();\r\n\r\n  @Output() clickXButton: EventEmitter<void> = new EventEmitter();\r\n\r\n\r\n\r\n  @Input()\r\n  set storyInputs(arr: StoryInput[]) {\r\n    const initialTasks = [\r\n      ...arr.filter(t => t.state === 'USER NAME'),\r\n      ...arr.filter(t => t.state !== 'USER NAME'),\r\n    ];\r\n    const filteredTasks = initialTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME' || t.state === 'EMAIL' || t.state === 'PHONE NUMBER FOR AUTHENTICATION'\r\n    );\r\n    this.storyInputsInOrder = filteredTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME' || t.state === 'EMAIL' || t.state === 'PHONE NUMBER FOR AUTHENTICATION');\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.warn('Registry Request Sent!');\r\n\r\n    //this.renderer.setAttribute(this.storybookInput?.nativeElement ,'hidden', 'true');\r\n    //this.renderer.setAttribute(this.mainHeader?.nativeElement ,'hidden', 'true');\r\n    //this.renderer.setProperty(this.mainHeader?.nativeElement ,'innerHTML','You have successfully complete your registeration!');\r\n\r\n\r\n    //this.renderer.setAttribute(this.storybookInput?.nativeElement ,'innerHTML','true');\r\n    this.sendRegReq.emit();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n  get userName(): AbstractControl {\r\n    return this.mForm?.get('username')!;\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.mForm?.get('email')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.mForm?.get('password')!;\r\n  }\r\n\r\n  get phone(): AbstractControl {\r\n    return this.mForm?.get('phone')!;\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    //console.log(this.childComp?.length)\r\n  }\r\n\r\n  loadSuccessfullyLoggedIn(){\r\n    this.renderer.setProperty(this.mainHeader?.nativeElement ,'innerHTML','You have successfully complete your registeration!');\r\n\r\n\r\n  }\r\n\r\n}\r\n\r\n","\r\n\r\n\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <storybook-card class=\"card-container\"></storybook-card>\r\n  <div  class=\"h-100 d-flex align-items-center justify-content-center\">\r\n    <storybook-button-ex id=\"button-ex\" (click)=\"this.clickXButton.emit()\" ></storybook-button-ex>\r\n    <div class=\"form-header\">\r\n      <a class=\"main-form-header\" #formHeader>Change Password</a>\r\n      <br>\r\n\r\n      <br>\r\n      <form name=\"currentForm\"   [formGroup]=\"mForm\">\r\n        <div class=\"Vector\">\r\n\r\n          <div *ngIf=\"status.isRepSuccess\" id=\"button-successfully\" style=\"\">\r\n            <storybook-button-successfully   style=\"position: relative; margin-bottom: 50px;\"></storybook-button-successfully>\r\n          </div>\r\n\r\n          <div class=\"login-button\">\r\n              <div *ngIf=\"!status.isRepSuccess && storyInputsInOrder.length === 0\">empty</div>\r\n              <div *ngIf=\"!status.isRepSuccess\">\r\n                <storybook-input\r\n                  [storyInput]=\"storyInputsInOrder[0]\"\r\n                  (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                  (onPinInput)=\"onPinInput.emit($event)\"\r\n                  [currentForm]=\"mForm\">\r\n                </storybook-input>\r\n\r\n                <div *ngIf=\"!status.isRepSuccess\" class=\"thematic-break\"></div>\r\n\r\n                <storybook-input\r\n                  [storyInput]=\"storyInputsInOrder[1]\"\r\n                  (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                  (onPinInput)=\"onPinInput.emit($event)\"\r\n                  [currentForm]=\"mForm\"\r\n                  [conditionList]=\"['minLength','requiresUppercase','requiresLowercase','requiresDigit','requiresSpecialChars']\">\r\n                </storybook-input>\r\n\r\n\r\n                <div></div>\r\n                <storybook-input\r\n                  [storyInput]=\"storyInputsInOrder[2]\"\r\n                  (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                  (onPinInput)=\"onPinInput.emit($event)\"\r\n                  [currentForm]=\"mForm\"\r\n                  [conditionList]=\"['minLength','requiresUppercase','requiresLowercase','requiresDigit','requiresSpecialChars']\">\r\n                </storybook-input>\r\n              </div>\r\n\r\n              <br>\r\n                <div class=\"login-failed-message\" role=\"alert\" >\r\n                  <table *ngIf=\"this.status?.isRepFailed\">\r\n                    <tr>{{ this.status?.repErrorMessage['message'] | apiErrorMessage: param }}</tr>\r\n                    <tr  *ngFor=\"let message of this.status?.repErrorMessage.data?.confirmPassword.split(', ')\">{{message.trim() | apiErrorMessage: param }}</tr>\r\n                  </table>\r\n                </div>\r\n              <storybook-button-continue [label]=\"status.isRepSuccess ? 'Continue' :'Change Password'\" size=\"small\"\r\n                                         label=\"Continue\" type=\"button\" (click)=\"onSubmit()\" >\r\n              </storybook-button-continue>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import {\r\n  AfterViewChecked,\r\n  Component, Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input, OnChanges,\r\n  OnInit,\r\n  Output,\r\n  QueryList,\r\n  Renderer2, SimpleChanges, ViewChild,\r\n  ViewChildren\r\n} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { StoryInput } from \"src/stories/inputs/input/story-input.model\";\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport {PopoverOptions} from \"../../directive/popover.interface\";\r\nimport {ActionInputComponent} from \"../../actions/action-input/action-input.component\";\r\n//import {BehaviorSubject} from \"rxjs\";\r\n//import {AccountInputComponent} from \"../inputs/input/story-input.component\";\r\n\r\n/*\r\n@Directive({selector: 'storybook-input'})\r\nexport class AccountInput {\r\n  @Input() storyInput!: AccountInput;\r\n}\r\n*/\r\n@Component({\r\n  selector: 'storybook-replace-pass-form',\r\n  templateUrl: './replace-pass-form.component.html',\r\n  styleUrls: ['./replace-pass-form.css'],\r\n})\r\nexport default class ReplacePassFormComponent implements OnInit, AfterViewChecked, OnChanges {\r\n\r\n  popover: PopoverOptions = {\r\n    content: ActionInputComponent\r\n  };\r\n\r\n  param = {language: 'login-main'};\r\n\r\n\r\n\r\n\r\n\r\n  @Input() formService!: AuthService;\r\n\r\n  credentials: any = {\r\n    username: null,\r\n    password: null\r\n  };\r\n\r\n  @Input() isRepFailed = false;\r\n\r\n  @Input() isRepSuccess = false;\r\n\r\n\r\n  @Input() repErrorMessage = '';\r\n\r\n  openReplacePassword() {\r\n    //this.replacePassFormService.open(ReplacePassForm2Component);\r\n  }\r\n\r\n  @ViewChild('formHeader', { static: false }) mainHeader?: ElementRef;\r\n  @ViewChild('storybook-input', { static: false }) storybookInput?: ElementRef;\r\n\r\n\r\n\r\n\r\n  constructor(private renderer: Renderer2) {\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * Component property to define ordering of tasks\r\n   */\r\n  storyInputsInOrder: StoryInput[] = [];\r\n\r\n  @Input() mForm: FormGroup  = new FormGroup({});\r\n\r\n\r\n  changeLog: string[] = [];\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.isRepSuccess) {\r\n      if (!changes.isRepSuccess.previousValue &&  changes.isRepSuccess.currentValue) {\r\n        console.warn('ReplacePassForm Request Succeeded!');\r\n        this.loadSuccessfullyLoggedIn();\r\n      }\r\n    }\r\n  }\r\n\r\n  @Input() status?: any;\r\n\r\n  @Input() isLoading: boolean = false;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onPinInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onArchiveInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() sendRegReq: EventEmitter<void> = new EventEmitter();\r\n\r\n  @Output() clickXButton: EventEmitter<void> = new EventEmitter();\r\n\r\n\r\n  @Input()\r\n  set storyInputs(arr: StoryInput[]) {\r\n    const initialTasks = [\r\n      ...arr.filter(t => t.state === 'USER NAME'),\r\n      ...arr.filter(t => t.state !== 'USER NAME'),\r\n    ];\r\n    const filteredTasks = initialTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME' || t.state === 'EMAIL' || t.state === 'PHONE NUMBER FOR AUTHENTICATION'\r\n    );\r\n    this.storyInputsInOrder = filteredTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME' || t.state === 'EMAIL' || t.state === 'PHONE NUMBER FOR AUTHENTICATION');\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.warn('ReplacePassForm Request Sent!');\r\n\r\n    //this.renderer.setAttribute(this.storybookInput?.nativeElement ,'hidden', 'true');\r\n    //this.renderer.setAttribute(this.mainHeader?.nativeElement ,'hidden', 'true');\r\n    //this.renderer.setProperty(this.mainHeader?.nativeElement ,'innerHTML','You have successfully complete your registeration!');\r\n\r\n\r\n    //this.renderer.setAttribute(this.storybookInput?.nativeElement ,'innerHTML','true');\r\n    this.sendRegReq.emit();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n  get userName(): AbstractControl {\r\n    return this.mForm?.get('username')!;\r\n  }\r\n\r\n  get oldPassword(): AbstractControl {\r\n    return this.mForm?.get('oldPassword')!;\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.mForm?.get('password')!;\r\n  }\r\n\r\n  get confirmPassword(): AbstractControl {\r\n    return this.mForm?.get('confirmPassword')!;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  ngAfterViewChecked(): void {\r\n    //console.log(this.childComp?.length)\r\n  }\r\n\r\n  loadSuccessfullyLoggedIn(){\r\n    this.renderer.setProperty(this.mainHeader?.nativeElement ,'innerHTML','You have successfully changed your password!');\r\n  }\r\n\r\n}\r\n\r\n","\r\n\r\n\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <storybook-card class=\"card-container\"></storybook-card>\r\n  <div  class=\"h-100 d-flex align-items-center justify-content-center\">\r\n    <storybook-button-ex id=\"button-ex\"  (click)=\"this.clickXButton.emit()\" ></storybook-button-ex>\r\n    <div class=\"form-header\">\r\n      <a #formHeader>Forgot Password?</a>\r\n    </div>\r\n\r\n    <br>\r\n    <!--form name=\"form\"  (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate --> <!-- *ngIf=\"!isConfigSuccess\"-->\r\n    <form name=\"currentForm\" [formGroup]=\"mForm\">\r\n      <div  class=\"Vector\">\r\n\r\n        <br>\r\n        <br>\r\n        <br>\r\n\r\n        <div class=\"second-header\" style=\"top: 82px;\">\r\n          <a class=\"second-header-text\"  #secondHeader href=\"#/login\" style=\"position: relative; top: 10px; text-align: left\">\r\n            {{ 'Please enter your User Name:'}}<br>\r\n          </a>\r\n        </div>\r\n\r\n\r\n        <div #formFields id=\"button-successfully\" style=\"\">\r\n          <storybook-button-successfully  *ngIf=\"status.isVerSuccess\"  style=\"position: relative; top: 15px\"></storybook-button-successfully>\r\n          <ng-template  *ngIf=\"status.isVerSuccess\"  appDynamicComp>\r\n\r\n          </ng-template>\r\n\r\n          <storybook-input *ngIf=\"!status.isRecSuccess\"\r\n                           [storyInput]=\"storyInputsInOrder[0]\"\r\n                           (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n                           (onPinInput)=\"onPinInput.emit($event)\"\r\n                           [currentForm]=\"mForm\">\r\n          </storybook-input>\r\n          <!--code-input *ngIf=\"!status.isVerSuccess\"\r\n                      #codeInput\r\n                      [codeLength]=\"codeLength\"\r\n                      (codeChanged)=\"onCodeChanged($event)\"\r\n                      (codeCompleted)=\"onCodeCompleted($event)\">\r\n          </code-input-->\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        <div class=\"login-button\">\r\n          <div class=\"login-failed-message\" role=\"alert\" style=\"position: relative; top: 15px\">\r\n            <table *ngIf=\"this.status?.isVerFailed\">\r\n              <tr>{{ this.status?.verErrorMessage.toString()  | apiErrorMessage: param }}</tr>\r\n              <tr  *ngFor=\"let message of this.status?.verErrorMessage.data?.confirmPassword.split(', ')\">{{message.trim() | apiErrorMessage: param }}</tr>\r\n            </table>\r\n          </div>\r\n\r\n          <storybook-button-continue #formButton size=\"small\" [label]=\"this.formButtonLabel\" type=\"button\"\r\n                                     (onClick)=\"this.onSubmit()\" style=\"position: relative; top: 15px\"></storybook-button-continue>\r\n\r\n\r\n          <a *ngIf=\"status.isRecSuccess && !status.isVerSuccess\" class=\"resend-verification\"  (click)=\"generateNewCodeFor2SV.emit()\" style=\"position: relative; top: 40px;\">\r\n            {{ 'resend the verification code'  }}\r\n          </a>\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n      </div>\r\n\r\n\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n","import {\r\n  Component, ComponentFactoryResolver, ComponentRef,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n  SimpleChanges, Type,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { StoryInput } from \"src/stories/inputs/input/story-input.model\";\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport {CodeInputComponent} from \"../../inputs/code-input/code-input.component\";\r\nimport {DynamicCompDirective} from \"../../directive/dynamic-comp.directive\";\r\nimport {PopoverOptions} from \"../../directive/popover.interface\";\r\n\r\n\r\nexport interface AdComponent {\r\n  content: any;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-reset-pass-form',\r\n  templateUrl: './reset-pass-form.component.html',\r\n  styleUrls: ['./reset-pass-form.component.scss'],\r\n})\r\nexport default class ResetPassFormComponent implements OnInit {\r\n\r\n  codeLength: number = 4;\r\n  code: string = '';\r\n  param = {language: 'login-main'};\r\n  formButtonLabel: string = 'Send me a Verification Code';\r\n  formButtonClick: string = 'generateNewCodeFor2SV.emit()';\r\n\r\n  @Input() status?: any;\r\n\r\n  @Input() isLoading: boolean = false;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onPinInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onArchiveInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() sendVerificationReq: EventEmitter<string> = new EventEmitter();\r\n\r\n  @Output() generateNewCodeFor2SV: EventEmitter<void> = new EventEmitter();\r\n\r\n  @ViewChild(DynamicCompDirective, {static: true}) appDynamicComp!: DynamicCompDirective;\r\n  //@ViewChild('codeInput') codeInput!: CodeInputComponent;\r\n\r\n  @Output() clickXButton: EventEmitter<void> = new EventEmitter();\r\n\r\n  @ViewChild('secondHeader', { static: false }) secondHeader?: ElementRef;\r\n\r\n  @ViewChild('formHeader', { static: false }) formHeader?: ElementRef;\r\n\r\n  @ViewChild('formFields', { static: false }) formFields?: ElementRef;\r\n\r\n  @ViewChild('formButton', { static: false }) formButton?: ElementRef;\r\n\r\n  @Input() isVerSuccess = false;\r\n\r\n  @Input() isRecSuccess = false;\r\n\r\n  constructor(private renderer: Renderer2,\r\n              private componentFactoryResolver: ComponentFactoryResolver) {}\r\n\r\n  changeLog: string[] = [];\r\n\r\n\r\n  @Input()\r\n  set storyInputs(arr: StoryInput[]) {\r\n    const initialTasks = [\r\n      ...arr.filter(t => t.state === 'USER NAME'),\r\n      ...arr.filter(t => t.state !== 'USER NAME'),\r\n    ];\r\n    const filteredTasks = initialTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME'\r\n    );\r\n    this.storyInputsInOrder = filteredTasks.filter(\r\n      t => t.type === 'password' || t.state === 'USER NAME'\r\n    );\r\n  }\r\n\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.isRecSuccess) {\r\n      if (!changes.isRecSuccess.previousValue &&  changes.isRecSuccess.currentValue) {\r\n        console.warn('Identify Request Succeeded!');\r\n        this.movToVerifyState();\r\n      }\r\n    }\r\n\r\n    if (changes.isVerSuccess) {\r\n      if (!changes.isVerSuccess.previousValue &&  changes.isVerSuccess.currentValue) {\r\n        console.warn('Verify Request Succeeded!');\r\n        //this.changeFormToPinCodeState();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  onSubmit(): void {\r\n    if (!this.isRecSuccess) {this.generateNewCodeFor2SV.emit();}\r\n    else if (!this.isVerSuccess) {\r\n      console.info('Send Verification Request!');\r\n      this.sendVerificationReq.emit(this.code);\r\n      if (!this.status.isVerSuccess) {this.codeInputComponentRef?.instance.reset();/*this.codeInput.reset();*/}\r\n    }\r\n    else {}\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * Component property to define ordering of Inputs\r\n   */\r\n  storyInputsInOrder: StoryInput[] = [];\r\n\r\n  @Input() mForm: FormGroup = new FormGroup({});\r\n\r\n  // this called every time when user changed the code\r\n  onCodeChanged(code: string) {\r\n    this.code = code;\r\n    //console.log('code entered: '+ this.code);\r\n  }\r\n\r\n  // this called only if user entered full code\r\n  onCodeCompleted(code: string) {\r\n    //\r\n  }\r\n\r\n  popoverOptions: AdComponent = {\r\n    content: CodeInputComponent\r\n  };\r\n\r\n  codeInputComponentRef?: ComponentRef<any>;\r\n\r\n  movToVerifyState(){\r\n    this.renderer.setProperty(this.secondHeader?.nativeElement ,'innerHTML',\r\n      'Please enter the Verification Code<br>you received in your mail:');\r\n\r\n    this.renderer.setProperty(this.formHeader?.nativeElement ,'innerHTML',\r\n      'Change Password');\r\n\r\n\r\n    this.formButtonLabel = 'Continue';\r\n\r\n    this.formButtonClick = '\"onSubmit()\"';\r\n\r\n    //this.renderer.setAttribute(this.formButton.  nativeElement, 'onClick', '\"onSubmit()\"' );\r\n\r\n    /*this.renderer.setProperty(this.formFields?.nativeElement ,'innerHTML',\r\n      '<code-input #codeInput [codeLength]=\"codeLength\" (codeChanged)=\"onCodeChanged($event)\" (codeCompleted)=\"onCodeCompleted($event)\"> </code-input>'\r\n    );*/\r\n\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(<Type<any>>this.popoverOptions.content);\r\n    const viewContainerRef = this.appDynamicComp.viewContainerRef;\r\n    viewContainerRef.clear();\r\n    this.codeInputComponentRef = viewContainerRef.createComponent(componentFactory);\r\n    this.codeInputComponentRef.instance.codeChanged.subscribe(($event: string) => {\r\n      this.onCodeChanged($event);\r\n      console.log(\"Code Changed\");\r\n    });\r\n\r\n\r\n    /*\r\n    this.renderer.setAttribute(this.formButton?.nativeElement, 'label', 'Continue' );\r\n\r\n\r\n\r\n    const viewContainerRef = this.appDynamicComp.viewContainerRef;\r\n    viewContainerRef.clear();\r\n\r\n    const componentRef = viewContainerRef.createComponent<CodeInputComponent>(this.popover.content);\r\n    componentRef.instance.reset()\r\n*/\r\n    //this.codeInput = this.formFields?.nativeElement.codeInput.getElement();\r\n  }\r\n}\r\n\r\n","\r\n\r\n\r\n<div id=\"main-login-card\" class=\"col-md-12\">\r\n  <storybook-card class=\"card-container\"></storybook-card>\r\n  <div  class=\"h-100 d-flex align-items-center justify-content-center\">\r\n    <storybook-button-ex id=\"button-ex\"  (click)=\"this.clickXButton.emit()\" ></storybook-button-ex>\r\n    <div class=\"form-header\">\r\n      <a >Aeonix App Center</a>\r\n    </div>\r\n\r\n    <br>\r\n    <!--form name=\"form\"  (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate --> <!-- *ngIf=\"!isConfigSuccess\"-->\r\n      <form name=\"currentForm\" >\r\n      <div  class=\"Vector\">\r\n\r\n\r\n\r\n            <!--div *ngIf=\"isLoggedIn\">isConfigSuccess</div>\r\n            <div *ngIf=\"!isLoggedIn && storyInputsInOrder.length === 0\">empty</div>\r\n            <storybook-input\r\n              [storyInput]=\"storyInputsInOrder[0]\"\r\n              (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n              (onPinInput)=\"onPinInput.emit($event)\"\r\n              [currentForm]=\"mForm\">\r\n            </storybook-input>\r\n\r\n            <storybook-input\r\n              [storyInput]=\"storyInputsInOrder[1]\"\r\n              (onArchiveInput)=\"onArchiveInput.emit($event)\"\r\n              (onPinInput)=\"onPinInput.emit($event)\"\r\n              [currentForm]=\"mForm\">\r\n            </storybook-input-->\r\n\r\n        <div class=\"second-header\" style=\"top: 5px;\">\r\n          <a class=\"second-header-text\"  href=\"#/login\" style=\"position: relative; top: 5px; text-align: left\">\r\n            {{ 'Please enter the Verification Code'}}<br>\r\n            {{ 'you received in your mail:'  }}\r\n          </a>\r\n      </div>\r\n\r\n\r\n      <div id=\"button-successfully\" style=\"\">\r\n            <storybook-button-successfully  *ngIf=\"status.isVerSuccess\"  style=\"position: relative; top: 15px\"></storybook-button-successfully>\r\n            <code-input *ngIf=\"!status.isVerSuccess\"\r\n                        #codeInput\r\n                        [codeLength]=\"codeLength\"\r\n                        (codeChanged)=\"onCodeChanged($event)\"\r\n                        (codeCompleted)=\"onCodeCompleted($event)\">\r\n            </code-input>\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n      <div class=\"login-button\">\r\n            <div class=\"login-failed-message\" role=\"alert\" style=\"position: relative; top: 15px\">\r\n              <table *ngIf=\"this.status?.isVerFailed\">\r\n                <tr>{{ this.status?.verErrorMessage.toString()  | apiErrorMessage: param }}</tr>\r\n                <tr  *ngFor=\"let message of this.status?.verErrorMessage.data?.confirmPassword.split(', ')\">{{message.trim() | apiErrorMessage: param }}</tr>\r\n              </table>\r\n            </div>\r\n\r\n            <storybook-button-continue size=\"medium\" label=\"Login \" type=\"button\" (click)=\"onSubmit()\" style=\"position: relative; top: 15px\"></storybook-button-continue>\r\n\r\n\r\n            <a *ngIf=\"!status.isVerSuccess\" class=\"resend-verification\"  (click)=\"generateNewCodeFor2SV.emit()\" style=\"position: relative; top: 40px;\">\r\n              {{ 'resend the verification code'  }}\r\n            </a>\r\n\r\n      </div>\r\n\r\n\r\n\r\n\r\n      </div>\r\n\r\n\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n","import {Component, ElementRef, EventEmitter, Input, OnInit, Output, Renderer2, ViewChild} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { StoryInput } from \"src/stories/inputs/input/story-input.model\";\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport {CodeInputComponent} from \"../../inputs/code-input/code-input.component\";\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-verification-form',\r\n  templateUrl: './verification-form.component.html',\r\n  styleUrls: ['./verification-form.component.scss'],\r\n})\r\nexport default class VerificationFormComponent implements OnInit {\r\n\r\n  codeLength: number = 4;\r\n  code: string = '';\r\n  param = {language: 'login-main'};\r\n\r\n  @Input() status?: any;\r\n\r\n  @Input() isLoading: boolean = false;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() sendVerificationReq: EventEmitter<string> = new EventEmitter();\r\n\r\n  @Output() generateNewCodeFor2SV: EventEmitter<void> = new EventEmitter();\r\n\r\n  @ViewChild('codeInput') codeInput !: CodeInputComponent;\r\n\r\n  @Output() clickXButton: EventEmitter<void> = new EventEmitter();\r\n\r\n\r\n  onSubmit(): void {\r\n    console.warn('Send Verification Request!');\r\n\r\n    this.sendVerificationReq.emit(this.code);\r\n    if (!this.status.isVerSuccess) {this.codeInput.reset();}\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n\r\n  // this called every time when user changed the code\r\n  onCodeChanged(code: string) {\r\n    this.code = code;\r\n    //console.log('code entered: '+ this.code);\r\n  }\r\n\r\n  // this called only if user entered full code\r\n  onCodeCompleted(code: string) {\r\n    //\r\n  }\r\n\r\n\r\n}\r\n\r\n","<div id=\"parent3\"  [hidden]=\"storyInput?.hide\" [ngClass]=\"classes\"  >\r\n  <div id=\"parent1\" >\r\n    <div class=\"main\"  [formGroup]=\"this.currentForm\">\r\n      <div>\r\n        <a class=\"user-name D-Caps-Regular\">{{storyInput?.state}}</a>\r\n\r\n        <br>\r\n        <span [ngSwitch]=\"storyInput?.type\">\r\n          <span *ngSwitchCase=\"'password'\" >\r\n            <storybook-button-continue   size=\"small\" label=\"Change Password\" type=\"button\" (onClick)=\"this.changePassword.emit()\" >\r\n            </storybook-button-continue>\r\n          </span>\r\n          <span *ngSwitchCase=\"'enable-profile-picture'\" >\r\n            <label class=\"UserNameType\" >{{storyInput?.title}}  </label>\r\n            <div class=\"user-checkbox-header\">\r\n            <input  style=\"position: relative; margin: 0 2px 0 2px;   top: 1px; right: 3px;\"  type=\"checkbox\"/>\r\n            <label class=\"EnableProfilePicture\" >Enable Profile Picture</label>\r\n\r\n              <!--img src=\"./assets/images/EditIconA.png\" class=\"icon-input-edit\" alt=\"icon input type\" /-->\r\n\r\n            </div>\r\n          </span>\r\n          <span *ngSwitchDefault >\r\n            <label  [attr.aria-label]=\"storyInput?.id + ''\" for=\"{{ storyInput?.title }}\" class=\"Vector2 \">\r\n              <img src=\"{{ storyInput?.icon }}\" class=\"icon-input\" alt=\"icon input userName\"  name=\"{{ storyInput?.title }}\" />\r\n              <div [inputPopover] = \"this.popover\" [data]=\"this.getErrorList(this.conditionList)\" [header]=\"this.getErrorHeader(this.storyInput.title)\">\r\n                <input\r\n                  type=\"{{storyInput?.type}}\"\r\n                  id=\"{{ storyInput?.id }}\"\r\n                  class=\"inputField\"\r\n                  name=\"{{storyInput?.title}}\"\r\n                  formControlName=\"{{storyInput?.title}}\"\r\n                  placeholder=\"{{storyInput?.placeholder}}\"\r\n                  required />\r\n              </div>\r\n\r\n\r\n              <br>\r\n\r\n\r\n            </label>\r\n\r\n            <button  class=\"icon-input-edit\"  type=\"button\">\r\n              <img src=\"./assets/images/EditIconA.png\" class=\"icon-input-edit\" alt=\"icon input type\" />\r\n            </button>\r\n          </span>\r\n        </span>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n</div>\r\n","import {Component, EventEmitter, HostBinding, Inject, Injector, Input, OnInit, Output} from '@angular/core';\r\nimport { AccountInput } from './account-input.model'\r\nimport {\r\n  AbstractControl,\r\n  ControlValueAccessor,\r\n  FormControl,\r\n  FormGroup,\r\n  NG_VALIDATORS,\r\n  Validator,\r\n  Validators\r\n} from \"@angular/forms\";\r\nimport {PopoverOptions} from \"src/stories/directive/popover.interface\";\r\nimport {ActionInputComponent} from \"src/stories/actions/action-input/action-input.component\";\r\nimport {ActionInput} from \"src/stories/actions/action-input/action-input.interface\";\r\n\r\n\r\nexport interface GroupForm {\r\n  username:  FormControl,\r\n  password:  FormControl,\r\n}\r\n\r\nexport interface ValidationForm {\r\n  validationForm2: GroupForm,\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-account-input',\r\n  templateUrl: './account-input.component.html',\r\n  styleUrls: ['./account-input.scss']\r\n})\r\nexport class AccountInputComponent implements OnInit{\r\n\r\n\r\n\r\n  popover: PopoverOptions = {\r\n    content: ActionInputComponent\r\n  };\r\n\r\n  @Input() storyInput!: AccountInput;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onPinInput = new EventEmitter<Event>();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onArchiveInput = new EventEmitter<Event>();\r\n\r\n\r\n  @Output() changePassword: EventEmitter<void> = new EventEmitter();\r\n\r\n\r\n  @Input()\r\n  hideInput = false;\r\n\r\n  @Input() currentForm!: FormGroup;\r\n\r\n  private isStrength: string = (this.storyInput?.state === 'NEW PASSWORD') ? 'storybook-input--addStrength' : 'storybook-input--clearStrength';\r\n\r\n  public isPasswordTextHide: boolean = false;\r\n\r\n  @Input() conditionList: string[] = [];\r\n  /*registerForm = new FormGroup({\r\n    username: new FormControl('', Validators.minLength(2)),\r\n    password: new FormControl('zaqwsx', Validators.minLength(2))\r\n  });\r\n\r\n\r\n  get username2(): FormControl  {\r\n    return this.currentForm?.controls.username.get();\r\n  }*/\r\n\r\n  get username(): AbstractControl {\r\n    return this.currentForm.get('username')!;\r\n  }\r\n\r\n\r\n  get password(): AbstractControl {\r\n    return this.currentForm.get('password')!;\r\n  }\r\n\r\n  public getErrorHeader(controllerType: string): string {\r\n    let header: string = '';\r\n\r\n    switch (controllerType) {\r\n      case \"phone\":\r\n        header = 'Must contain phone:';\r\n        break;\r\n\r\n      case \"email\":\r\n        header = 'Must contain email:';\r\n        break;\r\n\r\n      case \"oldPassword\":\r\n      case \"confirmPassword\":\r\n      case \"password\":\r\n        header = 'The password must contain:';\r\n        break;\r\n\r\n      default:\r\n        header = controllerType;\r\n    }\r\n\r\n    return header;\r\n  }\r\n\r\n  public getErrorList(conditionList: String[]): ActionInput[] {\r\n\r\n    let passConditions: string[] = [];\r\n\r\n\r\n    var actionInputs: ActionInput[] = [];\r\n\r\n    conditionList.forEach(condition => {\r\n      switch (condition) {\r\n        case \"minLength\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"minLengthValid\",\r\n            \"presentingMessage\": ' A minimum of 8 characters',\r\n            \"isFulfilled\": !(this.minLengthValid || !(this.formControler.value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresUppercase\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresUppercaseValid\",\r\n            \"presentingMessage\": ' At least 1 Uppercase letters',\r\n            \"isFulfilled\": !(this.requiresUppercaseValid || !(this.formControler.value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresLowercase\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresLowercaseValid\",\r\n            \"presentingMessage\": ' At least 1 lowercase letters',\r\n            \"isFulfilled\": !(this.requiresLowercaseValid || !(this.formControler.value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresDigit\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresDigitValid\",\r\n            \"presentingMessage\": ' A number',\r\n            \"isFulfilled\": !(this.requiresDigitValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresSpecialChars\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresSpecialCharsValid\",\r\n            \"presentingMessage\": ' At least 1 special character',\r\n            \"isFulfilled\": !(this.requiresSpecialCharsValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresEmail\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresEmailValid\",\r\n            \"presentingMessage\": ' A well-formed email address',\r\n            \"isFulfilled\": !(this.requiresEmailValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresPhone\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresPhoneValid\",\r\n            \"presentingMessage\": ' A well-formed phone number',\r\n            \"isFulfilled\": !(this.requiresPhoneValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n      }\r\n    });\r\n\r\n\r\n    return actionInputs;\r\n  }\r\n\r\n  get passwordValid() {\r\n    return this.formControler.errors === null;\r\n  }\r\n\r\n  get requiredValid() {\r\n    return this.formControler.hasError(\"required\");\r\n  }\r\n\r\n  get minLengthValid() {\r\n    return this.formControler.hasError(\"minlength\");\r\n  }\r\n\r\n  get requiresDigitValid() {\r\n    return this.formControler.hasError(\"requiresDigit\");\r\n  }\r\n\r\n  get requiresUppercaseValid() {\r\n    return this.formControler.hasError(\"requiresUppercase\");\r\n  }\r\n\r\n  get requiresLowercaseValid() {\r\n    return this.formControler.hasError(\"requiresLowercase\") ;\r\n  }\r\n\r\n  get requiresSpecialCharsValid() {\r\n    return this.formControler.hasError(\"requiresSpecialChars\");\r\n  }\r\n\r\n  get requiresEmailValid() {\r\n    return this.formControler.hasError(\"email\");\r\n  }\r\n\r\n  get requiresPhoneValid() {\r\n    return this.formControler.hasError(\"requiresPhoneChars\");\r\n  }\r\n\r\n  get formControler(): AbstractControl {\r\n    return this.currentForm.get(this.storyInput?.title.toString())!;\r\n  }\r\n\r\n\r\n  /**\r\n   * Component method to trigger the onPin event\r\n   * @param id string\r\n   */\r\n  onPin(id: any) {\r\n    this.onPinInput.emit(id);\r\n  }\r\n  /**\r\n   * Component method to trigger the onArchive event\r\n   * @param id string\r\n   */\r\n  onArchive(id: any) {\r\n    this.onArchiveInput.emit(id);\r\n  }\r\n\r\n  public get classes(): string[] {\r\n    this.isStrength = (this.storyInput?.state === 'NEW PASSWORD') ? 'storybook-input--addStrength' : 'storybook-input--clearStrength';\r\n\r\n    return ['storybook-input-strength',  this.isStrength];\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.isPasswordTextHide = this.storyInput?.state.includes('PASSWORD');\r\n\r\n  }\r\n\r\n}\r\n","import {InjectionToken} from '@angular/core';\r\n\r\nexport const CodeInputComponentConfigToken = new InjectionToken<CodeInputComponentConfig>('CodeInputComponentConfig');\r\n\r\nexport interface CodeInputComponentConfig {\r\n  codeLength?: number;\r\n  inputType?: string;\r\n  inputMode?: string;\r\n  initialFocusField?: number;\r\n  isCharsCode?: boolean;\r\n  isCodeHidden?: boolean;\r\n  isPrevFocusableAfterClearing?: boolean;\r\n  isFocusingOnLastByClickIfFilled?: boolean;\r\n  code?: string | number;\r\n  disabled?: boolean;\r\n  autocapitalize?: string;\r\n}\r\n\r\nexport const defaultComponentConfig: CodeInputComponentConfig = {\r\n  codeLength: 4,\r\n  inputType: 'tel',\r\n  inputMode: 'numeric',\r\n  initialFocusField: undefined,\r\n  isCharsCode: false,\r\n  isCodeHidden: false,\r\n  isPrevFocusableAfterClearing: true,\r\n  isFocusingOnLastByClickIfFilled: false,\r\n  code: undefined,\r\n  disabled: false,\r\n  autocapitalize: undefined\r\n};\r\n","<span *ngFor=\"let holder of placeholders; index as i; let first = first; let last = last;\"\n      [class.code-hidden]=\"isCodeHidden\"  >\n  <storybook-digitcode-input\n    #storyInput\n    (onClick)=\"onClick($event)\"\n    (onPaste)=\"onPaste($event,i)\"\n    (onInput)=\"onInput($event, i)\"\n    (onKeydown)=\"onKeydown($event, i)\"\n    [inputType]=\"inputType\"\n    [disabled]=\"disabled\"\n    [inputMode]=\"inputMode\"\n    [autocapitalize]=\"autocapitalize\"\n    [isFirst]=\"first\"\n    [isLast]=\"last\">\n  </storybook-digitcode-input>\n\n</span>\n","import {\n  AfterViewChecked,\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  SimpleChanges,\n  ViewChildren\n} from '@angular/core';\nimport {\n  CodeInputComponentConfig,\n  CodeInputComponentConfigToken,\n  defaultComponentConfig\n} from './code-input.component.config';\nimport { Subscription } from 'rxjs';\nimport {DigitcodeInputComponent} from \"../digitcode-input/digitcode-input.component\";\n\nenum InputState {\n  ready = 0,\n  reset = 1\n}\n\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n\ninterface GenericEvent<T> extends Omit<Event, 'target'> {\n  target: T;\n}\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'code-input',\n  templateUrl: 'code-input.component.html',\n  styleUrls: ['./code-input.component.scss']\n})\nexport class CodeInputComponent implements AfterViewInit, OnInit, OnChanges, OnDestroy, AfterViewChecked, CodeInputComponentConfig {\n\n  @ViewChildren('storyInput') storyInputsList !: QueryList<ElementRef>;\n  @ViewChildren('storyInput') inputsList !: QueryList<DigitcodeInputComponent>;\n  //inputsList !: List<ElementRef>;\n  //= this.storyInputsList.map((e) => { e.nativeElement.input});\n\n\n  @Input() codeLength !: number;\n  @Input() inputType !: string;\n  @Input() inputMode !: string;\n  @Input() initialFocusField?: number;\n  /** @deprecated Use isCharsCode prop instead. */\n  @Input() isNonDigitsCode = false;\n  @Input() isCharsCode !: boolean;\n  @Input() isCodeHidden !: boolean;\n  @Input() isPrevFocusableAfterClearing !: boolean;\n  @Input() isFocusingOnLastByClickIfFilled !: boolean;\n  @Input() code ?: string | number;\n  @Input() disabled !: boolean;\n  @Input() autocapitalize ?: string;\n\n  @Output() readonly codeChanged = new EventEmitter<string>();\n  @Output() readonly codeCompleted = new EventEmitter<string>();\n\n  public placeholders: number[] = [];\n\n  private inputs: HTMLInputElement[] = [];\n  private inputsStates: InputState[] = [];\n  private inputsListSubscription !: Subscription;\n\n  // tslint:disable-next-line:variable-name\n  private _codeLength !: number;\n  private state = {\n    isFocusingAfterAppearingCompleted: false,\n    isInitialFocusFieldEnabled: false\n  };\n\n  constructor(@Optional() @Inject(CodeInputComponentConfigToken) config?: CodeInputComponentConfig) {\n    Object.assign(this, defaultComponentConfig);\n\n    if (!config) {\n      return;\n    }\n\n    // filtering for only valid config props\n    for (const prop in config) {\n      if (!config.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      if (!defaultComponentConfig.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      // @ts-ignore\n      this[prop] = config[prop];\n    }\n  }\n\n  /**\n   * Life cycle\n   */\n\n  ngOnInit(): void {\n    // defining the state\n    this.state.isInitialFocusFieldEnabled = !this.isEmpty(this.initialFocusField);\n    // initiating the code\n    this.onCodeLengthChanges();\n  }\n\n  ngAfterViewInit(): void {\n    // initiation of the inputs\n    this.inputsListSubscription = this.inputsList.changes.subscribe(this.onInputsListChanges.bind(this));\n    this.onInputsListChanges(this.inputsList);\n  }\n\n  ngAfterViewChecked(): void {\n    this.focusOnInputAfterAppearing();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.code) {\n      this.onInputCodeChanges();\n    }\n    if (changes.codeLength) {\n      this.onCodeLengthChanges();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.inputsListSubscription) {\n      this.inputsListSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Methods\n   */\n\n  reset(isChangesEmitting = false): void {\n    // resetting the code to its initial value or to an empty value\n    this.onInputCodeChanges();\n\n    if (this.state.isInitialFocusFieldEnabled) {\n      // tslint:disable-next-line:no-non-null-assertion\n      this.focusOnField(this.initialFocusField!);\n    }\n\n    if (isChangesEmitting) {\n      this.emitChanges();\n    }\n  }\n\n  focusOnField(index: number): void {\n    if (index >= this._codeLength) {\n      throw new Error('The index of the focusing input box should be less than the codeLength.');\n    }\n\n    this.inputs[index].focus();\n  }\n\n  onClick(e: any): void {\n    // handle click events only if the the prop is enabled\n    if (!this.isFocusingOnLastByClickIfFilled) {\n      return;\n    }\n\n    const target = e.target;\n    const last = this.inputs[this._codeLength - 1];\n    // already focused\n    if (target === last) {\n      return;\n    }\n\n    // check filling\n    const isFilled = this.getCurrentFilledCode().length >= this._codeLength;\n    if (!isFilled) {\n      return;\n    }\n\n    // focusing on the last input if is filled\n    setTimeout(() => last.focus());\n  }\n\n\n\n  onInput(e: GenericEvent<HTMLInputElement>, i: number): void {\n    const target = e.target;\n    const value = /*e.data ||*/ target.value;\n\n    if (this.isEmpty(value)) {\n      return;\n    }\n\n    // only digits are allowed if isCharsCode flag is absent/false\n    if (!this.canInputValue(value)) {\n      e.preventDefault();\n      e.stopPropagation();\n      this.setInputValue(target, null);\n      this.setStateForInput(target, InputState.reset);\n      return;\n    }\n\n    const values = value.toString().trim().split('');\n    for (let j = 0; j < values.length; j++) {\n      const index = j + i;\n      if (index > this._codeLength - 1) {\n        break;\n      }\n\n      this.setInputValue(this.inputs[index], values[j]);\n    }\n    this.emitChanges();\n\n    const next = i + values.length;\n    if (next > this._codeLength - 1) {\n      target.blur();\n      return;\n    }\n\n    this.inputs[next].focus();\n  }\n\n  onPaste(e: ClipboardEvent, i: number): void {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const data = e.clipboardData ? e.clipboardData.getData('text').trim() : undefined;\n\n    if (this.isEmpty(data)) {\n      return;\n    }\n\n    // Convert paste text into iterable\n    // tslint:disable-next-line:no-non-null-assertion\n    const values = data!.split('');\n    let valIndex = 0;\n\n    for (let j = i; j < this.inputs.length; j++) {\n      // The values end is reached. Loop exit\n      if (valIndex === values.length) {\n        break;\n      }\n\n      const input = this.inputs[j];\n      const val = values[valIndex];\n\n      // Cancel the loop when a value cannot be used\n      if (!this.canInputValue(val)) {\n        this.setInputValue(input, null);\n        this.setStateForInput(input, InputState.reset);\n        return;\n      }\n\n      this.setInputValue(input, val.toString());\n      valIndex++;\n    }\n\n    this.inputs[i].blur();\n    this.emitChanges();\n  }\n\n  async onKeydown(e: any, i: number): Promise<void> {\n    const target = e.target;\n    const isTargetEmpty = this.isEmpty(target.value);\n    const prev = i - 1;\n\n    // processing only the backspace and delete key events\n    const isBackspaceKey = await this.isBackspaceKey(e);\n    const isDeleteKey = this.isDeleteKey(e);\n    if (!isBackspaceKey && !isDeleteKey) {\n      return;\n    }\n\n    e.preventDefault();\n\n    this.setInputValue(target, null);\n    if (!isTargetEmpty) {\n      this.emitChanges();\n    }\n\n    // preventing to focusing on the previous field if it does not exist or the delete key has been pressed\n    if (prev < 0 || isDeleteKey) {\n      return;\n    }\n\n    if (isTargetEmpty || this.isPrevFocusableAfterClearing) {\n      this.inputs[prev].focus();\n    }\n  }\n\n  private onInputCodeChanges(): void {\n    if (!this.inputs.length) {\n      return;\n    }\n\n    if (this.isEmpty(this.code)) {\n      this.inputs.forEach((input: HTMLInputElement) => {\n        this.setInputValue(input, null);\n      });\n      return;\n    }\n\n    // tslint:disable-next-line:no-non-null-assertion\n    const chars = this.code!.toString().trim().split('');\n    // checking if all the values are correct\n    let isAllCharsAreAllowed = true;\n    for (const char of chars) {\n      if (!this.canInputValue(char)) {\n        isAllCharsAreAllowed = false;\n        break;\n      }\n    }\n\n    this.inputs.forEach((input: HTMLInputElement, index: number) => {\n      const value = isAllCharsAreAllowed ? chars[index] : null;\n      this.setInputValue(input, value);\n    });\n  }\n\n  private onCodeLengthChanges(): void {\n    if (!this.codeLength) {\n      return;\n    }\n\n    this._codeLength = this.codeLength;\n    if (this._codeLength > this.placeholders.length) {\n      const numbers = Array(this._codeLength - this.placeholders.length).fill(1);\n      this.placeholders.splice(this.placeholders.length - 1, 0, ...numbers);\n    }\n    else if (this._codeLength < this.placeholders.length) {\n      this.placeholders.splice(this._codeLength);\n    }\n  }\n\n  private onInputsListChanges(list: QueryList<DigitcodeInputComponent>): void {\n    if (list.length > this.inputs.length) {\n      const inputsToAdd = list.filter((item, index) => index > this.inputs.length - 1);\n      this.inputs.splice(this.inputs.length, 0, ...inputsToAdd.map(item => item.input.nativeElement));\n      const states = Array(inputsToAdd.length).fill(InputState.ready);\n      this.inputsStates.splice(this.inputsStates.length, 0, ...states);\n    }\n    else if (list.length < this.inputs.length) {\n      this.inputs.splice(list.length);\n      this.inputsStates.splice(list.length);\n    }\n\n    // filling the inputs after changing of their count\n    this.onInputCodeChanges();\n  }\n\n  private focusOnInputAfterAppearing(): void {\n    if (!this.state.isInitialFocusFieldEnabled) {\n      return;\n    }\n\n    if (this.state.isFocusingAfterAppearingCompleted) {\n      return;\n    }\n\n    // tslint:disable-next-line:no-non-null-assertion\n    this.focusOnField(this.initialFocusField!);\n    // tslint:disable-next-line:no-non-null-assertion\n    //this.state.isFocusingAfterAppearingCompleted = (document.activeElement === this.inputs[this.initialFocusField!]);\n  }\n\n  private emitChanges(): void {\n    setTimeout(() => this.emitCode(), 50);\n  }\n\n  private emitCode(): void {\n    const code = this.getCurrentFilledCode();\n\n    this.codeChanged.emit(code);\n\n    if (code.length >= this._codeLength) {\n      this.codeCompleted.emit(code);\n    }\n  }\n\n  private getCurrentFilledCode(): string {\n    let code = '';\n\n    for (const input of this.inputs) {\n      if (!this.isEmpty(input.value)) {\n        code += input.value;\n      }\n    }\n\n    return code;\n  }\n\n  private isBackspaceKey(e: any): Promise<boolean> {\n    const isBackspace = (e.key && e.key.toLowerCase() === 'backspace') || (e.keyCode && e.keyCode === 8);\n    if (isBackspace) {\n      return Promise.resolve(true);\n    }\n\n    // process only key with placeholder keycode on android devices\n    if (!e.keyCode || e.keyCode !== 229) {\n      return Promise.resolve(false);\n    }\n\n    return new Promise<boolean>((resolve) => {\n      setTimeout(() => {\n        const input = e.target;\n        const isReset = this.getStateForInput(input) === InputState.reset;\n        if (isReset) {\n          this.setStateForInput(input, InputState.ready);\n        }\n        // if backspace key pressed the caret will have position 0 (for single value field)\n        resolve(input.selectionStart === 0 && !isReset);\n      });\n    });\n  }\n\n  private isDeleteKey(e: any): boolean {\n    return (e.key && e.key.toLowerCase() === 'delete') || (e.keyCode && e.keyCode === 46);\n  }\n\n  private setInputValue(input: HTMLInputElement, value: any): void {\n    const isEmpty = this.isEmpty(value);\n    const valueClassCSS = 'has-value';\n    const emptyClassCSS = 'empty';\n    if (isEmpty) {\n      input.value = '';\n      input.classList.remove(valueClassCSS);\n      // tslint:disable-next-line:no-non-null-assertion\n      input.parentElement!.classList.add(emptyClassCSS);\n    }\n    else {\n      input.value = value;\n      input.classList.add(valueClassCSS);\n      // tslint:disable-next-line:no-non-null-assertion\n      input.parentElement!.classList.remove(emptyClassCSS);\n    }\n  }\n\n  private canInputValue(value: any): boolean {\n    if (this.isEmpty(value)) {\n      return false;\n    }\n\n    const isDigitsValue = /^[0-9]+$/.test(value.toString());\n    return isDigitsValue || (this.isCharsCode || this.isNonDigitsCode);\n  }\n\n  private setStateForInput(input: HTMLInputElement, state: InputState): void {\n    const index = this.inputs.indexOf(input);\n    if (index < 0) {\n      return;\n    }\n\n    this.inputsStates[index] = state;\n  }\n\n  private getStateForInput(input: HTMLInputElement): InputState | undefined {\n    const index = this.inputs.indexOf(input);\n    return this.inputsStates[index];\n  }\n\n  private isEmpty(value: any): boolean {\n    return  value === null || value === undefined || !value.toString().length;\n  }\n}\n","<div id=\"parent3\"  [hidden]=\"storyInput?.hide\" [ngClass]=\"classes\"  >\r\n  <div id=\"parent1\" >\r\n    <div class=\"main\"  [formGroup]=\"this.currentForm\">\r\n      <div>\r\n        <!--a class=\"user-name D-Caps-Regular\">{{storyInput?.state}}</a-->\r\n        <a class=\"user-name D-Caps-Regular\">{{storyInput?.type}}</a>\r\n\r\n        <br>\r\n        <span ngSwitch=\"{{storyInput.name.valueOf()!}}\">\r\n          <span *ngSwitchCase=\"'password'\" >\r\n            <storybook-button-continue   size=\"small\" label=\"Change Password\" type=\"button\" (onClick)=\"this.changePassword.emit()\" >\r\n            </storybook-button-continue>\r\n          </span>\r\n\r\n          <span *ngSwitchCase=\"'tadiran_gate_PreviousAlertPassExpDays'\" >\r\n            <label [attr.aria-label]=\"storyInput?.id + ''\" for=\"{{ storyInput?.name }}\" class=\"UserNameType\" >{{storyInput?.title}}  </label>\r\n            <div class=\"user-checkbox-header\">\r\n            <input  style=\"position: relative; margin: 0 2px 0 2px;   top: 1px; right: 3px;\"\r\n                    type=\"range\" min=\"14\" max=\"180\" step=\"1\"\r\n                    id=\"{{ storyInput?.id }}\"\r\n                    name=\"{{storyInput?.name}}\"\r\n                    formControlName=\"{{storyInput?.name}}\"\r\n                    placeholder=\"{{storyInput?.placeholder}}\"/>\r\n              <label class=\"EnableProfilePicture\" > {{this.formControler?.value}} </label>\r\n            </div>\r\n          </span>\r\n          <span *ngSwitchCase=\"'tadiran_gate_passExpDays'\" >\r\n            <label class=\"UserNameType\" >{{storyInput?.title}}  </label>\r\n            <div class=\"user-checkbox-header\">\r\n            <input  style=\"position: relative; margin: 0 2px 0 2px;   top: 1px; right: 3px;\"\r\n                    type=\"range\" min=\"14\" max=\"180\" step=\"1\"\r\n                    id=\"{{ storyInput?.id }}\"\r\n                    name=\"{{storyInput?.name}}\"\r\n                    formControlName=\"{{storyInput?.name}}\"\r\n                    placeholder=\"{{storyInput?.placeholder}}\"/>\r\n              <label class=\"EnableProfilePicture\"  >{{this.formControler?.value}}</label>\r\n            </div>\r\n          </span>\r\n          <span *ngSwitchCase=\"'tadiran_gate_TSV'\" >\r\n            <label class=\"UserNameType\" >{{storyInput?.title}}  </label>\r\n            <div class=\"user-checkbox-header\">\r\n            <input  style=\"position: relative; margin: 0 2px 0 2px;   top: 1px; right: 3px;\"  type=\"checkbox\"\r\n                    formControlName=\"{{storyInput?.name}}\"/>\r\n            <label class=\"EnableProfilePicture\" >Enable Profile Picture</label>\r\n            </div>\r\n          </span>\r\n          <span *ngSwitchCase=\"'spring_jpa_hibernate_ddlAuto'\" >\r\n            <label class=\"UserNameType\" >{{storyInput?.title}}  </label>\r\n            <div class=\"user-select-header\">\r\n              <select #ddlauto id=\"ddl-auto\" (change)=\"onSelectedDdlAuto()\"\r\n                      formControlName=\"{{storyInput?.name}}\">\r\n                <option value=\"\">--Please choose an option--</option>\r\n                <option value=\"create\">create</option>\r\n                <option value=\"create-drop\">create-drop</option>\r\n                <option value=\"validate\">validate</option>\r\n                <option value=\"update\">update</option>\r\n                <option value=\"none\">none</option>\r\n              </select>\r\n            </div>\r\n          </span>\r\n          <span *ngSwitchCase=\"'tadiran_gate_pinCodeLength'\" >\r\n            <label class=\"UserNameType\" >{{storyInput?.title}}  </label>\r\n            <div class=\"user-select-header\">\r\n              <select  style=\"position: relative; margin: 0 2px 0 2px;   bottom: 1px; right: 3px;\"\r\n                      #pinCodeLength id=\"{{ storyInput?.id }}\"\r\n                      (change)=\"onSelectedDdlAuto()\"\r\n                      formControlName=\"{{storyInput?.name}}\">\r\n                <option value=\"\">--Please choose an option--</option>\r\n                <option value=\"4\">Four</option>\r\n                <option value=\"5\">Five</option>\r\n                <option value=\"6\">Six</option>\r\n              </select>\r\n            </div>\r\n          </span>\r\n          <span *ngSwitchCase=\"'tadiran_gate_pinCodeValDura'\" >\r\n            <label class=\"UserNameType\" >{{storyInput?.title}}  </label>\r\n            <div class=\"user-checkbox-header\">\r\n            <input  style=\"position: relative; margin: 0 2px 0 2px;   top: 1px; right: 3px;\"\r\n                    type=\"range\" min=\"2\" max=\"180\" step=\"1\"\r\n                    id=\"{{ storyInput?.id }}\"\r\n                    name=\"{{storyInput?.name}}\"\r\n                    formControlName=\"{{storyInput?.name}}\"\r\n                    placeholder=\"{{storyInput?.placeholder}}\"/>\r\n              <label class=\"EnableProfilePicture\"  >{{this.formControler?.value}}</label>\r\n            </div>\r\n          </span>\r\n          <span *ngSwitchDefault >\r\n            <label  [attr.aria-label]=\"storyInput?.id + ''\" for=\"{{ storyInput?.title }}\" class=\"Vector2 \">\r\n              <img src=\"{{ storyInput?.icon }}\" class=\"icon-input\" alt=\"icon input userName\"  name=\"{{ storyInput?.title }}\" />\r\n              <div [inputPopover] = \"this.popover\" [data]=\"this.getErrorList(this.conditionList)\" [header]=\"this.getErrorHeader(this.storyInput.title)\">\r\n                <input\r\n                  type=\"{{storyInput?.type}}\"\r\n                  id=\"{{ storyInput?.id }}\"\r\n                  class=\"inputField\"\r\n                  name=\"{{storyInput?.title}}\"\r\n                  formControlName=\"{{storyInput?.title}}\"\r\n                  placeholder=\"{{storyInput?.placeholder}}\"\r\n                  required />\r\n              </div>\r\n\r\n\r\n              <br>\r\n\r\n\r\n            </label>\r\n\r\n\r\n            <button  class=\"icon-input-edit\"  type=\"button\">\r\n              <img src=\"./assets/images/EditIconA.png\" class=\"icon-input-edit\" alt=\"icon input type\" />\r\n            </button>\r\n          </span>\r\n        </span>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n</div>\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Inject,\r\n  Injector,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { ConfigurationInput } from './configuration-input.model'\r\nimport {\r\n  AbstractControl,\r\n  ControlValueAccessor,\r\n  FormControl,\r\n  FormGroup,\r\n  NG_VALIDATORS,\r\n  Validator,\r\n  Validators\r\n} from \"@angular/forms\";\r\nimport {PopoverOptions} from \"src/stories/directive/popover.interface\";\r\nimport {ActionInputComponent} from \"src/stories/actions/action-input/action-input.component\";\r\nimport {ActionInput} from \"src/stories/actions/action-input/action-input.interface\";\r\n\r\n\r\nexport interface GroupForm {\r\n  username:  FormControl,\r\n  password:  FormControl,\r\n}\r\n\r\nexport interface ValidationForm {\r\n  validationForm2: GroupForm,\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-configuration-input',\r\n  templateUrl: './configuration-input.component.html',\r\n  styleUrls: ['./configuration-input.scss']\r\n})\r\nexport class ConfigurationInputComponent implements OnInit{\r\n\r\n\r\n\r\n  popover: PopoverOptions = {\r\n    content: ActionInputComponent\r\n  };\r\n\r\n  @Input() storyInput!: ConfigurationInput;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onPinInput = new EventEmitter<Event>();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onArchiveInput = new EventEmitter<Event>();\r\n\r\n\r\n  @Output() changePassword: EventEmitter<void> = new EventEmitter();\r\n\r\n\r\n  @Input()\r\n  hideInput = false;\r\n\r\n  @Input() currentForm!: FormGroup;\r\n\r\n  private isStrength: string = (this.storyInput?.state === 'NEW PASSWORD') ? 'storybook-input--addStrength' : 'storybook-input--clearStrength';\r\n\r\n  public isPasswordTextHide: boolean = false;\r\n\r\n  @Input() conditionList: string[] = [];\r\n  /*registerForm = new FormGroup({\r\n    username: new FormControl('', Validators.minLength(2)),\r\n    password: new FormControl('zaqwsx', Validators.minLength(2))\r\n  });\r\n\r\n\r\n  get username2(): FormControl  {\r\n    return this.currentForm?.controls.username.get();\r\n  }*/\r\n\r\n  @ViewChild('rangeInput', { static: false }) Input?: ElementRef;\r\n\r\n  @ViewChild('ddlauto') ddlauto!: ElementRef;\r\n  selectedTeam = '';\r\n  onSelectedDdlAuto():void {\r\n    this.selectedTeam = this.ddlauto.nativeElement.value;\r\n  }\r\n\r\n  get username(): AbstractControl {\r\n    return this.currentForm.get('username')!;\r\n  }\r\n\r\n\r\n  get password(): AbstractControl {\r\n    return this.currentForm.get('password')!;\r\n  }\r\n\r\n  public getErrorHeader(controllerType: string): string {\r\n    let header: string = '';\r\n\r\n    switch (controllerType) {\r\n      case \"phone\":\r\n        header = 'Must contain phone:';\r\n        break;\r\n\r\n      case \"email\":\r\n        header = 'Must contain email:';\r\n        break;\r\n\r\n      case \"oldPassword\":\r\n      case \"confirmPassword\":\r\n      case \"password\":\r\n        header = 'The password must contain:';\r\n        break;\r\n\r\n      default:\r\n        header = controllerType;\r\n    }\r\n\r\n    return header;\r\n  }\r\n\r\n  public getErrorList(conditionList: String[]): ActionInput[] {\r\n\r\n    let passConditions: string[] = [];\r\n\r\n\r\n    var actionInputs: ActionInput[] = [];\r\n\r\n    conditionList.forEach(condition => {\r\n      switch (condition) {\r\n        case \"minLength\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"minLengthValid\",\r\n            \"presentingMessage\": ' A minimum of 8 characters',\r\n            \"isFulfilled\": !(this.minLengthValid || !(this.formControler?.value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresUppercase\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresUppercaseValid\",\r\n            \"presentingMessage\": ' At least 1 Uppercase letters',\r\n            \"isFulfilled\": !(this.requiresUppercaseValid || !(this.formControler?.value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresLowercase\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresLowercaseValid\",\r\n            \"presentingMessage\": ' At least 1 lowercase letters',\r\n            \"isFulfilled\": !(this.requiresLowercaseValid || !(this.formControler?.value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresDigit\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresDigitValid\",\r\n            \"presentingMessage\": ' A number',\r\n            \"isFulfilled\": !(this.requiresDigitValid || !(this.formControler?.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresSpecialChars\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresSpecialCharsValid\",\r\n            \"presentingMessage\": ' At least 1 special character',\r\n            \"isFulfilled\": !(this.requiresSpecialCharsValid || !(this.formControler?.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresEmail\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresEmailValid\",\r\n            \"presentingMessage\": ' A well-formed email address',\r\n            \"isFulfilled\": !(this.requiresEmailValid || !(this.formControler?.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresPhone\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresPhoneValid\",\r\n            \"presentingMessage\": ' A well-formed phone number',\r\n            \"isFulfilled\": !(this.requiresPhoneValid || !(this.formControler?.value.length > 0))\r\n          })\r\n          break;\r\n      }\r\n    });\r\n\r\n\r\n    return actionInputs;\r\n  }\r\n\r\n  get passwordValid() {\r\n    return this.formControler?.errors === null;\r\n  }\r\n\r\n  get requiredValid() {\r\n    return this.formControler?.hasError(\"required\");\r\n  }\r\n\r\n  get minLengthValid() {\r\n    return this.formControler?.hasError(\"minlength\");\r\n  }\r\n\r\n  get requiresDigitValid() {\r\n    return this.formControler?.hasError(\"requiresDigit\");\r\n  }\r\n\r\n  get requiresUppercaseValid() {\r\n    return this.formControler?.hasError(\"requiresUppercase\");\r\n  }\r\n\r\n  get requiresLowercaseValid() {\r\n    return this.formControler?.hasError(\"requiresLowercase\") ;\r\n  }\r\n\r\n  get requiresSpecialCharsValid() {\r\n    return this.formControler?.hasError(\"requiresSpecialChars\");\r\n  }\r\n\r\n  get requiresEmailValid() {\r\n    return this.formControler?.hasError(\"email\");\r\n  }\r\n\r\n  get requiresPhoneValid() {\r\n    return this.formControler?.hasError(\"requiresPhoneChars\");\r\n  }\r\n\r\n  get formControler(): AbstractControl | null{\r\n\r\n    return this.currentForm.get(this.storyInput?.name)!;\r\n  }\r\n\r\n\r\n  /**\r\n   * Component method to trigger the onPin event\r\n   * @param id string\r\n   */\r\n  onPin(id: any) {\r\n    this.onPinInput.emit(id);\r\n  }\r\n  /**\r\n   * Component method to trigger the onArchive event\r\n   * @param id string\r\n   */\r\n  onArchive(id: any) {\r\n    this.onArchiveInput.emit(id);\r\n  }\r\n\r\n  public get classes(): string[] {\r\n    this.isStrength = (this.storyInput?.state === 'NEW PASSWORD') ? 'storybook-input--addStrength' : 'storybook-input--clearStrength';\r\n\r\n    return ['storybook-input-strength',  this.isStrength];\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.isPasswordTextHide = this.storyInput?.state.includes('PASSWORD');\r\n\r\n  }\r\n\r\n}\r\n","// also exported from '@storybook/angular' if you can deal with breaking changes in 6.1\nimport {Story, Meta, moduleMetadata, componentWrapperDecorator} from '@storybook/angular';\nimport {action} from \"@storybook/addon-actions\";\nimport {ConfigurationInputComponent} from \"./configuration-input.component\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators} from \"@angular/forms\";\nimport PassStrengthComponent from \"src/stories/pass-strength/pass-strength.component\";\n\n// More on default export: https://storybook.js.org/docs/angular/writing-stories/introduction#default-export\nexport default {\n  title: 'Design System/Atoms/Inputs/ConfigurationInput',\n  component: ConfigurationInputComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [ ConfigurationInputComponent, PassStrengthComponent  ],\n      imports: [CommonModule, FormsModule, ReactiveFormsModule ],\n    }),\n    componentWrapperDecorator(story => `<div style=\"margin: 3em 1em 0 1em/*; width: 445px*/;\">${story}</div>`),\n  ],\n  /*argTypes: {\n    registerForm: new FormGroup({\n      username: new FormControl('', Validators.minLength(2)),\n      password: new FormControl('zaqwsx', Validators.minLength(2))\n    }),\n  },*/\n  excludeStories: /.*Data$/,\n} as Meta;\n\nexport const actionsData = {\n  onPinInput: action('onPinInput'),\n  onArchiveInput: action('onArchiveInput'),\n};\n\nconst Template: Story = args => ({\n  props: {\n    ...args,\n    onPinInput: actionsData.onPinInput,\n    onArchiveInput: actionsData.onArchiveInput,\n  },\n});\n\n\n\nexport const Default = Template.bind({});\nDefault.args = {\n  storyInput: {\n    id: '1',\n    title: 'Ex.Saul Ramirez',\n    state: 'USER NAME',\n    value: '',\n    icon: './assets/images/User2ldpi.png',\n    type: 'text',\n    placeholder: 'placeholder',\n    hide: false\n  },\n  /*currentForm: {\n    username: new FormControl('ea6', Validators.minLength(2)),\n    password: new FormControl('', []),\n  },*/\n  hideInput: false,\n\n};\n\nexport const PassExpDays = Template.bind({});\nPassExpDays.args = {\n  ...Default.args,\n  storyInput: {\n    id: '2',\n    name: 'tadiran_gate_passExpDays',\n    title: 'Maximum time period for password to expired (in days):',\n    state: 'PASSWORD EXPIRATION POLICES',\n    value: '',\n    icon: '',\n    type: 'tadiran.gate.pass-exp-days',\n    placeholder: '',\n    hide: false\n  },\n  currentForm: {\n    ...Default.args['currentForm'],\n    password: new FormControl('ea6', Validators.minLength(2)),\n  },\n};\n\nexport const PreviousAlertPassExpDays = Template.bind({});\nPreviousAlertPassExpDays.args = {\n  storyInput: {\n    id: '3',\n    name: 'tadiran_gate_PreviousAlertPassExpDays',\n    title: 'Time period for display message - password about to expired:',\n    state: 'PASSWORD EXPIRED ALERT DURATION',\n    value: '',\n    icon: '',\n    type: 'tadiran.gate.PreviousAlertPassExpDays',\n    placeholder: 20,\n    hide: false\n  },\n};\n\nexport const TSV = Template.bind({});\nTSV.args = {\n  storyInput: {\n    id: '4',\n    name: 'tadiran_gate_TSV',\n    title: 'tadiran.gate.TSV',\n    state: 'TWO STEP VERIFICATION',\n    value: '',\n    icon: './assets/images/LockIcon2ldpi.png',\n    type: 'tadiran.gate.TSV',\n    placeholder: 'your_password',\n    hide: false\n  },\n};\n\nexport const DdlAuto = Template.bind({});\nDdlAuto.args = {\n  storyInput: {\n    id: '5',\n    name: 'spring_jpa_hibernate_ddlAuto',\n    title: 'DataBase Privilege',\n    state: '',\n    value: '',\n    icon: '',\n    type: 'spring.jpa.hibernate.ddl-auto',\n    placeholder: 'Ex: abc@example.com',\n    hide: false\n  },\n};\n\n\nexport const PinCodeLength = Template.bind({});\nPinCodeLength.args = {\n  storyInput: {\n    id: '6',\n    name: 'tadiran_gate_pinCodeLength',\n    title: 'Pin-Code - Amount of digits',\n    state: '',\n    value: '',\n    icon: '',\n    type: 'tadiran.gate.pin-code-length',\n    placeholder: '4',\n    hide: false\n  },\n};\n\n\nexport const PinCodeValDura = Template.bind({});\nPinCodeValDura.args = {\n  storyInput: {\n    id: '7',\n    name: 'tadiran_gate_pinCodeValDura',\n    title: 'Pin-Code - Duration before expired (in Minutes).',\n    state: '',\n    value: '',\n    icon: '',\n    type: 'tadiran.gate.pin-code-val-dura',\n    placeholder: '15',\n    hide: false\n  },\n};\n\n\nexport const Phone = Template.bind({});\nPhone.args = {\n  storyInput: {\n    id: '8',\n    title: 'phone',\n    state: 'PHONE NUMBER FOR AUTHENTICATION',\n    value: '',\n    icon: './assets/images/Phone3ldpi.png',\n    type: 'tel',\n    placeholder: 'Ex: +972547762084',\n    hide: false\n  },\n  hideInput: true,\n};\n\n\n","import {\r\n  Component, ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Inject,\r\n  Injector,\r\n  Input,\r\n  OnInit,\r\n  Output, ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { DigitcodeInput } from './digitcode-input.model'\r\nimport {\r\n  AbstractControl,\r\n  ControlValueAccessor,\r\n  FormControl,\r\n  FormGroup,\r\n  NG_VALIDATORS,\r\n  Validator,\r\n  Validators\r\n} from \"@angular/forms\";\r\nimport {PopoverOptions} from \"src/stories/directive/popover.interface\";\r\nimport {ActionInputComponent} from \"src/stories/actions/action-input/action-input.component\";\r\nimport {ActionInput} from \"src/stories/actions/action-input/action-input.interface\";\r\n\r\n\r\nexport interface GroupForm {\r\n  username:  FormControl,\r\n  password:  FormControl,\r\n}\r\n\r\nexport interface ValidationForm {\r\n  validationForm2: GroupForm,\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-digitcode-input',\r\n  templateUrl: './digitcode-input.component.html',\r\n  styleUrls: ['./digitcode-input.scss']\r\n})\r\nexport class DigitcodeInputComponent implements OnInit{\r\n\r\n  @Input() digitInput?: DigitcodeInput;\r\n\r\n  @ViewChild('input') public input!: ElementRef<HTMLInputElement>;\r\n  @Input() inputType !: string;\r\n  @Input() inputMode !: string;\r\n  @Input() disabled !: boolean;\r\n  @Input() autocapitalize ?: string;\r\n  @Input() isFirst ?: boolean;\r\n  @Input() isLast ?: boolean;\r\n  @Output() onClick: EventEmitter<Event> = new EventEmitter<Event>();\r\n  @Output() onPaste: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() onInput: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() onKeydown: EventEmitter<Event> = new EventEmitter<Event>();\r\n  value: string = '';\r\n\r\n\r\n  public get classes(): string[] {\r\n\r\n    //const isFirst = (this.index === 1) ? 'storybook-digitcode-input--first' : 'storybook-digitcode-input--notFirst';\r\n\r\n    return ['storybook-digitcode-input'];\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","\r\n\r\n<label class=\"Vector2\" [ngStyle]=\"{'margin-left': isFirst ? '0' : '10px',  'margin-right': isLast ? '0' : '10px'}\">\r\n\r\n   <input #input\r\n         (click)=\"onClick.emit($event)\"\r\n         (paste)=\"onPaste.emit($event)\"\r\n         (input)=\"onInput.emit($event)\"\r\n         (keydown)=\"onKeydown.emit($event)\"\r\n         [type]=\"this.inputType\"\r\n         [disabled]=\"disabled\"\r\n         [attr.inputmode]=\"inputMode\"\r\n         [attr.autocapitalize]=\"autocapitalize\"\r\n         [value]=\"value\"\r\n         autocomplete=\"one-time-code\"\r\n         class=\"digit\"/>\r\n</label>\r\n","<div id=\"parent3\"  [hidden]=\"storyInput?.hide\" [ngClass]=\"classes\"  >\r\n<div id=\"parent1\" >\r\n  <div class=\"main\"  [formGroup]=\"this.currentForm\">\r\n  <div>\r\n  <a class=\"user-name D-Caps-Regular\">{{storyInput?.state}}</a>\r\n\r\n  <br>\r\n  <label [attr.aria-label]=\"storyInput?.id + ''\" for=\"{{ storyInput?.title }}\" class=\"Vector2 \">\r\n    <img src=\"{{ storyInput?.icon }}\" class=\"icon-input\" alt=\"icon input userName\"  name=\"{{ storyInput?.title }}\" />\r\n    <div [inputPopover] = \"this.popover\" [data]=\"this.getErrorList(this.conditionList)\" [header]=\"this.getErrorHeader(this.storyInput.title)\">\r\n    <input\r\n      type=\"{{storyInput?.type}}\"\r\n      id=\"{{ storyInput?.id }}\"\r\n      class=\"DanK203\"\r\n      name=\"{{storyInput?.title}}\"\r\n      formControlName=\"{{storyInput?.title}}\"\r\n      placeholder=\"{{storyInput?.placeholder}}\"\r\n      required />\r\n    </div>\r\n\r\n    <button *ngIf=\"this.isPasswordTextHide\" class=\"icon-input-showpass\" type=\"button\" (click)=\"showPassChange()\">\r\n      <img src=\"./assets/images/EyeIcon.png\" class=\"icon-input-showpass\" alt=\"icon input type\" />\r\n\r\n    </button>\r\n\r\n\r\n\r\n  <br>\r\n\r\n  <span hidden [ngSwitch]=\"storyInput?.title\" class=\"D-Caps-Regular\"  style=\"line-height: 0\" >\r\n      <span  class=\"position-absolute\"  *ngIf=\"formControler?.invalid && (formControler?.dirty || formControler?.touched)\"  >\r\n          <span *ngSwitchCase=\"'username'\"><br>{{storyInput?.state}} is required!</span>\r\n          <span *ngSwitchCase=\"'password'\">\r\n            <br>\r\n            {{storyInput?.state}} is required!\r\n            <!--div *ngIf=\"password.errors.required\">Password is required</div>\r\n            <div *ngIf=\"password.errors.minlength\">Password must be at least 1 characters</div-->\r\n          </span>\r\n          <span *ngSwitchCase=\"'email'\"   ><br>{{storyInput?.state}} is required!</span>\r\n          <span *ngSwitchCase=\"'phone'\"   ><br>{{storyInput?.state}} is required!</span>\r\n\r\n      </span>\r\n      <div   *ngIf=\"formControler?.valid && (formControler?.dirty || formControler?.touched)\">\r\n        <div *ngSwitchCase=\"'username'\">ok!</div>\r\n        <div *ngSwitchCase=\"'password'\">ok!</div>\r\n        <div *ngSwitchCase=\"'email'\"   >ok!</div>\r\n        <div *ngSwitchCase=\"'phone'\"   >ok!</div>\r\n      </div>\r\n\r\n </span>\r\n\r\n  </label>\r\n\r\n\r\n\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n<div id=\"parent2\"  *ngIf=\"storyInput?.state === 'NEW PASSWORD'\">\r\n  <div class=\"absolute\">\r\n    <storybook-pass-strength id=\"pass-strength\" [passwordToCheck]=\"password?.value\" ></storybook-pass-strength>\r\n  </div>\r\n</div>\r\n\r\n</div>\r\n","import {Component, EventEmitter, HostBinding, Inject, Injector, Input, OnInit, Output} from '@angular/core';\r\nimport { StoryInput } from './story-input.model'\r\nimport {\r\n  AbstractControl,\r\n  ControlValueAccessor,\r\n  FormControl,\r\n  FormGroup,\r\n  NG_VALIDATORS,\r\n  Validator,\r\n  Validators\r\n} from \"@angular/forms\";\r\nimport {PopoverOptions} from \"src/stories/directive/popover.interface\";\r\nimport {ActionInputComponent} from \"src/stories/actions/action-input/action-input.component\";\r\nimport {ActionInput} from \"src/stories/actions/action-input/action-input.interface\";\r\n\r\n\r\nexport interface GroupForm {\r\n  username:  FormControl,\r\n  password:  FormControl,\r\n}\r\n\r\nexport interface ValidationForm {\r\n  validationForm2: GroupForm,\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-input',\r\n  templateUrl: './story-input.component.html',\r\n  styleUrls: ['./story-input.scss']\r\n})\r\nexport class StoryInputComponent implements OnInit{\r\n\r\n\r\n\r\n  popover: PopoverOptions = {\r\n    content: ActionInputComponent\r\n  };\r\n\r\n  @Input() storyInput!: StoryInput;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onPinInput = new EventEmitter<Event>();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onArchiveInput = new EventEmitter<Event>();\r\n\r\n\r\n  @Input()\r\n  hideInput = false;\r\n\r\n  showPassChange(): void {\r\n    this.storyInput.type = (this.storyInput?.type == 'password' ? 'text' : 'password')\r\n  }\r\n\r\n  @Input() currentForm!: FormGroup;\r\n\r\n  private isStrength: string = (this.storyInput?.state === 'NEW PASSWORD') ? 'storybook-input--addStrength' : 'storybook-input--clearStrength';\r\n\r\n  public isPasswordTextHide: boolean = false;\r\n\r\n  @Input() conditionList: string[] = [];\r\n  /*registerForm = new FormGroup({\r\n    username: new FormControl('', Validators.minLength(2)),\r\n    password: new FormControl('zaqwsx', Validators.minLength(2))\r\n  });\r\n\r\n\r\n  get username2(): FormControl  {\r\n    return this.currentForm?.controls.username.get();\r\n  }*/\r\n\r\n  get username(): AbstractControl {\r\n    return this.currentForm.get('username')!;\r\n  }\r\n\r\n\r\n  get password(): AbstractControl {\r\n    return this.currentForm.get('password')!;\r\n  }\r\n\r\n  public getErrorHeader(controllerType: string): string {\r\n    let header: string = '';\r\n\r\n    switch (controllerType) {\r\n      case \"phone\":\r\n        header = 'Must contain phone:';\r\n        break;\r\n\r\n      case \"email\":\r\n        header = 'Must contain email:';\r\n        break;\r\n\r\n      case \"oldPassword\":\r\n      case \"confirmPassword\":\r\n      case \"password\":\r\n        header = 'The password must contain:';\r\n        break;\r\n\r\n      default:\r\n        header = controllerType;\r\n    }\r\n\r\n    return header;\r\n  }\r\n\r\n  public getErrorList(conditionList: String[]): ActionInput[] {\r\n\r\n    let passConditions: string[] = [];\r\n\r\n\r\n    var actionInputs: ActionInput[] = [];\r\n\r\n    conditionList.forEach(condition => {\r\n      switch (condition) {\r\n        case \"minLength\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"minLengthValid\",\r\n            \"presentingMessage\": ' A minimum of 8 characters',\r\n            \"isFulfilled\": !(this.minLengthValid || !(this.formControler.value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresUppercase\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresUppercaseValid\",\r\n            \"presentingMessage\": ' At least 1 Uppercase letters',\r\n            \"isFulfilled\": !(this.requiresUppercaseValid || !(this.formControler.value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresLowercase\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresLowercaseValid\",\r\n            \"presentingMessage\": ' At least 1 lowercase letters',\r\n            \"isFulfilled\": !(this.requiresLowercaseValid || !(this.formControler.value.length > 0)),\r\n          })\r\n          break;\r\n\r\n        case \"requiresDigit\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresDigitValid\",\r\n            \"presentingMessage\": ' A number',\r\n            \"isFulfilled\": !(this.requiresDigitValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresSpecialChars\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresSpecialCharsValid\",\r\n            \"presentingMessage\": ' At least 1 special character',\r\n            \"isFulfilled\": !(this.requiresSpecialCharsValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresEmail\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresEmailValid\",\r\n            \"presentingMessage\": ' A well-formed email address',\r\n            \"isFulfilled\": !(this.requiresEmailValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n\r\n        case \"requiresPhone\":\r\n          actionInputs.push({\r\n            \"conditionName\": \"requiresPhoneValid\",\r\n            \"presentingMessage\": ' A well-formed phone number',\r\n            \"isFulfilled\": !(this.requiresPhoneValid || !(this.formControler.value.length > 0))\r\n          })\r\n          break;\r\n      }\r\n    });\r\n\r\n\r\n    return actionInputs;\r\n  }\r\n\r\n  get passwordValid() {\r\n    return this.formControler.errors === null;\r\n  }\r\n\r\n  get requiredValid() {\r\n    return this.formControler.hasError(\"required\");\r\n  }\r\n\r\n  get minLengthValid() {\r\n    return this.formControler.hasError(\"minlength\");\r\n  }\r\n\r\n  get requiresDigitValid() {\r\n    return this.formControler.hasError(\"requiresDigit\");\r\n  }\r\n\r\n  get requiresUppercaseValid() {\r\n    return this.formControler.hasError(\"requiresUppercase\");\r\n  }\r\n\r\n  get requiresLowercaseValid() {\r\n    return this.formControler.hasError(\"requiresLowercase\") ;\r\n  }\r\n\r\n  get requiresSpecialCharsValid() {\r\n    return this.formControler.hasError(\"requiresSpecialChars\");\r\n  }\r\n\r\n  get requiresEmailValid() {\r\n    return this.formControler.hasError(\"email\");\r\n  }\r\n\r\n  get requiresPhoneValid() {\r\n    return this.formControler.hasError(\"requiresPhoneChars\");\r\n  }\r\n\r\n  get formControler(): AbstractControl {\r\n    return this.currentForm.get(this.storyInput?.title.toString())!;\r\n  }\r\n\r\n\r\n  /**\r\n   * Component method to trigger the onPin event\r\n   * @param id string\r\n   */\r\n  onPin(id: any) {\r\n    this.onPinInput.emit(id);\r\n  }\r\n  /**\r\n   * Component method to trigger the onArchive event\r\n   * @param id string\r\n   */\r\n  onArchive(id: any) {\r\n    this.onArchiveInput.emit(id);\r\n  }\r\n\r\n  public get classes(): string[] {\r\n    this.isStrength = (this.storyInput?.state === 'NEW PASSWORD') ? 'storybook-input--addStrength' : 'storybook-input--clearStrength';\r\n\r\n    return ['storybook-input-strength',  this.isStrength];\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.isPasswordTextHide = this.storyInput?.state.includes('PASSWORD');\r\n\r\n  }\r\n\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\n\n\n\n@Component({\n  selector: 'storybook-background1',\n  templateUrl: './background1Component.html',\n  styleUrls: ['./background1Component.scss']\n})\nexport default class Background1Component {\n\n\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = true;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  background?: string;\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Page2Component';\n\n  /*user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n\n  }*/\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-background1--primary' : 'storybook-background1--secondary';\n\n    return ['storybook-background1', mode];\n  }\n\n  constructor() {}\n\n\n\n\n}\n\n","\r\n<figure class=\"Desktop-1Login-1\"  [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': background }\" >\r\n  <!--div [ngStyle]=\"{ 'background-color': background }\" ></div-->\r\n  <img src=\"assets/images/icon-1.webp\" srcset=\"./assets/images/icon-1@2x.webp 2x, /assets/images/icon-1@3x.webp 3x\"\r\n       alt=\"icon-1\" />\r\n\r\n  <img src=\"assets/images/icon-2.webp\" srcset=\"./assets/images/icon-2@2x.webp 2x, /assets/images/icon-2@3x.webp 3x\"\r\n       class=\"icon-2  \" alt=\"icon-2fdf\" />\r\n\r\n\r\n</figure>\r\n\r\n<storybook-button-language size=\"large\"></storybook-button-language>\r\n<storybook-button-tadiran></storybook-button-tadiran>\r\n<storybook-button-globe hidden ></storybook-button-globe>\r\n","import {Component, OnChanges, Input, SimpleChange} from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'storybook-pass-strength',\r\n  templateUrl: './pass-strength.component.html',\r\n  styleUrls: ['./pass-strength.scss']\r\n})\r\nexport default class PassStrengthComponent implements OnChanges  {\r\n\r\n  /**\r\n   * Is this the principal call to action on the login-main?\r\n   */\r\n  @Input() primary: boolean = false;\r\n\r\n\r\n  /**\r\n   * The password strength in percentage.\r\n   */\r\n  @Input() strength: number = 0;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input() backgroundColor?: string;\r\n\r\n  /**\r\n   * The password to measure.\r\n   */\r\n  @Input() passwordToCheck?: string;\r\n\r\n  private static measureStrength(pass: string) {\r\n    let score = 0;\r\n    // award every unique letter until 5 repetitions\r\n    let letters: any = {};\r\n    for (let i = 0; i< pass.length; i++) {\r\n      letters[pass[i]] = (letters[pass[i]] || 0) + 1;\r\n      score += 5.0 / letters[pass[i]];\r\n    }\r\n    // bonus points for mixing it up\r\n    let variations: any = {\r\n      digits: /\\d/.test(pass),\r\n      lower: /[a-z]/.test(pass),\r\n      upper: /[A-Z]/.test(pass),\r\n      nonWords: /\\W/.test(pass),\r\n    };\r\n\r\n    let variationCount = 0;\r\n    for (let check in variations) {\r\n      variationCount += (variations[check]) ? 1 : 0;\r\n    }\r\n    score += (variationCount - 1) * 10;\r\n    return Math.trunc(score);\r\n  }\r\n\r\n  public strengthColor(strength: number) {\r\n\r\n    if (strength < 10) return 0;\r\n    if (strength < 20) return 10;\r\n    if (strength < 30) return 20;\r\n    if (strength < 40) return 30;\r\n    if (strength < 50) return 40;\r\n    if (strength < 60) return 50;\r\n    if (strength < 70) return 60;\r\n    if (strength < 90) return 70;\r\n    if (strength < 99) return 90;\r\n\r\n    return 100;\r\n  }\r\n\r\n  ngOnChanges(changes: {[propName: string]: SimpleChange}): void {\r\n    var password = changes['passwordToCheck'].currentValue;\r\n    if (password) {\r\n      this.strength = PassStrengthComponent.measureStrength(password);\r\n    }\r\n  }\r\n\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-pass-strength--primary' : 'storybook-pass-strength--secondary';\r\n\r\n    return ['storybook-pass-strength', `storybook-pass-strength--${this.strengthColor(this.strength)}`, mode];\r\n  }\r\n\r\n}\r\n\r\n","\r\n<div id=\"PassStrength\" [ngClass]=\"classes\"   class=\"storybook-pass-strength  \" >\r\n  <div class=\"center\"><a class=\"mfont\">Strength : {{this.strength?.toString()}}%</a>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-spinner1',\n  templateUrl: './spinner1.component.html',\n  styleUrls: ['./spinner1.component.css']\n})\nexport class Spinner1Component {\n  /**\n   * Is this the principal call to action on the login-main?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'accGateButton2';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button-ex--primary' : 'storybook-button-ex--secondary';\n\n    return ['storybook-button-ex', `storybook-button-ex--${this.size}`, mode];\n  }\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<button class=\"Vector\" (click)=\"onClick.emit($event)\" >\n\n    <img  [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\"\n       src=\"./assets/images/Spinner1.gif\"\n           class=\"Ex-Icon\"  alt=\"Ex-Icon\"/>\n\n</button>\n\n","/* (ignored) */"]}